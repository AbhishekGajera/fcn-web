{"version":3,"sources":["app/user-pages/Settings.js"],"names":["Settings","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","isDirty","isValid","getValues","useCookies","cookie","setCookie","onClickLogoutHandler","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","onSubmit","data","terms","password","Data","FormData","append","image","ImageUpload","fileResult","error","toast","message","avatar","secure_url","console","log","updateProfile","user","id","result","success","response","process","code","values","strongRegex","RegExp","strongRegexMo","className","src","alt","require","autoComplete","type","placeholder","name","defaultValue","required","email","pattern","dob","contactno","country","selected","registrationType","multiple","onClick","e","preventDefault","element","document","getElementById","click","style","width","disabled"],"mappings":"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","file":"static/js/103.4a9c200e.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { updateProfile, userLogout, ImageUpload } from \"../../utils/APIs\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Settings = () => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid },\r\n    getValues,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const [cookie, setCookie] = useCookies([\"user\"]);\r\n\r\n\r\n  const onClickLogoutHandler = async () => {\r\n    const formData = JSON.stringify({\r\n      refreshToken: localStorage.getItem(\"refreshToken\"),\r\n    });\r\n    setCookie(\"user\", null, { path: \"/\" });\r\n    userLogout(formData).finally(() => {\r\n      history.push(\"/user-pages/login-1\");\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    delete data.terms;\r\n    if (!data.password) {\r\n      delete data.password\r\n    }\r\n    const Data = new FormData();\r\n    Data.append('file', data.image[0]);\r\n    const fileResult = await ImageUpload(Data)\r\n    if (fileResult.error) {\r\n      toast.error(fileResult.error.message);\r\n    } else {\r\n      try {\r\n        delete data.image;\r\n        data.avatar = fileResult.secure_url;\r\n        console.log(\"data\", data)\r\n        const result = await updateProfile(data, cookie?.user?.id);\r\n        setCookie('user', result.data, { path: '/' });\r\n        toast.success(\"Profile updated sucssefully\");\r\n      } catch (error) {\r\n        if (error?.response?.data?.message) {\r\n          toast.error(error?.response?.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n\r\n        if (error?.response?.data?.code === 401) {\r\n          onClickLogoutHandler();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const values = getValues();\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-id');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  var strongRegex = new RegExp(\"^(?=.*[A-Za-z])(?=.*[0-9])(?=.{8,})\");\r\n  var strongRegexMo = new RegExp(\r\n    \"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\"\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex align-items-center auth px-0\">\r\n        <div className=\"row w-100 mx-0\">\r\n          <div className=\"col-lg-7 mx-auto\">\r\n            <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\r\n              <div className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"nav-profile-img\">\r\n                  {cookie?.user?.avatar ? (\r\n                    <img src={cookie?.user?.avatar} alt=\"user\" />\r\n                  ) : (\r\n                    <img src={require(\"../../assets/images/faces/face1.jpg\")}\r\n                      alt=\"user\"\r\n                    />\r\n                  )}\r\n                  <span className=\"availability-status online\"></span>\r\n                </div>\r\n              </div>\r\n              <h4>Change in details?</h4>\r\n              <h6 className=\"font-weight-light\">\r\n                Update your profile is normal, no required to verify again\r\n              </h6>\r\n              <form\r\n                className=\"pt-3\"\r\n                autoComplete=\"new-password\"\r\n                onSubmit={handleSubmit(onSubmit)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    id=\"exampleInputUsername1\"\r\n                    placeholder=\"Username\"\r\n                    name=\"name\"\r\n                    defaultValue={cookie?.user?.name}\r\n                    {...register(\"name\", { required: true })}\r\n                  />\r\n                  {errors && errors.name && <p>name is required field</p>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    id=\"exampleInputEmail1\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    defaultValue={cookie?.user?.email}\r\n                    {...register(\"email\", {\r\n                      required: true,\r\n                      pattern: /^\\S+@\\S+$/i,\r\n                    })}\r\n                  />\r\n                  {errors &&\r\n                    errors.email &&\r\n                    errors.email.type === \"required\" && (\r\n                      <p>email is required field</p>\r\n                    )}\r\n                  {errors &&\r\n                    errors.email &&\r\n                    errors.email.type === \"pattern\" && (\r\n                      <p>invalid email formate</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    id=\"exampleInputUsername1\"\r\n                    placeholder=\"Date of birth\"\r\n                    name=\"dob\"\r\n                    {...register(\"dob\", { required: true })}\r\n                    defaultValue={cookie?.user?.dob}\r\n                  />\r\n                  {errors && errors.dob && <p>birthdate is required field</p>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    id=\"exampleInputUsername1\"\r\n                    placeholder=\"Contact number\"\r\n                    name=\"contactno\"\r\n                    {...register(\"contactno\", {\r\n                      required: true,\r\n                      pattern: strongRegexMo,\r\n                    })}\r\n                    defaultValue={cookie?.user?.contactno}\r\n                  />\r\n                  {errors &&\r\n                    errors.contactno &&\r\n                    errors.contactno.type === \"required\" && (\r\n                      <p>contact number is required field</p>\r\n                    )}\r\n                  {errors &&\r\n                    errors.contactno &&\r\n                    errors.contactno.type === \"pattern\" && (\r\n                      <p>invalid phone number please use valid formate</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    id=\"exampleFormControlSelect2\"\r\n                    defaultValue={cookie?.user?.country}\r\n                    name=\"country\"\r\n                    {...register(\"country\", {\r\n                      required: true,\r\n                    })}\r\n                  >\r\n                    <option>Country</option>\r\n                    <option>United States of America</option>\r\n                    <option selected>India</option>\r\n                    <option>United Kingdom</option>\r\n                    <option>Germany</option>\r\n                    <option>Argentina</option>\r\n                  </select>\r\n                </div>\r\n                {cookie?.user?.registrationType !== 'google' && <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control form-control-lg\"\r\n                    id=\"exampleInputPassword1\"\r\n                    placeholder=\"Password\"\r\n                    autoComplete=\"new-password\"\r\n                    name=\"password\"\r\n                    {...register(\"password\", {\r\n                      required: false,\r\n                      pattern: strongRegex,\r\n                    })}\r\n                  />\r\n                  <p>\r\n                    Note :- if you don't want to update your password then simply leave it blank or fill your new password\r\n                  </p>\r\n\r\n                  {errors &&\r\n                    errors.password &&\r\n                    errors.password.type === \"pattern\" && (\r\n                      <p>\r\n                        password should have at least 8 characters , 1 number\r\n                        and latter\r\n                      </p>\r\n                    )}\r\n                </div>}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    id=\"input-id\"\r\n                    className=\"d-none\"\r\n                    type=\"file\"\r\n                    name=\"image\"\r\n                    multiple={false}\r\n                    {...register(\"image\", { required: true })}\r\n                  />\r\n\r\n                  <button\r\n                    onClick={handleUpload}\r\n                    style={{ width: '100%' }}\r\n                    className={`btn btn-outline-${values?.image?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\r\n                      }`}\r\n                  >\r\n                    {values?.image?.[0]?.name ? values?.image?.[0]?.name : \"Upload Profile\"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                  <div className=\"form-check\">\r\n                    <label className=\"form-check-label text-muted\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"\r\n                        name=\"terms\"\r\n                        {...register(\"terms\", { required: true })}\r\n                      />\r\n                      <i className=\"input-helper\"></i> Confirm your deatils\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                  <button\r\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                    type=\"submit\"\r\n                    disabled={!isDirty || !isValid}\r\n                  >\r\n                    UPDATE PROFILE\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"sourceRoot":""}