{"version":3,"sources":["app/client-component/travel/PassportList.js"],"names":["PassportList","useState","pageCount","setPageCount","useUrl","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","valueToEdit","setvalueToEdit","React","show","setShow","isLoading","setIsLoading","history","useHistory","useForm","mode","register","handleSubmit","reset","formState","errors","isDirty","isValid","useEffect","list","onSubmit","data","id","updatePassport","toast","success","autoClose","response","message","error","process","deletepassport","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","value","deletePassport","dismiss","DismissReason","cancel","getPassports","items","results","totalPages","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","type","name","defaultValue","required","placeholder","surname","style","color","htmlFor","selected","gender","defaultChecked","isOutIndiaBirth","city","moment","dob","format","max","pan","voter","aria-label","href","onClick","event","preventDefault","user","role","aria-current","Fragment","map","item","index","key","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/95.8b098d84.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { deletePassport, updatePassport, getPassports, userLogout } from \"../../../utils/APIs\";\r\nimport Swal from \"sweetalert2\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst PassportList = () => {\r\n  // We start with an empty list of items.\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(20);\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [valueToEdit, setvalueToEdit] = useState({});\r\n  const [show, setShow] = React.useState(false);\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, reset, formState: { errors, isDirty, isValid } } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const handleShow = (value) => {\r\n    reset()\r\n    setvalueToEdit(value)\r\n    setShow(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    setvalueToEdit({})\r\n    reset()\r\n  };\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage]);\r\n\r\n  // Invoke when user click to request another page. \r\n  const handlePageClick = (event) => {\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      data.id = valueToEdit?.id;\r\n      await updatePassport(valueToEdit?.id,data)\r\n      toast.success('Passport updated Successfully', {\r\n        autoClose: 3000\r\n      })\r\n      list()\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    } finally {\r\n      setShow(false)\r\n    }\r\n  };\r\n\r\n  const deletepassport = async (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonColor: \"#DD6B55\",\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        await deletePassport(uid)\r\n        Swal.fire(\r\n          \"Deleted!\",\r\n          \"Your imaginary file has been deleted.\",\r\n          \"success\"\r\n        )\r\n        list()\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const list = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const items = await (\r\n        await getPassports(\r\n          itemsPerPage,\r\n          +itemOffset + 1,\r\n        )\r\n      ).data;\r\n      setitemlist(items?.results);\r\n      setPageCount(items?.totalPages);\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Passport</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row auth\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <p className=\"card-description\"> Update Passport </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Name\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              defaultValue={valueToEdit.name}\r\n                              {...register(\"name\", { required: true })}\r\n                              placeholder=\"name\"\r\n                            />\r\n                            {errors && errors.name && <p>Name is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Surname</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"surname\"\r\n                              defaultValue={valueToEdit.surname}\r\n                              placeholder=\"Enter Your surname\"\r\n                              {...register(\"surname\", { required: true })} />\r\n                            {errors && errors.surname && <p style={{ color: \"red\" }}>surname is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\" htmlFor=\"exampleFormControlSelect1\">Gender</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select className=\"form-control form-control-lg\" name=\"gender\" {...register(\"gender\")} id=\"exampleFormControlSelect1\">\r\n                              <option selected={valueToEdit.gender === 'Male'} value=\"Male\">Male</option>\r\n                              <option selected={valueToEdit.gender === 'Female'} value=\"Female\">Female</option>\r\n                              <option selected={valueToEdit.gender === 'Transgender'} value=\"Transgender\">Transgender</option>\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-6 col-form-label\">Is Your Place of Birth out of India? *</label>\r\n                          <div className=\"col-sm-3\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input type=\"radio\" className=\"form-check-input\" defaultChecked={valueToEdit.isOutIndiaBirth === 'yes'}  name=\"isOutIndiaBirth\" {...register(\"isOutIndiaBirth\", { required: false })} value=\"yes\" id=\"membershipRadios1\" /> Yes\r\n                                <i className=\"input-helper\"></i>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-sm-3\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input type=\"radio\" className=\"form-check-input\" defaultChecked={valueToEdit.isOutIndiaBirth === 'no'} name=\"isOutIndiaBirth\" {...register(\"isOutIndiaBirth\", { required: false })} value=\"no\" id=\"membershipRadios2\" /> No\r\n                                <i className=\"input-helper\"></i>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">City</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"city\"\r\n                              defaultValue={valueToEdit.city}\r\n                              placeholder=\"Enter Your city\"\r\n                              {...register(\"city\", { required: true })} />\r\n                            {errors && errors.city && <p style={{ color: \"red\" }}>City is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\" >\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-5 col-form-label\" htmlFor=\"exampleFormControlSelect1\">Date Of Birth</label>\r\n                          <div className=\"col-sm-7\">\r\n                            <Form.Control type=\"date\"\r\n                              name=\"dob\"\r\n                              defaultValue={moment(valueToEdit.dob).format(\"YYYY-MM-DD\")}\r\n                              placeholder=\"Enter Your Date of Birth\"\r\n                              max={moment().format(\"YYYY-MM-DD\")}\r\n                              {...register(\"dob\", { required: true })} />\r\n                            {errors && errors.dob && <p style={{ color: \"red\" }}>Date of birth is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-5 col-form-label\">PAN Number</label>\r\n                          <div className=\"col-sm-7\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"pan\"\r\n                              defaultValue={valueToEdit.pan}\r\n                              placeholder=\"Enter Your PanNumber\"\r\n                              {...register(\"pan\", { required: true })} />\r\n                            {errors && errors.pan && <p style={{ color: \"red\" }}>PAN Number is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-5 col-form-label\">Voter ID Number</label>\r\n                          <div className=\"col-sm-7\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"voter\"\r\n                              defaultValue={valueToEdit.voter}\r\n                              placeholder=\"Enter Your Voter ID\"\r\n                              {...register(\"voter\", { required: true })} />\r\n                            {errors && errors.voter && <p style={{ color: \"red\" }}>voter id is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                        type=\"submit\"\r\n                      >\r\n                        UPDATE\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </Modal.Body >\r\n      </Modal >\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Travel / Show Passport </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show Passport\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n              </div>\r\n            </div>\r\n            <h4 className=\"card-title\">Passports list</h4>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Name </th>\r\n                    <th> Pancard </th>\r\n                    <th> City </th>\r\n                    <th> Voter Id </th>\r\n                    <th> Date of Birth </th>\r\n                    <th> Edit </th>\r\n                    <th> Delete </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    isLoading ? <React.Fragment><Spinner /></React.Fragment>\r\n                      :\r\n                      itemlist?.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{item?.name +' '+ item?.surname}</td>\r\n                            <td>{item?.pan}</td>\r\n                            <td>{item?.city}</td>\r\n                            <td>{item?.voter}</td>\r\n                            <td>{moment(item?.dob).format('DD/MM/YYYY')}</td>\r\n                            <td><i onClick={() => handleShow(item)} className=\"mdi mdi-lead-pencil\"></i></td>\r\n                            <td>\r\n                              <i\r\n                                onClick={() => deletepassport(item?.id)}\r\n                                className=\"mdi mdi-delete\"\r\n                              ></i>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default PassportList;\r\n"],"sourceRoot":""}