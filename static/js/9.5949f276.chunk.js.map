{"version":3,"sources":["utils/Functions/passwordGenerator.js","utils/Functions/commonOptions.js","utils/Functions/useDebounce.js","app/Admin-components/BranchesList/index.js"],"names":["password_generator","len","length","string","password","character","entity1","Math","ceil","random","entity2","entity3","hold","charAt","toUpperCase","split","sort","join","substr","statusOption","value","label","roleOption","formateStatus","status","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","BranchList","searchTerm","setSearchTerm","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","React","show","setShow","valueToEdit","setvalueToEdit","updateStatus","setupdateStatus","roleUpdate","setroleUpdate","debouncedSearchTerm","useCookies","cookies","setCookie","itemlist","setitemlist","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","strongRegexMo","isDirty","isValid","RegExp","generatePassword","id","randomPassword","newPassword","JSON","stringify","updateProfile","toast","success","autoClose","error","onSubmit","data","role","updatedData","list","response","message","process","code","formData","refreshToken","localStorage","getItem","path","userLogout","finally","push","getBranches","items","results","totalPages","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","type","name","defaultValue","required","contactno","pattern","email","onChange","e","target","map","i","selected","aria-label","href","onClick","event","preventDefault","user","aria-current","action","placeholder","item","branch","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","deleteUsr","dismiss","DismissReason","cancel","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/9.5949f276.chunk.js","sourcesContent":["export const password_generator = ( len ) => {\n    let length = (len)?(len):(10);\n    let string = \"abcdefghijklmnopqrstuvwxyz\"; //to upper \n    let numeric = '0123456789';\n    let punctuation = '!@#$%^&*()_+~`|}{[]\\:;?><,./-=';\n    let password = \"\";\n    let character = \"\";\n    let crunch = true;\n    while( password.length<length ) {\n       let entity1 = Math.ceil(string.length * Math.random()*Math.random());\n       let entity2 = Math.ceil(numeric.length * Math.random()*Math.random());\n       let entity3 = Math.ceil(punctuation.length * Math.random()*Math.random());\n       let hold = string.charAt( entity1 );\n        hold = (password.length%2==0)?(hold.toUpperCase()):(hold);\n        character += hold;\n        character += numeric.charAt( entity2 );\n        character += punctuation.charAt( entity3 );\n        password = character;\n    }\n    password=password.split('').sort(function(){return 0.5-Math.random()}).join('');\n    return password.substr(0,len);\n}\n","export const statusOption = [\n    { value : 0, label : 'Active' },\n    { value : 1, label : 'In Active' },\n    { value : 2, label : 'Terminated' }\n]\n\nexport const roleOption = [\n    { value : 'user', label : 'User' },\n    { value : 'admin', label : 'Admin' },\n    { value : 'IBO', label : 'IBO' },\n    { value : 'branch', label : 'Branch' }\n]\n\nexport const formateStatus = (status) => {\n    switch (+status) {\n        case (0):\n            return 'Active';\n        case (1):\n            return 'In Active';\n        case (2):\n            return 'Terminated'            \n        default:\n            return 'Active';\n    }\n}","import { useEffect, useState } from \"react\";\n\n// Hook\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay] // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n  }","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport {\n  userLogout,\n  deleteUsr,\n  updateProfile,\n  getBranches,\n} from \"../../../utils/APIs\";\nimport Swal from \"sweetalert2\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from 'react-bootstrap';\nimport {toast} from 'react-toastify';\nimport { useHistory } from 'react-router-dom'\nimport { statusOption,formateStatus,roleOption } from \"../../../utils/Functions/commonOptions\";\nimport { password_generator } from \"../../../utils/Functions/passwordGenerator\";\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\n\n\nconst BranchList = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n\n  // We start with an empty list of items.\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n  const [itemsPerPage] = useState(10);\n  const [show, setShow] = React.useState(false);\n  const [valueToEdit, setvalueToEdit] = useState({});\n  const [updateStatus, setupdateStatus] = useState(0);\n  const [roleUpdate, setroleUpdate] = useState('')\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n\n  const onChangeRolepdate = (e) => {\n    setroleUpdate(e?.target?.value)\n  }\n  const [cookies, setCookie] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n  const history = useHistory()\n\n  const { register, handleSubmit, formState: { errors , isDirty, isValid } } = useForm({\n    mode: \"onChange\"\n  });\n  var strongRegexMo = new RegExp(\n    \"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\"\n  );\n\n  const handleClose = () => {\n    setShow(false)\n    setvalueToEdit({})\n    setupdateStatus(0)\n  };\n\n  const onChangeStatusForm = (e) => {\n    setupdateStatus(+e?.target?.value || 0)\n  }\n\n  const handleShow = (value) =>{ \n    setvalueToEdit(value)\n    setupdateStatus(value?.status || 0)\n    setroleUpdate(value?.role)\n    setShow(true);\n  }\n  const generatePassword = async (id) => {\n    const randomPassword = password_generator();\n    const newPassword = JSON.stringify({\n      password : randomPassword\n    })\n\n    try {\n     await updateProfile(newPassword,id)\n     toast.success('Password generated and sended to user via Email successfully',{ autoClose : 3000 })\n    } catch (error) {\n      toast.error('Password generation failed, please try again later')\n    }\n    \n  };\n  const onSubmit = async (data) => {\n    data.status = updateStatus;\n    data.role = roleUpdate\n    try {\n      const updatedData = JSON.stringify(data)\n      await updateProfile(updatedData,valueToEdit?.id)\n      toast.success('User updated Successfully',{\n        autoClose : 3000\n      })\n      list()\n    } catch (error) {\n      if (error?.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n\n      if (error?.response?.data?.code === 401) {\n        const formData = JSON.stringify({\n          refreshToken: localStorage.getItem(\"refreshToken\"),\n        });\n        setCookie(\"user\", null, { path: \"/\" });\n        userLogout(formData).finally(() => {\n          history.push(\"/user-pages/login-1\");\n        });\n      }\n    } finally {\n      setShow(false)\n    }\n  };\n\n\n\n  useEffect(() => {\n    list()\n  }, [itemOffset, itemsPerPage]);\n\n  useEffect(() => {\n    list()\n  }, [debouncedSearchTerm]);\n \n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    setItemOffset(event.selected);\n  };\n\n  const deleteBranch =(uid)=>{\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonColor: \"#DD6B55\",\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, keep it\",\n    }).then((result) => {\n      if (result.value) {\n        return (\n          deleteUsr(uid).finally(() => list()),\n          Swal.fire(\n            \"Deleted!\",\n            \"Your imaginary file has been deleted.\",\n            \"success\",\n          )\n        );\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n      }\n    });\n  }\n\n\n  const list = async () => {\n    const items = await (await getBranches(itemsPerPage, (+itemOffset + 0),searchTerm)).data;\n    setitemlist(items?.results);\n    setPageCount(items?.totalPages);\n  }\n\n  return (\n    <div>\n         <Modal\n      show={show}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Update Client</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <div className=\"row auth\">\n        <div className=\"col-12 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                <p className=\"card-description\"> Update Client </p>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">Name</label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"name\"\n                          defaultValue={valueToEdit.name}\n                          {...register(\"name\", { required: true })}\n                       \n                        />\n                        {errors && errors.name && <p>name is required field</p>}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Contact No\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"contactno\"\n                          defaultValue={valueToEdit.contactno}\n                          {...register(\"contactno\", {\n                            required: true,\n                            pattern: strongRegexMo,\n                          })}\n                        />\n                        {errors &&\n                          errors.contactno &&\n                          errors.contactno.type === \"required\" && (\n                            <p>contact number is required field</p>\n                          )}\n                        {errors &&\n                          errors.contactno &&\n                          errors.contactno.type === \"pattern\" && (\n                            <p>invalid phone number please use valid formate</p>\n                          )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                  </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">Email</label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"email\"\n                          defaultValue={valueToEdit.email}\n\n                          {...register(\"email\", {\n                            required: true,\n                            pattern: /^\\S+@\\S+$/i,\n                          })}\n                        />\n                        {errors &&\n                          errors.email &&\n                          errors.email.type === \"required\" && (\n                            <p>email is required field</p>\n                          )}\n                        {errors &&\n                          errors.email &&\n                          errors.email.type === \"pattern\" && (\n                            <p>invalid email formate</p>\n                          )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            status\n                          </label>\n                          <div className=\"col-sm-9\">\n                            <select\n                              className=\"form-control form-control-sm\"\n                              id=\"exampleFormControlSelect3\"\n                              name=\"status\"\n                              onChange={onChangeStatusForm}\n                            >\n                              {statusOption?.map((i) => {\n                                return (\n                                  <option\n                                    value={i?.value}\n                                    selected={+updateStatus === +i?.value}\n                                  >\n                                    {i?.label}\n                                  </option>\n                                );\n                              })}\n                            </select>\n                          </div>\n                        </Form.Group>\n                      </div>\n                    </div>\n\n\n<div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Select Role\n                          </label>\n                          <div className=\"col-sm-9\">\n                            <select\n                              className=\"form-control form-control-sm\"\n                              id=\"exampleFormControlSelect2\"\n                              name=\"branch\"\n                              onChange={onChangeRolepdate}\n                            >\n                              {roleOption?.map((i) => {\n                                return (\n                                  <>\n                                    <option\n                                      selected={i.value === roleUpdate}\n                                      value={i.value}\n                                    >\n                                      {i.label}\n                                    </option>\n                                  </>\n                                );\n                              })}\n                            </select>\n                          </div>\n                        </Form.Group>\n                      </div>\n                    </div>\n              \n             \n\n                <div className=\"mt-3\">\n                  <button\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                  >\n                    UPDATE\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      </Modal.Body>\n     \n    \n    </Modal>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">branches / Fetch Branch </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Fetch branches\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n          <div className=\"row\">\n          <div className=\"col-md-6\">\n            </div>\n\n              <div className=\"col-md-6\">\n                <div className=\"search-field d-none d-md-block\">\n                  <form className=\"d-flex align-items-center h-100\" action=\"#\">\n                    <div className=\"input-group\">\n                      <div className=\"input-group-prepend outline-gray bg-transparent\">\n                        <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"form-control outline-gray bg-transparent border-0\"\n                        placeholder=\"Search Clients\"\n                        value={searchTerm}\n                        onChange={(e) => {\n                          setSearchTerm(e?.target?.value);\n                          setItemOffset(0);\n                        }}\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <h4 className=\"card-title\">Branch list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Name </th>\n                    <th> Contact no. </th>\n                    <th> Branch </th>\n                    <th> Email </th>\n                    <th> Role </th>\n                    <th> Status </th>\n                    <th> Generate Password </th>\n                    <th> Edit </th>\n                    <th> Delete </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {itemlist?.map((item) => {\n                    return (\n                      <tr>\n                        <td>{item?.name}</td>\n                        <td>{item?.contactno}</td>\n                        <td>{item?.branch}</td>\n                        <td>{item?.email}</td>\n                        <td>{item?.role}</td>\n                        <td>{formateStatus(item?.status)}</td>\n                        {/* <td>\n                          <label className=\"badge badge-gradient-success\">\n                            Active\n                          </label>\n                          <label className=\"badge badge-gradient-danger\">\n                            Inactive\n                          </label>\n                        </td> */}\n                        <td>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-gradient-primary btn-sm \"\n                            onClick={() => generatePassword(item?.id)}\n                          >\n                            Generate\n                          </button>\n                        </td>\n                        <td>\n                          <i onClick={()=> handleShow(item)} className=\"mdi mdi-lead-pencil\"></i>\n                        </td>\n                        <td>\n                          <i  onClick={()=> deleteBranch(item?.id)} className=\"mdi mdi-delete\"></i>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n                forcePage={itemOffset}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BranchList;\n"],"sourceRoot":""}