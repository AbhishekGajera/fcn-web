{"version":3,"sources":["utils/Functions/commonOptions.js","app/Admin-components/Target/Targets.js"],"names":["statusOption","value","label","roleOption","roleOptionForAmin","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","formateStatusForTargets","Targets","useCookies","cookies","history","useHistory","useState","productList","setproductList","IBOs","setIBOs","branches","setbranches","previousSelectedType","setpreviousSelectedType","useEffect","getAllProducts","getIBOList","getBrancheList","getProductsList","allProducts","data","results","getIBOs","allIBOs","setValue","id","clearErrors","getBranches","allBranches","useForm","mode","register","handleSubmit","formState","errors","getValues","isDirty","isValid","watch","values","watchAllFields","addto","onSubmit","jsonData","JSON","stringify","product","selectProduct","user","selectUser","userType","Description","description","qty","CreateTargets","toast","success","push","response","message","error","process","className","aria-label","href","onClick","event","preventDefault","role","aria-current","style","display","justifyContent","Group","Control","as","type","name","required","placeholder","map","item","index","key"],"mappings":"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","file":"static/js/30.be73d66f.chunk.js","sourcesContent":["export const statusOption = [\r\n    { value : 0, label : 'Active' },\r\n    { value : 1, label : 'In Active' },\r\n    { value : 2, label : 'Terminated' }\r\n]\r\n\r\nexport const roleOption = [\r\n    { value : 'user', label : 'User' },\r\n    { value : 'admin', label : 'Admin' },\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const roleOptionForAmin = [\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const timeOption = [\r\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\r\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\r\n]\r\n\r\nexport const optionForExpenceType = [\r\n    { value : 'Office expence', label : 'Office expence' },\r\n    { value : 'Employee expence', label : 'Employee expence' },\r\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\r\n    { value : 'Other expence', label : 'Other expence' }\r\n]\r\n\r\nexport const optionForCostCategory = [\r\n    { value : 'Petrol', label : 'Petrol' },\r\n    { value : 'Food', label : 'Food' },\r\n    { value : 'Rent', label : 'Rent' },\r\n    { value : 'Tea', label : 'Tea' },\r\n    { value : 'Transport', label : 'Transport' },\r\n    { value : 'Gift', label : 'Gift' },\r\n    { value : 'Printing', label : 'Printing' },\r\n    { value : 'Advertising', label : 'Advertising' },\r\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\r\n    { value : 'Cleaning', label : 'Cleaning' },\r\n    { value : 'Salary', label : 'Salary' },\r\n    { value : 'Medical Expences', label : 'Medical Expences' },\r\n    { value : 'Insurance', label : 'Insurance' },\r\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\r\n    { value : 'Phone Bill', label : 'Phone Bill' },\r\n    { value : 'Internet Bill', label : 'Internet Bill' },\r\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\r\n    { value : 'Depreciation', label : 'Depreciation' },\r\n    { value : 'Row materials', label : 'Row materials' },\r\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\r\n]\r\n\r\nexport const formateStatus = (status) => {\r\n    switch (+status) {\r\n        case (0):\r\n            return 'Active';\r\n        case (1):\r\n            return 'In Active';\r\n        case (2):\r\n            return 'Terminated'            \r\n        default:\r\n            return 'Active';\r\n    }\r\n}\r\n\r\nexport const formateStatusForTargets = (status) => {\r\n    switch (+status) {\r\n        case (1):\r\n            return 'Running';\r\n        case (2):\r\n            return 'Finished';\r\n        case (3):\r\n            return 'Cancelled';\r\n        case (4):\r\n            return 'Archieved';         \r\n        default:\r\n            return 'Cancelled';\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  getProductsList,\r\n  CreateTargets,\r\n  getIBOs,\r\n  getBranches,\r\n} from \"../../../utils/APIs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { roleOptionForAmin } from \"../../../utils/Functions/commonOptions\";\r\n\r\nconst Targets = () => {\r\n  const [cookies] = useCookies([\"user\"]);\r\n  const history = useHistory();\r\n  const [productList, setproductList] = useState([]);\r\n  const [IBOs, setIBOs] = useState([]);\r\n  const [branches, setbranches] = useState([]);\r\n  const [previousSelectedType, setpreviousSelectedType] = useState('IBO')\r\n\r\n  useEffect(() => {\r\n    getAllProducts();\r\n    getIBOList();\r\n    getBrancheList();\r\n  }, []);\r\n\r\n  const getAllProducts = async () => {\r\n    const allProducts = await getProductsList(3000);\r\n    setproductList(allProducts?.data?.results);\r\n    // setValue('selectProduct',allProducts?.data?.results[0]?.id)\r\n  };\r\n\r\n  const getIBOList = async () => {\r\n    const allIBOs = await getIBOs(5000);\r\n    setIBOs(allIBOs?.data?.results);\r\n    setValue('selectUser',allIBOs?.data?.results[0]?.id)\r\n    clearErrors('selectUser')\r\n  };\r\n\r\n  const getBrancheList = async () => {\r\n    const allBranches = await getBranches(5000);\r\n    setbranches(allBranches?.data?.results);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid },\r\n    getValues,\r\n    watch,\r\n    setValue,\r\n    clearErrors\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const values = getValues();\r\n  const watchAllFields = watch(); // when pass nothing as argument, you are watching everything\r\n \r\n  useEffect(() => {\r\n    if('branch' === watchAllFields?.addto && previousSelectedType !== 'branch'){\r\n      setpreviousSelectedType('branch')\r\n      setValue('selectUser',branches[0].id)\r\n    }\r\n\r\n    if('IBO' === watchAllFields?.addto && previousSelectedType !== 'IBO'){\r\n      setpreviousSelectedType('IBO')\r\n      setValue('selectUser',IBOs[0].id)\r\n    }\r\n\r\n  },[watchAllFields])\r\n\r\n  const onSubmit = async (data) => {\r\n    const jsonData = JSON.stringify({\r\n      product: data?.selectProduct,\r\n      user: data?.selectUser,\r\n      userType: data?.addto,\r\n      Description: data?.description,\r\n      qty: data?.qty,\r\n      status: 1\r\n    });\r\n    try {\r\n      await CreateTargets(jsonData);\r\n      toast.success(\"Target added successfully\");\r\n      history.push(\"/targets/viewtarget\");\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Targets / Add Target </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Add Target\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n\r\n      <div\r\n        className=\"row auth\"\r\n        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <div className=\"col-lg-6 col-md-8 col-sm-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                <p className=\"card-description\"> Add Target </p>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Description\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          type=\"text\"\r\n                          name=\"description\"\r\n                          {...register(\"description\", { required: true })}\r\n                          placeholder=\"description\"\r\n                        />\r\n                        {errors && errors.description && (\r\n                          <p>Description is required field</p>\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Add to</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"addto\"\r\n                          {...register(\"addto\", {\r\n                            required: true,\r\n                          })}\r\n                        >\r\n                          {roleOptionForAmin.map((item, index) => (\r\n                            <option\r\n                              key={index}\r\n                              value={item?.value}\r\n                              label={item?.label}\r\n                            ></option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Select Product\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"selectProduct\"\r\n                          {...register(\"selectProduct\", {\r\n                            required: true,\r\n                          })}\r\n                        >\r\n                          <option value=''>--Select Product--</option>\r\n                          {productList?.map((item, index) => (\r\n                            <option\r\n                              key={index}\r\n                              value={item?.id}\r\n                              label={item?.name}\r\n                            ></option>\r\n                          ))}\r\n                        </select>\r\n                       \r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                {values?.addto === \"branch\" && <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Select Users\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"selectUser\"\r\n                          {...register(\"selectUser\", {\r\n                            required: false,\r\n                          })}\r\n                        >\r\n                          <option value=''>--Select User--</option>\r\n                          {\r\n                            branches?.map((item, index) => (\r\n                              <option\r\n                                key={index}\r\n                                value={item?.id}\r\n                                label={item?.name}\r\n                              ></option>\r\n                            ))}\r\n                        </select>\r\n                      \r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>}\r\n\r\n                { values?.addto === \"IBO\" && <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Select Users\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"selectUser\"\r\n                          {...register(\"selectUser\", {\r\n                            required: true,\r\n                          })}\r\n                          >\r\n                          {\r\n                            IBOs?.map((item, index) => (\r\n                              <option\r\n                                key={index}\r\n                                value={item?.id}\r\n                                label={item?.name}\r\n                              ></option>\r\n                            ))}\r\n                        </select>\r\n                        \r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>}\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Quantity{\" \"}\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          {...register(\"qty\", { required: false })}\r\n                          placeholder=\"qty\"\r\n                        />\r\n                        \r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"mt-3\"\r\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                  <button\r\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                    type=\"submit\"\r\n                  >\r\n                    SUBMIT\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Targets;\r\n"],"sourceRoot":""}