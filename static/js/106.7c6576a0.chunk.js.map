{"version":3,"sources":["app/user-pages/Login.js"],"names":["Login","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","isDirty","isValid","useCookies","setCookie","useState","show","setShow","onSubmit","data","terms","login","result","console","info","user","auth","first_name","last_name","name","dob","contactno","role","isEmailVerified","email","IBO","id","path","localStorage","setItem","tokens","access","token","refresh","push","toast","success","response","message","error","process","className","src","require","alt","Group","Control","type","placeholder","size","required","pattern","style","position","onClick","cursor","top","right","password","disabled","to"],"mappings":"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","file":"static/js/106.7c6576a0.chunk.js","sourcesContent":["import React ,{useState}from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useCookies } from \"react-cookie\";\nimport { googleLoginHandler, login } from \"../../utils/APIs\";\nimport { toast } from \"react-toastify\";\nimport GoogleLogin from \"react-google-login\";\n\nconst Login = () => {\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  const [, setCookie] = useCookies([\"user\"]);\n  const[show,setShow] = useState(false)\n\n  const onSubmit = async (data) => {\n    delete data.terms;\n\n\n    try {\n      const result = await login(data);\n      console.info(\"data++ \", result.data.user)\n      result.data.user.auth = \"verified\";\n      setCookie(\"user\", {\n        first_name: result?.data?.user?.first_name,\n        last_name: result?.data?.user?.last_name,\n        name: result?.data?.user.name,\n        dob: result?.data?.user?.dob,\n        contactno: result?.data?.user?.contactno,\n        auth: result?.data?.user?.auth,\n        role: result?.data?.user?.role,\n        isEmailVerified: result?.data?.user?.isEmailVerified,\n        email: result?.data?.user?.email,\n        IBO: {\n          first_name: result?.data?.user?.IBO?.first_name,\n          last_name: result?.data?.user?.IBO?.last_name,\n          name: result?.data?.user?.IBO?.name,\n          id: result?.data?.user?.IBO?.id,\n        },\n        id: result?.data?.user?.id\n      }, { path: \"/\" });\n      localStorage.setItem(\"accessToken\", result.data.tokens.access.token);\n      localStorage.setItem(\"refreshToken\", result.data.tokens.refresh.token);\n      history.push(\"/dashboard\");\n      toast.success(\"login Successfully\");\n    } catch (error) {\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n    }\n  };\n\n  const handleLogin = async (googleData) => {\n    const formData = JSON.stringify({\n      token: googleData.tokenId,\n    });\n\n    try {\n      const result = await googleLoginHandler(formData);\n      result.data.user.auth = \"verified\";\n      setCookie(\"user\", result.data.user, { path: \"/\" });\n      localStorage.setItem(\"accessToken\", result.data.tokens.access.token);\n      localStorage.setItem(\"refreshToken\", result.data.tokens.refresh.token);\n      toast.success(\"login sucssefully\");\n      history.push(\"/dashboard\");\n\n    } catch (error) {\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n    }\n  };\n\n  const handleLoginFailure = (res) => {\n    toast.error(res.error);\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex align-items-center login-auth auth px-0\">\n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-4 mx-auto\">\n            <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\n              <div className=\"brand-logo\">\n                <img\n                  src={require(\"../../assets/images/fcn_logo.png\")}\n                  alt=\"logo\"\n                />\n              </div>\n              <h4>Hello! let's get started</h4>\n              <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n              <Form className=\"pt-3\" onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"d-flex flex-wrap search-field\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    size=\"lg\"\n                    name=\"email\"\n                    className=\"h-auto\"\n                    {...register(\"email\", {\n                      required: true,\n                      pattern: /^\\S+@\\S+$/i,\n                    })}\n                  />{\" \"}\n                  <br />\n                  {errors &&\n                    errors.email &&\n                    errors.email.type === \"required\" && (\n                      <p>email is required field</p>\n                    )}\n                  {errors &&\n                    errors.email &&\n                    errors.email.type === \"pattern\" && (\n                      <p>invalid email formate</p>\n                    )}\n                </Form.Group>\n                <Form.Group className=\"d-flex flex-wrap search-field\" style={{position:'relative'}}>\n                    <Form.Control\n                      type={show ? \"text\" : \"password\"}\n                      placeholder=\"Password\"\n                      size=\"lg\"\n                      className=\"h-auto\"\n                      name=\"password\"\n                      {...register(\"password\", { required: true })}\n                    />{\" \"}\n                    {show ? (\n                    <i className=\"mdi mdi-eye\" onClick={()=> {setShow(!show)}} style={{cursor:'pointer',position:'absolute',top:'15px',right:'15px'}}></i>\n                    ) : (\n                    <i className=\"mdi mdi-eye-off\" onClick={()=> {setShow(!show)}} style={{cursor:'pointer',position:'absolute',top:'15px',right:'15px'}}></i>\n                    )}\n                    <br />\n                  {errors && errors.password && (\n                    <p>password is required field</p>\n                  )}\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <button\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    disabled={!isDirty || !isValid}\n                  >\n                    SIGN IN\n                  </button>\n                </div>\n                <div className=\"my-2 d-flex justify-content-between align-items-center\">\n                  <div className=\"form-check\">\n                    <label className=\"form-check-label text-muted\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                        name=\"terms\"\n                        {...register(\"terms\")}\n                      />\n                      <i className=\"input-helper\"></i>\n                      Keep me signed in\n                    </label>\n                  </div>\n                  <Link\n                    to=\"/user-pages/forgot-password-1\"\n                    className=\"auth-link text-black\"\n                  >\n                    Forgot password?\n                  </Link>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}