{"version":3,"sources":["utils/Functions/useUrl.js","utils/Functions/useDebounce.js","utils/Functions/commonOptions.js","app/Admin-components/Target/ViewTargets.js"],"names":["useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","useState","value","setValue","val","set","replace","toString","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","statusOption","label","roleOption","roleOptionForAmin","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","formateStatusForTargets","ViewTargets","searchTerm","setSearchTerm","debouncedSearchTerm","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","React","show","setShow","valueToEdit","setvalueToEdit","useCookies","cookies","setCookie","itemlist","setitemlist","isLoading","setIsLoading","list","useForm","mode","register","handleSubmit","reset","formState","errors","onSubmit","isDirty","isValid","data","target_id","id","updatedData","JSON","stringify","UpdateTargets","toast","success","autoClose","response","message","error","process","user","role","getTargetsList","items","getTargetsListByUser","results","totalPages","code","formData","refreshToken","localStorage","getItem","path","userLogout","finally","push","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","as","type","name","defaultValue","Description","required","placeholder","map","item","index","key","selected","userType","aria-label","href","onClick","event","preventDefault","aria-current","action","onChange","e","target","includes","Fragment","product","qty","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","deleteTargetById","dismiss","DismissReason","cancel","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/24.546164a1.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useUrl = (param) => {\n\n    const history = useHistory()\n    const { search, pathname } = useLocation()\n    const url = new URLSearchParams(search)\n\n    const urlParam = url.get(param)\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\n\n    function _setValue(val){\n        url.set(param, val)\n        history.replace({ pathname, search: url.toString() }); \n        setValue(val)\n    }\n\n    return [value, _setValue]\n}","import { useEffect, useState } from \"react\";\n\n// Hook\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay] // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n  }","export const statusOption = [\n    { value : 0, label : 'Active' },\n    { value : 1, label : 'In Active' },\n    { value : 2, label : 'Terminated' }\n]\n\nexport const roleOption = [\n    { value : 'user', label : 'User' },\n    { value : 'admin', label : 'Admin' },\n    { value : 'IBO', label : 'IBO' },\n    { value : 'branch', label : 'Branch' }\n]\n\nexport const roleOptionForAmin = [\n    { value : 'IBO', label : 'IBO' },\n    { value : 'branch', label : 'Branch' }\n]\n\nexport const timeOption = [\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\n]\n\nexport const optionForExpenceType = [\n    { value : 'Office expence', label : 'Office expence' },\n    { value : 'Employee expence', label : 'Employee expence' },\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\n    { value : 'Other expence', label : 'Other expence' }\n]\n\nexport const optionForCostCategory = [\n    { value : 'Petrol', label : 'Petrol' },\n    { value : 'Food', label : 'Food' },\n    { value : 'Rent', label : 'Rent' },\n    { value : 'Tea', label : 'Tea' },\n    { value : 'Transport', label : 'Transport' },\n    { value : 'Gift', label : 'Gift' },\n    { value : 'Printing', label : 'Printing' },\n    { value : 'Advertising', label : 'Advertising' },\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\n    { value : 'Cleaning', label : 'Cleaning' },\n    { value : 'Salary', label : 'Salary' },\n    { value : 'Medical Expences', label : 'Medical Expences' },\n    { value : 'Insurance', label : 'Insurance' },\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\n    { value : 'Phone Bill', label : 'Phone Bill' },\n    { value : 'Internet Bill', label : 'Internet Bill' },\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\n    { value : 'Depreciation', label : 'Depreciation' },\n    { value : 'Row materials', label : 'Row materials' },\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\n]\n\nexport const formateStatus = (status) => {\n    switch (+status) {\n        case (0):\n            return 'Active';\n        case (1):\n            return 'In Active';\n        case (2):\n            return 'Terminated'            \n        default:\n            return 'Active';\n    }\n}\n\nexport const formateStatusForTargets = (status) => {\n    switch (+status) {\n        case (1):\n            return 'Running';\n        case (2):\n            return 'Finished';\n        case (3):\n            return 'Cancelled';\n        case (4):\n            return 'Archieved';         \n        default:\n            return 'Cancelled';\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from 'react-bootstrap';\nimport {\n  deleteTargetById,\n  getTargetsList,\n  UpdateTargets,\n  userLogout,\n  getTargetsListByUser\n} from \"../../../utils/APIs\";\nimport Swal from \"sweetalert2\";\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\nimport Spinner from \"../../shared/Spinner\";\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { formateStatusForTargets, roleOptionForAmin } from \"../../../utils/Functions/commonOptions\";\n\nconst ViewTargets = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  // We start with an empty list of items.\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\n  const [itemsPerPage] = useState(10);\n  const [show, setShow] = React.useState(false);\n  const [valueToEdit, setvalueToEdit] = useState({});\n  const [cookies, setCookie] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    list();\n  }, [itemOffset, itemsPerPage, debouncedSearchTerm]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    setItemOffset(event.selected);\n  };\n\n  const { register, handleSubmit, reset, formState: { errors, isDirty, isValid } } = useForm({\n    mode: \"onChange\"\n  });\n\n  const handleClose = () => {\n    setShow(false)\n    setvalueToEdit({})\n    reset()\n  };\n\n  const handleShow = (value) => {\n    reset()\n    setvalueToEdit(value)\n    setShow(true);\n  }\n\n  const deleteTarget = (uid) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonColor: \"#DD6B55\",\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, keep it\",\n    }).then((result) => {\n      if (result.value) {\n        return (\n          deleteTargetById(uid).finally(() => list()),\n          Swal.fire(\n            \"Deleted!\",\n            \"Your imaginary file has been deleted.\",\n            \"success\"\n          )\n        );\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n      }\n    });\n  };\n\n  const onSubmit = async (data) => {\n    try {\n      data.target_id =  valueToEdit?.id;\n      const updatedData = JSON.stringify(data)\n      await UpdateTargets(updatedData)\n      toast.success('Target updated Successfully', {\n        autoClose: 3000\n      })\n      list()\n    } catch (error) {\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n    } finally {\n      setShow(false)\n    }\n  };\n\n  const list = async () => {\n    setIsLoading(true);\n    try {\n      let items\n\n      if (cookies?.user?.role === 'admin') {\n        items = await (\n          await getTargetsList(itemsPerPage, +itemOffset + 1)\n        ).data;\n      }\n\n      if (cookies?.user?.role !== 'admin') {\n        items = await (\n          await getTargetsListByUser(itemsPerPage, +itemOffset + 1, cookies?.user?.id)\n        ).data;\n      }\n      setitemlist(items?.results);\n      setPageCount(items?.totalPages);\n      setIsLoading(false);\n    } catch (error) {\n      if (error?.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n\n      if (error?.response?.data?.code === 401) {\n        const formData = JSON.stringify({\n          refreshToken: localStorage.getItem(\"refreshToken\"),\n        });\n        setCookie(\"user\", null, { path: \"/\" });\n        userLogout(formData).finally(() => {\n          history.push(\"/user-pages/login-1\");\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Update Target</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row auth\">\n            <div className=\"col-12 grid-margin\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                    <p className=\"card-description\"> Update Target </p>\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Description\n                          </label>\n                          <div className=\"col-sm-9\">\n                            <Form.Control\n                              as=\"textarea\"\n                              type=\"text\"\n                              name=\"Description\"\n                              defaultValue={valueToEdit.Description}\n                              {...register(\"Description\", { required: true })}\n                              placeholder=\"Description\"\n                            />\n                            {errors && errors.Description && (\n                              <p>Description is required field</p>\n                            )}\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\"> User Type</label>\n                          <div className=\"col-sm-9\">\n                            <select\n                              className=\"form-control form-control-lg\"\n                              id=\"exampleFormControlSelect2\"\n                              name=\"userType\"\n                              {...register(\"userType\", {\n                                required: true,\n                              })}\n                            >\n                              {roleOptionForAmin.map((item, index) => (\n                                <option\n                                  key={index}\n                                  value={item?.value}\n                                  label={item?.label}\n                                  selected={valueToEdit.userType === item?.value}\n                                ></option>\n                              ))}\n                            </select>\n                          </div>\n                        </Form.Group>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n\n                      </div>\n                    </div>\n\n                    <div className=\"mt-3\">\n                      <button\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                        type=\"submit\"\n                      >\n                        UPDATE\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n\n\n      </Modal>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Targets / Show Targets </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Show Targets\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-md-6\"></div>\n\n              <div className=\"col-md-6\">\n                <div className=\"search-field d-none d-md-block\">\n                  <form className=\"d-flex align-items-center h-100\" action=\"#\">\n                    <div className=\"input-group\">\n                      <div className=\"input-group-prepend outline-gray bg-transparent\">\n                        <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"form-control outline-gray bg-transparent border-0\"\n                        placeholder=\"Search Target\"\n                        value={searchTerm}\n                        onChange={(e) => {\n                          setSearchTerm(e?.target?.value);\n                          setItemOffset(0);\n                        }}\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <h4 className=\"card-title\">Targets list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Id </th>\n                    <th> Product </th>\n                    <th> Quantity </th>\n                    <th> User Type </th>\n                    <th> User </th>\n                    <th> Description </th>\n                    <th> Status </th>\n                    <th> Edit </th>\n                    {[\"admin\"].includes(cookies?.user?.role) && <th> Delete </th>}\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ? (\n                    <React.Fragment>\n                      <Spinner />\n                    </React.Fragment>\n                  ) : (\n                    itemlist?.map((item, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>{item?.product?.name}</td>\n                          <td>{item?.qty}</td>\n                          <td>{item?.userType}</td>\n                          <td>{item?.user?.name}</td>\n                          <td>{item?.Description}</td>\n                          <td>{formateStatusForTargets(item?.status)}</td>\n                          <td><i onClick={() => handleShow(item)} className=\"mdi mdi-lead-pencil\"></i></td>\n                          {[\"admin\"].includes(cookies?.user?.role) && <td>\n                            <i\n                              onClick={() => deleteTarget(item?.id)}\n                              className=\"mdi mdi-delete\"\n                            ></i>\n                          </td>}\n                        </tr>\n                      );\n                    })\n                  )}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n                forcePage={itemOffset}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewTargets;\n"],"sourceRoot":""}