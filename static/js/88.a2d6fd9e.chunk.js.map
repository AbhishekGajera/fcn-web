{"version":3,"sources":["app/Admin-components/Revenues/RevenueAdd.js"],"names":["RevenueAdd","history","useHistory","useCookies","cookies","useState","branchList","setbranchList","IboList","setIboList","Users","setUsers","productList","setproductList","phone","setPhone","useForm","mode","register","handleSubmit","formState","errors","isDirty","isValid","useEffect","getAllProducts","getIBOList","getBrancheList","getUserList","getUsers","allUsers","data","results","getProductsList","allProducts","getIBOs","allIBOs","getBranches","allBranches","onSubmit","formData","JSON","stringify","branch","ibo","contactno","user","commissionBranch","commissionIbo","netProfit","Product","totalRevenue","CreateRevenue","toast","success","push","console","info","response","message","error","process","className","aria-label","href","onClick","event","preventDefault","role","aria-current","Group","id","name","required","value","map","item","index","key","label","inputExtraProps","autoFocus","country","onChange","Control","type"],"mappings":"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","file":"static/js/88.a2d6fd9e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from \"react-bootstrap\";\nimport { useCookies } from \"react-cookie\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateRevenue, getBranches, getIBOs, getProductsList, getUsers } from \"../../../utils/APIs\";\nimport PhoneInput from \"react-phone-input-2\";\nimport 'react-phone-input-2/lib/style.css'\n\nconst RevenueAdd = () => {\n  const history = useHistory();\n  const [cookies] = useCookies([\"user\"]);\n  const [branchList, setbranchList] = useState([]);\n  const [IboList, setIboList] = useState([]);\n  const [Users, setUsers] = useState([]);\n  const [productList, setproductList] = useState([]);\n  const [phone, setPhone] = useState('+91');\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  useEffect(() => {\n    getAllProducts();\n    getIBOList();\n    getBrancheList();\n    getUserList();\n  }, []);\n\n  const getUserList = async () => {\n    const allUsers = await getUsers(3000);\n    setUsers(allUsers?.data?.results);\n  };\n\n  const handleOnChange = value => {\n    setPhone(value);\n  }\n\n  const getAllProducts = async () => {\n    const allProducts = await getProductsList(3000);\n    setproductList(allProducts?.data?.results);\n  };\n\n  const getIBOList = async () => {\n    const allIBOs = await getIBOs(5000);\n    setIboList(allIBOs?.data?.results);\n  };\n\n  const getBrancheList = async () => {\n    const allBranches = await getBranches(5000);\n    setbranchList(allBranches?.data?.results);\n  };\n\n  const onSubmit = async (data) => {\n    const formData = JSON.stringify({\n      'branch': data?.branch,\n      'IBO': data?.ibo,\n      'contactno': data?.contactno,\n      'user': data?.user,\n      'commision_branch': data?.commissionBranch,\n      'commision_ibo': data?.commissionIbo,\n      'net_revenue': data?.netProfit,\n      'product': data?.Product,\n      'total_revenue': data?.totalRevenue,\n    })\n\n    try {\n      const result = await CreateRevenue(formData)\n      toast.success(\"Revenue created successfully\");\n      history.push(\"/revenue/revenuelist\");\n    } catch (error) {\n      console.info(\"error \", error)\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Clients / Create Revenue </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Create Revenue\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row auth\">\n        <div className=\"col-12 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                <p className=\"card-description\"> Add Revenue </p>\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-4 col-form-label\">\n                        Product{\" \"}\n                      </label>\n                      <div className=\"col-sm-8\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          id=\"exampleFormControlSelect2\"\n                          name=\"Product\"\n                          {...register(\"Product\", {\n                            required: true,\n                          })}\n                        >\n                          <option value=''>--Select Product--</option>\n                          {productList?.map((item, index) => (\n                            <option\n                              key={index}\n                              value={item?.id}\n                              label={item?.name}\n                            ></option>\n                          ))}\n                        </select>\n                        {errors && errors.Product && (\n                          <p>Selecting a product is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">Branch</label>\n                      <div className=\"col-sm-9\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          id=\"exampleFormControlSelect2\"\n                          name=\"branch\"\n                          {...register(\"branch\", {\n                            required: true,\n                          })}\n                        >\n                          <option value=''>--Select branch--</option>\n                          {branchList.map((item, index) => (\n                            <option key={index} value={item?.name} label={item?.name}></option>\n                          ))}\n                        </select>\n                        {errors && errors.branch && (\n                          <p>Selecting a branch is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">IBO</label>\n                      <div className=\"col-sm-9\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          id=\"exampleFormControlSelect2\"\n                          name=\"ibo\"\n                          {...register(\"ibo\", {\n                            required: true,\n                          })}\n                        >\n                          <option value=''>--Select ibo--</option>\n                          {IboList.map((item, index) => (\n                            <option key={index} value={item?.name} label={item?.name}></option>\n                          ))}\n                        </select>\n                        {errors && errors.ibo && (\n                          <p>Selecting a IBO is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Select Users\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          id=\"exampleFormControlSelect2\"\n                          name=\"user\"\n                          {...register(\"user\", {\n                            required: true,\n                          })}\n                        >\n                          {\n                            Users?.map((item, index) => (\n                              <option\n                                key={index}\n                                value={item?.id}\n                                label={item?.name}\n                              ></option>\n                            ))}\n                        </select>\n                        {errors && errors.user && (\n                          <p>Slecting a user is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Contact No\n                      </label>\n                      <div className=\"col-sm-9 contact_no\">\n                        <PhoneInput\n                          inputExtraProps={{\n                            name: \"contactno\",\n                            required: true,\n                            autoFocus: true\n                          }}\n                          country={\"US\"}\n                          value={phone}\n                          onChange={handleOnChange}\n                        />\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-4 col-form-label\">\n                        Net Profit\n                      </label>\n                      <div className=\"col-sm-8\">\n                        <Form.Control\n                          type=\"number\"\n                          name=\"netProfit\"\n                          {...register(\"netProfit\", { required: true })}\n                        />\n                        {errors && errors.netProfit && (\n                          <p>Net Profit is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Total Revenue\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"number\"\n                          name=\"totalRevenue\"\n                          {...register(\"totalRevenue\", { required: true })}\n                        />\n                        {errors &&\n                          errors.totalRevenue &&\n                          errors.totalRevenue.type === \"required\" && (\n                            <p>Total Revenue is required field</p>\n                          )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-4 col-form-label\">Commision To Branch</label>\n                      <div className=\"col-sm-8\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"commissionBranch\"\n                          {...register(\"commissionBranch\", { required: true })}\n                        />\n                        {errors && errors.commissionBranch && (\n                          <p>Commission To Branch is required field</p>\n                        )}\n                      </div>\n\n                    </Form.Group>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-4 col-form-label\">Commision To IBO</label>\n                      <div className=\"col-sm-8\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"commissionIbo\"\n                          {...register(\"commissionIbo\", { required: true })}\n                        />\n                        {errors && errors.commissionIbo && (\n                          <p>Commission To Ibo is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n                <div className=\"mt-3\">\n                  <button\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                  >\n                    SUBMIT\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueAdd;\n"],"sourceRoot":""}