{"version":3,"sources":["utils/Functions/useUrl.js","app/BranchComponents/EmployeeList/index.js"],"names":["useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","useState","value","setValue","val","set","replace","toString","EmployeeList","useCookies","cookies","setCookie","itemlist","setitemlist","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","useEffect","user","role","getUsers","name","data","items","results","totalPages","console","info","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","aria-current","map","item","contactno","branch","email","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/58.5912418b.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useUrl = (param) => {\n\n    const history = useHistory()\n    const { search, pathname } = useLocation()\n    const url = new URLSearchParams(search)\n\n    const urlParam = url.get(param)\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\n\n    function _setValue(val){\n        url.set(param, val)\n        history.replace({ pathname, search: url.toString() }); \n        setValue(val)\n    }\n\n    return [value, _setValue]\n}","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport { getUsers, userLogout } from \"../../../utils/APIs\";\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nconst EmployeeList = () => {\n  const history = useHistory();\n  const [cookies, setCookie] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\n  const [itemsPerPage] = useState(20);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        let items\n        if (cookies?.user?.role === \"branch\") {\n          items = await (await getUsers(itemsPerPage, +itemOffset+1 ,'','user',cookies?.user?.name)).data;\n        }else{\n          items = await (await getUsers(itemsPerPage, +itemOffset+1)).data;\n        }\n        setitemlist(items?.results);\n        setPageCount(items?.totalPages);\n      } catch (error) {\n        console.info(\"error \", error);\n        if (error?.response?.data?.message) {\n          toast.error(error.response.data.message);\n        } else {\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n        }\n\n        if (error?.response?.data?.code === 401) {\n          const formData = JSON.stringify({\n            refreshToken: localStorage.getItem(\"refreshToken\"),\n          });\n          setCookie(\"user\", null, { path: \"/\" });\n          userLogout(formData).finally(() => {\n            history.push(\"/user-pages/login-1\");\n          });\n        }\n      }\n    })();\n  }, [itemOffset, itemsPerPage]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    setItemOffset(event.selected);\n  };\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Clients / Fetch Employee </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Fetch Employee\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">Employee list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Name </th>\n                    <th> Contact no. </th>\n                    <th> Branch </th>\n                    <th> Email </th>\n                    <th> Role </th>\n                    <th> Edit </th>\n                    <th> Delete </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {itemlist?.map((item) => {\n                    return (\n                      <tr>\n                        <td>{item?.name}</td>\n                        <td>{item?.contactno}</td>\n                        <td>{item?.branch}</td>\n                        <td>{item?.email}</td>\n                        <td>{item?.role}</td>\n                        <td>\n                          <i className=\"mdi mdi-lead-pencil\"></i>\n                        </td>\n                        <td>\n                          <i className=\"mdi mdi-delete\"></i>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n                forcePage={itemOffset}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeList;\n"],"sourceRoot":""}