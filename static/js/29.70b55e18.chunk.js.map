{"version":3,"sources":["utils/Functions/useUrl.js","utils/Functions/useDebounce.js","app/Admin-components/ContactedClients/ClientList/index.js"],"names":["useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","useState","value","setValue","val","set","replace","toString","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","ClientList","useCookies","cookies","setCookie","itemlist","setitemlist","searchTerm","setSearchTerm","debouncedSearchTerm","useForm","mode","formState","errors","isDirty","isValid","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","isLoading","setIsLoading","list","getConnect","data","items","results","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","csvreport","headers","label","key","filename","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","type","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","action","placeholder","onChange","e","target","map","item","name","contactno","branch","moment","fromDate","format","Id","id","breakLabel","nextLabel","onPageChange","window","scrollTo","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/29.70b55e18.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useUrl = (param) => {\n\n    const history = useHistory()\n    const { search, pathname } = useLocation()\n    const url = new URLSearchParams(search)\n\n    const urlParam = url.get(param)\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\n\n    function _setValue(val){\n        url.set(param, val)\n        history.replace({ pathname, search: url.toString() }); \n        setValue(val)\n    }\n\n    return [value, _setValue]\n}","import { useEffect, useState } from \"react\";\n\n// Hook\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay] // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n  }","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport { userLogout, getConnect } from \"../../../../utils/APIs\";\nimport { CSVLink } from \"react-csv\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useUrl } from \"../../../../utils/Functions/useUrl\";\nimport { useDebounce } from \"../../../../utils/Functions/useDebounce\";\nimport Spinner from \"../../../shared/Spinner\";\nimport moment from 'moment';\n\nconst ClientList = () => {\n  const history = useHistory();\n  const [cookies, setCookie] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n  const {\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  // We start with an empty list of items.\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\n  const [itemsPerPage] = useState(10);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    list();\n  }, [itemOffset, itemsPerPage]);\n\n  useEffect(() => {\n    list();\n  }, [debouncedSearchTerm]);\n\n  const list = async () => {\n    setIsLoading(true);\n    try {\n      const items = await (\n        await getConnect(itemsPerPage, +itemOffset + 1, searchTerm)\n      ).data;\n      setitemlist(items?.results);\n      setPageCount(items?.totalPages);\n    } catch (error) {\n      if (error?.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n\n      if (error?.response?.data?.code === 401) {\n        const formData = JSON.stringify({\n          refreshToken: localStorage.getItem(\"refreshToken\"),\n        });\n        setCookie(\"user\", null, { path: \"/\" });\n        userLogout(formData).finally(() => {\n          history.push(\"/user-pages/login-1\");\n        });\n      }\n    }\n    setIsLoading(false);\n  };\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    window.scrollTo(0, 0);\n    setItemOffset(event.selected);\n  };\n\n  const convertClient = (Id) =>{   \n    history.push({\n      pathname: '/clients/createclient',\n      search: \"?\" + new URLSearchParams({ id: Id }).toString()\n    })\n  }\n\n\n  // excel export\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n\n  // csv export\n  const exportToCSV = (fileName) => {\n    const ws = XLSX.utils.json_to_sheet(itemlist);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  const headers = [\n    { label: \"Name\", key: \"name\", },\n    { label: \"Contact no\", key: \"contactno\", },\n    { label: \"Branch\", key: \"branch\", },\n    { label: \"Date\", key: \"date\", },\n    { label: \"Type\", key: \"type\", },\n  ]\n\n  const csvreport = {\n    data: itemlist,\n    headers: headers,\n    filename: 'Clue_Mediator_Report.csv'\n  };\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Contacted clients / Fetch Clients </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              fetch clients\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-gradient-primary btn-sm \"\n                >\n                  <CSVLink {...csvreport} className=\"text-white\">Export to CSV</CSVLink>\n                </button>\n              </div>\n\n              <div className=\"col-md-4\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-gradient-primary btn-sm \"\n                  onClick={() => exportToCSV('test')}\n                >\n                  Download Excel\n                </button>\n              </div>\n\n              <div className=\"col-md-4\">\n                <div className=\"search-field d-none d-md-block\">\n                  <form className=\"d-flex align-items-center h-100\" action=\"#\">\n                    <div className=\"input-group\">\n                      <div className=\"input-group-prepend outline-gray bg-transparent\">\n                        <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"form-control outline-gray bg-transparent border-0\"\n                        placeholder=\"Search Clients\"\n                        value={searchTerm}\n                        onChange={(e) => {\n                          setSearchTerm(e?.target?.value);\n                          setItemOffset(0);\n                        }}\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Name </th>\n                    <th> Contact no. </th>\n                    <th> Branch </th>\n                    <th> Date </th>\n                    <th> Type </th>\n                    <th> Convert </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ? (\n                    <Spinner />\n                  ) : (\n                    itemlist?.map((item) => {\n                      return (\n                        <tr>\n                          <td>{item?.name}</td>\n                          <td>{item?.contactno}</td>\n                          <td>{item?.branch}</td>\n                          <td>{moment(item?.fromDate).format('DD-MM-YYYY')}</td>\n                          <td>{item?.type === 1 ? \"Free\" : \"Paid\"}</td>\n                          <td><button\n                            type=\"button\"\n                            className=\"btn btn-gradient-primary btn-sm \"\n                            onClick={() => {convertClient(item?.id)}}\n                          >\n                            Convert\n                          </button></td>\n                        </tr>\n                      );\n                    })\n                  )}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n                forcePage={itemOffset}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientList;\n"],"sourceRoot":""}