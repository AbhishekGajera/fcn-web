{"version":3,"sources":["utils/Functions/useDebounce.js","utils/Functions/commonOptions.js","utils/Functions/passwordGenerator.js","app/IBO-components/ClientList/index.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","statusOption","label","roleOption","roleOptionForAmin","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","formateStatusForTargets","password_generator","len","length","string","password","character","entity1","Math","ceil","random","entity2","hold","charAt","toUpperCase","split","sort","join","substr","ClientList","history","useHistory","useCookies","cookies","setCookie","itemlist","setitemlist","productlist","setproductlist","searchTerm","setSearchTerm","debouncedSearchTerm","React","showPerfomer","setShowPerfomer","useForm","mode","register","handleSubmit","reset","formState","errors","strongRegexMo","isDirty","isValid","RegExp","onPerformanceSubmit","updatedData","JSON","stringify","perfomance","updatePerfomence","updateProfile","valueToEdit","id","toast","success","autoClose","list","response","data","message","error","process","code","formData","refreshToken","localStorage","getItem","path","userLogout","finally","push","onSubmit","updateStatus","branch","branchUpdate","role","roleUpdate","setShow","pageCount","setPageCount","useUrl","itemOffset","setItemOffset","itemsPerPage","show","setvalueToEdit","setupdateStatus","setupdatePerfomence","branchList","setbranchList","selectedBranch","setselectedBranch","IBOList","setIBOList","selectedIBO","setselectedIBO","selectedProduct","setselectedProduct","setbranchUpdate","IBOUpdate","setIBOUpdate","setroleUpdate","isLoading","setIsLoading","handleClose","getBranchList","getIBOList","productList","getProductsListClient","items","results","getBranches","getIBOs","user","getUserBranch","name","getUserIbo","getUsers","totalPages","generatePassword","randomPassword","newPassword","csvreport","headers","key","filename","onSubmitClient","CreateUser","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","onChange","e","target","selected","type","onClick","Control","defaultValue","required","address","contactno","pattern","email","map","i","aadhar_card_no","pan_card_no","aria-label","href","event","preventDefault","aria-current","item","index","action","placeholder","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","multiple","f","files","reader","FileReader","onload","result","readedData","wsname","ws","dataParse","sheet_to_json","header","splice","toString","bankIfscCode","bankAccNo","dob","moment","toISOString","slice","product","registration_date","maturity_date","IBO","maxAmount","minAmount","country","aadhar_card_img","pan_card_img","readAsBinaryString","fileHandler","accept","element","document","getElementById","click","includes","Id","handleShow","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","deleteUsr","dismiss","DismissReason","cancel","breakLabel","nextLabel","onPageChange","window","scrollTo","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":";oLAGaA,EAAc,SAACC,EAAOC,GAE/B,MAA4CC,mBAASF,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAgBA,OAfAC,qBACE,WAEE,IAAMC,EAAUC,YAAW,WACzBH,EAAkBJ,KACjBC,GAIH,OAAO,WACLO,aAAaF,MAGjB,CAACN,EAAOC,IAEHE,I,iCCrBX,gRAAO,IAAMM,EAAe,CACxB,CAAET,MAAQ,EAAGU,MAAQ,UACrB,CAAEV,MAAQ,EAAGU,MAAQ,aACrB,CAAEV,MAAQ,EAAGU,MAAQ,eAGZC,EAAa,CACtB,CAAEX,MAAQ,OAAQU,MAAQ,QAC1B,CAAEV,MAAQ,QAASU,MAAQ,SAC3B,CAAEV,MAAQ,MAAOU,MAAQ,OACzB,CAAEV,MAAQ,SAAUU,MAAQ,WAGnBE,EAAoB,CAC7B,CAAEZ,MAAQ,MAAOU,MAAQ,OACzB,CAAEV,MAAQ,SAAUU,MAAQ,WAGnBG,EAAa,CACtB,CAAEb,OAAQ,IAAIc,MAAOC,SAAQ,IAAID,MAAOE,UAAY,GAAIN,MAAQ,UAChE,CAAEV,OAAQ,IAAIc,MAAOC,SAAQ,IAAID,MAAOE,UAAY,IAAKN,MAAQ,WACjE,CAAEV,OAAQ,IAAIc,MAAOC,SAAQ,IAAID,MAAOE,UAAY,IAAKN,MAAQ,WACjE,CAAEV,OAAQ,IAAIc,MAAOC,SAAQ,IAAID,MAAOE,UAAY,KAAMN,MAAQ,WAClE,CAAEV,OAAQ,IAAIc,MAAOC,SAAQ,IAAID,MAAOE,UAAY,KAAMN,MAAQ,WAGzDO,EAAuB,CAChC,CAAEjB,MAAQ,iBAAkBU,MAAQ,kBACpC,CAAEV,MAAQ,mBAAoBU,MAAQ,oBACtC,CAAEV,MAAQ,wBAAyBU,MAAQ,yBAC3C,CAAEV,MAAQ,gBAAiBU,MAAQ,kBAG1BQ,EAAwB,CACjC,CAAElB,MAAQ,SAAUU,MAAQ,UAC5B,CAAEV,MAAQ,OAAQU,MAAQ,QAC1B,CAAEV,MAAQ,OAAQU,MAAQ,QAC1B,CAAEV,MAAQ,MAAOU,MAAQ,OACzB,CAAEV,MAAQ,YAAaU,MAAQ,aAC/B,CAAEV,MAAQ,OAAQU,MAAQ,QAC1B,CAAEV,MAAQ,WAAYU,MAAQ,YAC9B,CAAEV,MAAQ,cAAeU,MAAQ,eACjC,CAAEV,MAAQ,mBAAoBU,MAAQ,oBACtC,CAAEV,MAAQ,WAAYU,MAAQ,YAC9B,CAAEV,MAAQ,SAAUU,MAAQ,UAC5B,CAAEV,MAAQ,mBAAoBU,MAAQ,oBACtC,CAAEV,MAAQ,YAAaU,MAAQ,aAC/B,CAAEV,MAAQ,6BAA8BU,MAAQ,8BAChD,CAAEV,MAAQ,aAAcU,MAAQ,cAChC,CAAEV,MAAQ,gBAAiBU,MAAQ,iBACnC,CAAEV,MAAQ,oBAAqBU,MAAQ,qBACvC,CAAEV,MAAQ,eAAgBU,MAAQ,gBAClC,CAAEV,MAAQ,gBAAiBU,MAAQ,iBACnC,CAAEV,MAAQ,mCAAoCU,MAAQ,qCAG7CS,EAAgB,SAACC,GAC1B,QAASA,GACL,KAAM,EACF,MAAO,SACX,KAAM,EACF,MAAO,YACX,KAAM,EACF,MAAO,aACX,QACI,MAAO,WAINC,EAA0B,SAACD,GACpC,QAASA,GACL,KAAM,EACF,MAAO,UACX,KAAM,EACF,MAAO,WACX,KAAM,EACF,MAAO,YACX,KAAM,EACF,MAAO,YACX,QACI,MAAO,e,iCChFnB,kCAAO,IAAME,EAAqB,SAAEC,GAOhC,IANA,IAAIC,EAAUD,GAAY,GACtBE,EAAS,6BAETC,EAAW,GACXC,EAAY,GAETD,EAASF,OAAOA,GAAS,CAC7B,IAAII,EAAUC,KAAKC,KAAKL,EAAOD,OAASK,KAAKE,SAASF,KAAKE,UACvDC,EAAUH,KAAKC,KANR,aAMqBN,OAASK,KAAKE,SAASF,KAAKE,UACxDE,EAAOR,EAAOS,OAAQN,GAEzBD,GADAM,EAAQP,EAASF,OAAO,GAAG,EAAIS,EAAKE,cAAgBF,EAGpDP,EADAC,GAVU,aAUWO,OAAQF,GAIjC,OADAN,EAASA,EAASU,MAAM,IAAIC,MAAK,WAAW,MAAO,GAAIR,KAAKE,YAAWO,KAAK,KAC5DC,OAAO,EAAEhB,K,yiNC2kCdiB,UAvjCI,WAAO,IAAD,QACjBC,EAAUC,cAChB,EAA6BC,YAAW,CAAC,SAAzC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgC3C,mBAAS,IAAzC,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAAsC7C,mBAAS,IAA/C,mBAAO8C,EAAP,KAAoBC,EAApB,KACA,EAAoC/C,mBAAS,IAA7C,mBAAOgD,EAAP,KAAmBC,EAAnB,KACMC,EAAsBrD,YAAYmD,EAAY,KACpD,EAAwCG,IAAMnD,UAAS,GAAvD,mBAAOoD,EAAP,KAAqBC,EAArB,KAEA,EAKIC,YAAQ,CACVC,KAAM,aALNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MAHF,IAIEC,UAAaC,GAJf,EAIeA,OAIXC,IARJ,EAIuBC,QAJvB,EAIgCC,QAIZ,IAAIC,OACtB,4FAGIC,GAAmB,uCAAG,8GAElBC,EAAcC,KAAKC,UAAU,CAAEC,WAAYC,KAFzB,SAGlBC,aAAcL,EAAD,OAAcM,SAAd,IAAcA,QAAd,EAAcA,GAAaC,IAHtB,OAIxBC,IAAMC,QAAQ,8BAA+B,CAC3CC,UAAW,MAEbC,KAPwB,iDASxB,sCAAI,KAAOC,gBAAX,iBAAI,EAAiBC,YAArB,aAAI,EAAuBC,SACzBN,IAAMO,MAAM,KAAMH,SAASC,KAAKC,SAEhCN,IAAMO,MAAMC,wFAGsB,OAAhC,2CAAOJ,gBAAP,mBAAiBC,YAAjB,eAAuBI,QACnBC,EAAWjB,KAAKC,UAAU,CAC9BiB,aAAcC,aAAaC,QAAQ,kBAErC5C,EAAU,OAAQ,KAAM,CAAE6C,KAAM,MAChCC,aAAWL,GAAUM,SAAQ,WAC3BnD,EAAQoD,KAAK,2BArBO,yBAyBxBtC,GAAgB,GAzBQ,4EAAH,qDA6BnBuC,GAAQ,uCAAG,WAAOb,GAAP,wFACfA,EAAK7D,OAAS2E,GACdd,EAAKe,OAASC,GAEdhB,EAAKiB,KAAOC,GACU,KAAlBlB,EAAKvD,iBACAuD,EAAKvD,SANC,SASP0C,EAAcC,KAAKC,UAAUW,GATtB,SAUPR,aAAcL,EAAD,OAAcM,SAAd,IAAcA,QAAd,EAAcA,GAAaC,IAVjC,OAWbC,IAAMC,QAAQ,4BAA6B,CACzCC,UAAW,MAEbC,KAda,mDAgBb,sCAAI,KAAOC,gBAAX,iBAAI,EAAiBC,YAArB,aAAI,EAAuBC,SACzBN,IAAMO,MAAM,KAAMH,SAASC,KAAKC,SAEhCN,IAAMO,MAAMC,wFAGsB,OAAhC,2CAAOJ,gBAAP,mBAAiBC,YAAjB,eAAuBI,QACnBC,EAAWjB,KAAKC,UAAU,CAC9BiB,aAAcC,aAAaC,QAAQ,kBAErC5C,EAAU,OAAQ,KAAM,CAAE6C,KAAM,MAChCC,aAAWL,GAAUM,SAAQ,WAC3BnD,EAAQoD,KAAK,2BA5BJ,yBAgCbO,IAAQ,GAhCK,6EAAH,sDAsCd,GAAkClG,mBAAS,GAA3C,qBAAOmG,GAAP,MAAkBC,GAAlB,MAGA,GAAoCC,YAAO,QAA3C,qBAAOC,GAAP,MAAmBC,GAAnB,MACA,GAAuBvG,mBAAS,IAAzBwG,GAAP,qBACA,GAAwBrD,IAAMnD,UAAS,GAAvC,qBAAOyG,GAAP,MAAaP,GAAb,MACA,GAAsClG,mBAAS,IAA/C,qBAAOwE,GAAP,MAAoBkC,GAApB,MACA,GAAwC1G,mBAAS,GAAjD,qBAAO6F,GAAP,MAAqBc,GAArB,MACA,GAAgD3G,mBAAS,GAAzD,qBAAOsE,GAAP,MAAyBsC,GAAzB,MACA,GAAoC5G,mBAAS,IAA7C,qBAAO6G,GAAP,MAAmBC,GAAnB,MACA,GAA4C9G,mBAAS,IAArD,qBAAO+G,GAAP,MAAuBC,GAAvB,MACA,GAA8BhH,mBAAS,IAAvC,qBAAOiH,GAAP,MAAgBC,GAAhB,MACA,GAAsClH,mBAAS,IAA/C,qBAAOmH,GAAP,MAAoBC,GAApB,MACA,GAA8CpH,mBAAS,IAAvD,qBAAOqH,GAAP,MAAwBC,GAAxB,MACA,GAAwCtH,mBAAS,IAAjD,qBAAO+F,GAAP,MAAqBwB,GAArB,MACA,GAAkCvH,mBAAS,IAA3C,qBAAOwH,GAAP,MAAkBC,GAAlB,MACA,GAAoCzH,mBAAS,IAA7C,qBAAOiG,GAAP,MAAmByB,GAAnB,MACA,GAAkC1H,oBAAS,GAA3C,qBAAO2H,GAAP,MAAkBC,GAAlB,MAqBMC,GAAc,WAClB3B,IAAQ,GACR7C,GAAgB,GAChBqD,GAAe,IACfC,GAAgB,GAChBY,GAAgB,IAChBE,GAAa,IACbC,GAAc,IACdhE,KAoBFvD,qBAAU,WACR0E,OACC,CAACyB,GAAYE,GAAcO,GAAgBI,GAAaE,KAE3DlH,qBAAU,WACR0E,OACC,CAAC3B,IAEJ/C,qBAAU,WACR2H,KACAC,KACAC,OACC,IAEH,IAAMA,GAAW,uCAAG,uHAEWC,eAFX,8BAEoClD,KAFpC,OAEVmD,EAFU,OAGhBnF,EAAc,OAACmF,QAAD,IAACA,OAAD,EAACA,EAAOC,SAHN,iDAKhB,sCAAI,KAAOrD,gBAAX,iBAAI,EAAiBC,YAArB,aAAI,EAAuBC,SACzBN,IAAMO,MAAM,KAAMH,SAASC,KAAKC,SAEhCN,IAAMO,MAAMC,wFAGsB,OAAhC,2CAAOJ,gBAAP,mBAAiBC,YAAjB,eAAuBI,QACnBC,EAAWjB,KAAKC,UAAU,CAC9BiB,aAAcC,aAAaC,QAAQ,kBAErC5C,EAAU,OAAQ,KAAM,CAAE6C,KAAM,MAChCC,aAAWL,GAAUM,SAAQ,WAC3BnD,EAAQoD,KAAK,2BAjBD,yDAAH,qDAuBXmC,GAAa,uCAAG,oGACOM,YAAY,IAAM,EAAG,GAAI,UADhC,8BAC2CrD,KAD3C,OACdmD,EADc,OAGpBpB,GAAa,OAACoB,QAAD,IAACA,OAAD,EAACA,EAAOC,SAHD,2CAAH,qDAWbJ,GAAU,uCAAG,oGACUM,aAAQ,IAAM,EAAG,IAD3B,8BACgCtD,KADhC,OACXmD,EADW,OAEjBhB,GAAU,OAACgB,QAAD,IAACA,OAAD,EAACA,EAAOC,SAFD,2CAAH,qDAeVtD,GAAI,uCAAG,6GACX+C,IAAa,GADF,SAImB,YAAjB,OAAPlF,QAAO,IAAPA,GAAA,UAAAA,EAAS4F,YAAT,eAAetC,MAJV,iCAMCuC,aAAa,OACjB7F,QADiB,IACjBA,GADiB,UACjBA,EAAS4F,YADQ,aACjB,EAAeE,KACfnB,IARG,8BAULtC,KAVK,OAKPmD,EALO,OAWPrF,EAAYqF,EAAMC,SAXX,2BAY0B,SAAjB,OAAPzF,QAAO,IAAPA,GAAA,UAAAA,EAAS4F,YAAT,eAAetC,MAZjB,kCAcCyC,aAAU,OACd/F,QADc,IACdA,GADc,UACdA,EAAS4F,YADK,aACd,EAAe7D,GACf4C,IAhBG,gCAkBLtC,KAlBK,QAaPmD,EAbO,OAmBPrF,EAAYqF,GAnBL,yCAsBCQ,aACJlC,IACCF,GAAa,EACdtD,EACA,OACAqE,GACAN,GACAI,IA7BG,gCA+BLpC,KA/BK,QAqBPmD,EArBO,OAgCPrF,EAAW,UAACqF,SAAD,aAAC,EAAOC,SAhCZ,QAkCT/B,GAAY,UAAC8B,SAAD,aAAC,EAAOS,YAlCX,mDAoCT,sCAAI,KAAO7D,gBAAX,iBAAI,EAAiBC,YAArB,aAAI,EAAuBC,SACzBN,IAAMO,MAAM,KAAMH,SAASC,KAAKC,SAEhCN,IAAMO,MAAMC,wFAEsB,OAAhC,2CAAOJ,gBAAP,mBAAiBC,YAAjB,eAAuBI,QACnBC,EAAWjB,KAAKC,UAAU,CAC9BiB,aAAcC,aAAaC,QAAQ,kBAErC5C,EAAU,OAAQ,KAAM,CAAE6C,KAAM,MAChCC,aAAWL,GAAUM,SAAQ,WAC3BnD,EAAQoD,KAAK,2BA/CR,QAmDXiC,IAAa,GAnDF,0DAAH,qDA0DJgB,GAAgB,uCAAG,WAAOnE,GAAP,gFACjBoE,EAAiBzH,cACjB0H,EAAc3E,KAAKC,UAAU,CACjC5C,SAAUqH,IAHW,kBAOftE,aAAcuE,EAAarE,GAPZ,OAQrBC,IAAMC,QACJ,+DACA,CAAEC,UAAW,MAVM,gDAarBF,IAAMO,MAAM,sDAbS,yDAAH,sDAkFhB8D,GAAY,CAChBhE,KAAMnC,EACNoG,QAnBc,CACd,CAAExI,MAAO,OAAQyI,IAAK,QACtB,CAAEzI,MAAO,aAAcyI,IAAK,aAC5B,CAAEzI,MAAO,SAAUyI,IAAK,UACxB,CAAEzI,MAAO,MAAOyI,IAAK,YACrB,CAAEzI,MAAO,QAASyI,IAAK,SACvB,CAAEzI,MAAO,SAAUyI,IAAK,UACxB,CAAEzI,MAAO,MAAOyI,IAAK,OACrB,CAAEzI,MAAO,OAAQyI,IAAK,QACtB,CAAEzI,MAAO,SAAUyI,IAAK,UACxB,CAAEzI,MAAO,kBAAmByI,IAAK,aACjC,CAAEzI,MAAO,iBAAkByI,IAAK,gBAChC,CAAEzI,MAAO,qBAAsByI,IAAK,oBACpC,CAAEzI,MAAO,UAAWyI,IAAK,YAOzBC,SAAU,4BAuDNC,GAAc,uCAAG,WAAOpE,GAAP,0FAEbqE,YAAWjF,KAAKC,UAAUW,IAFb,OAGnBL,IAAMC,QAAQ,6BAHK,+CAMjB,MACA,KAAMG,UACN,KAAMA,SAASC,MACf,KAAMD,SAASC,KAAKC,QAEpBN,IAAMO,MAAM,KAAMH,SAASC,KAAKC,SAEhCN,IAAMO,MAAMC,wFAbK,wDAAH,sDAkBpB,OACE,6BACE,kBAAC,IAAD,CACEuB,KAAMrD,EACNiG,OAAQxB,GACRyB,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,2BAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,eAEV,uBAAGA,UAAU,oBAAb,uBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,mBAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,aACLsB,SAlWD,SAACC,GAAO,IAAD,EAChCnD,KAAoB,OAACmD,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWlK,QAAS,KAmWf,4BAAQA,MAAM,IAAImK,SAAsC,KAAjB,OAAXzF,SAAW,IAAXA,QAAA,EAAAA,GAAaH,aAAzC,KACA,4BAAQvE,MAAM,IAAImK,SAAsC,KAAjB,OAAXzF,SAAW,IAAXA,QAAA,EAAAA,GAAaH,aAAzC,KACA,4BAAQvE,MAAM,IAAImK,SAAsC,KAAjB,OAAXzF,SAAW,IAAXA,QAAA,EAAAA,GAAaH,aAAzC,UAMV,yBAAKuF,UAAU,QACb,4BACEA,UAAU,2DACVM,KAAK,SACLC,QAASlG,IAHX,6BAehB,kBAAC,IAAD,CACEwC,KAAMA,GACN4C,OAAQxB,GACRyB,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,uBAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,cACVhE,SAAUnC,EAAamC,KAEvB,uBAAGgE,UAAU,oBAAb,mBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,QAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKQ,QAAN,eACEF,KAAK,OACL1B,KAAK,OACL6B,aAAc7F,GAAYgE,MACtBhF,EAAS,OAAQ,CAAE8G,UAAU,MAElC1G,IAAUA,GAAO4E,MAChB,yDAOV,yBAAKoB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,UACU,KAEV,yBAAKA,UAAU,YACb,kBAAC,IAAKQ,QAAN,eACEF,KAAK,OACL1B,KAAK,UACL6B,aAAc7F,GAAY+F,SACtB/G,EAAS,UAAW,CAAE8G,UAAU,MAErC1G,IAAUA,GAAO2G,SAChB,4DAOV,yBAAKX,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cAGA,yBAAKA,UAAU,uBACb,kBAAC,IAAKQ,QAAN,eACEF,KAAK,OACL1B,KAAK,YACL6B,aAAc7F,GAAYgG,WACtBhH,EAAS,YAAa,CACxB8G,UAAU,EACVG,QAAS5G,OAGZD,IACCA,GAAO4G,WACmB,aAA1B5G,GAAO4G,UAAUN,MACf,+DAEHtG,IACCA,GAAO4G,WACmB,YAA1B5G,GAAO4G,UAAUN,MACf,gFASZ,yBAAKN,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,SAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKQ,QAAN,eACEF,KAAK,OACL1B,KAAK,QACL6B,aAAc7F,GAAYkG,OACtBlH,EAAS,QAAS,CACpB8G,UAAU,EACVG,QAAS,iBAGZ7G,IACCA,GAAO8G,OACe,aAAtB9G,GAAO8G,MAAMR,MACX,sDAEHtG,IACCA,GAAO8G,OACe,YAAtB9G,GAAO8G,MAAMR,MACX,wDAOZ,yBAAKN,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,UAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,SACLsB,SAhgBD,SAACC,GAAO,IAAD,EAChCpD,KAAgB,OAACoD,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWlK,QAAS,KA2fb,OAMGS,UANH,IAMGA,SANH,EAMGA,IAAcoK,KAAI,SAACC,GAClB,OACE,4BACE9K,MAAK,OAAE8K,QAAF,IAAEA,OAAF,EAAEA,EAAG9K,MACVmK,UAAWpE,OAAiB,OAAC+E,QAAD,IAACA,OAAD,EAACA,EAAG9K,QAFlC,OAIG8K,QAJH,IAIGA,OAJH,EAIGA,EAAGpK,eAUpB,yBAAKoJ,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,iBAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,SACLsB,SAriBC,SAACC,GAAO,IAAD,EAClCxC,GAAe,OAACwC,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWlK,SAgiBH,OAMG+G,SANH,IAMGA,QANH,EAMGA,GAAY8D,KAAI,SAACC,GAChB,OACE,oCACE,4BACEX,SAAUW,EAAEpC,OAASzC,GACrBjG,MAAO8K,EAAEpC,MAERoC,EAAEpC,eAWrB,yBAAKoB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,SACLsB,SAxjBH,SAACC,GAAO,IAAD,EAC9BtC,GAAY,OAACsC,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWlK,SAmjBA,OAMGmH,SANH,IAMGA,QANH,EAMGA,GAAS0D,KAAI,SAACC,GACb,OACE,oCACE,4BACEX,SAAUW,EAAEpC,OAAShB,GACrB1H,MAAO8K,EAAEpC,MAERoC,EAAEpC,eAWrB,yBAAKoB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,eAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,SACLsB,SAnlBF,SAACC,GAAO,IAAD,EAC/BrC,GAAa,OAACqC,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWlK,SA8kBD,OAMGW,UANH,IAMGA,SANH,EAMGA,IAAYkK,KAAI,SAACC,GAChB,OACE,oCACE,4BACEX,SAAUW,EAAE9K,QAAUmG,GACtBnG,MAAO8K,EAAE9K,OAER8K,EAAEpK,gBAWrB,yBAAKoJ,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,qBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKQ,QAAN,eACEF,KAAK,OACL1B,KAAK,iBACL6B,aAAc7F,GAAYqG,gBACtBrH,EAAS,iBAAkB,CAAE8G,UAAU,MAE5C1G,IAAUA,GAAOiH,gBAChB,sEAOV,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,kBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKQ,QAAN,eACEF,KAAK,OACL1B,KAAK,cACL6B,aAAc7F,GAAYsG,aACtBtH,EAAS,cAAe,CAAE8G,UAAU,MAEzC1G,IAAUA,GAAOkH,aAChB,mEAOV,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,YAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKQ,QAAN,eACEF,KAAK,WACL1B,KAAK,YACDhF,EAAS,kBAOvB,yBAAKoG,UAAU,QACb,4BACEA,UAAU,2DACVM,KAAK,UAFP,kBAchB,yBAAKN,UAAU,eACb,wBAAIA,UAAU,cAAd,2BACA,yBAAKmB,aAAW,cACd,wBAAInB,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGoB,KAAK,KAAKb,QAAS,SAACc,GAAD,OAAWA,EAAMC,mBAAvC,OACGxI,QADH,IACGA,GADH,UACGA,EAAS4F,YADZ,aACG,EAAetC,KADlB,eAIF,wBAAI4D,UAAU,yBAAyBuB,eAAa,QAApD,mBAMN,yBAAKvB,UAAU,yCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACY,SAAjB,OAAPlH,QAAO,IAAPA,GAAA,UAAAA,EAAS4F,YAAT,eAAetC,OAA0C,YAAjB,OAAPtD,QAAO,IAAPA,GAAA,UAAAA,EAAS4F,YAAT,eAAetC,OAC/C,oCACE,yBAAK4D,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,iBAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,SACLsB,SAroBM,SAACC,GAC7BxD,GAAc,GACdS,GAAkB+C,EAAEC,OAAOlK,SAqoBL,4BAAQmK,SAAU,KAAOlD,GAAgBjH,MAAO,IAAhD,gBANF,OASG+G,SATH,IASGA,QATH,EASGA,GAAY8D,KAAI,SAACC,GAChB,OACE,oCACE,4BACEX,SAAUW,EAAEpC,OAASzB,GACrBjH,MAAO8K,EAAEpC,MAERoC,EAAEpC,cAUnB,yBAAKoB,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cACA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,SACLsB,SAzpBG,SAACC,GAC1BxD,GAAc,GACda,GAAe2C,EAAEC,OAAOlK,SAypBF,4BAAQmK,SAAU,KAAO9C,GAAarH,MAAO,IAA7C,gBANF,OASGmH,SATH,IASGA,QATH,EASGA,GAAS0D,KAAI,SAACC,GACb,OACE,oCACE,4BACEX,SAAUW,EAAEnG,KAAO0C,GACnBrH,MAAO8K,EAAEnG,IAERmG,EAAEpC,gBAazB,yBAAKoB,UAAU,OACb,oCACE,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,kBACA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVnF,GAAG,4BACH+D,KAAK,SACLsB,SAvrBS,SAACC,GAC9BxD,GAAc,GACde,GAAmByC,EAAEC,OAAOlK,SAurBR,4BAAQA,MAAM,IAAd,sBACKgD,EAAY6H,KAAI,SAACS,EAAMC,GAAP,OAEf,4BAAQpC,IAAKoC,EAAOvL,MAAK,OAAEsL,QAAF,IAAEA,OAAF,EAAEA,EAAM3G,GAAIjE,MAAK,OAAE4K,QAAF,IAAEA,OAAF,EAAEA,EAAM5C,KAAMyB,SAAU5C,MAAe,OAAK+D,QAAL,IAAKA,OAAL,EAAKA,EAAM3G,aAO1G,yBAAKmF,UAAU,YACb,yBAAKA,UAAU,kCACb,0BAAMA,UAAU,kCAAkC0B,OAAO,KACvD,yBAAK1B,UAAU,eACb,yBAAKA,UAAU,mDACb,uBAAGA,UAAU,+CAEf,2BACEM,KAAK,OACLN,UAAU,oDACV2B,YAAY,iBACZzL,MAAOkD,EACP8G,SAAU,SAACC,GAAO,IAAD,EACf9G,EAAa,OAAC8G,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWlK,OACzByG,GAAc,YAS9B,wBAAIqD,UAAU,cAAd,eACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,4BACEM,KAAK,SACLN,UAAU,oCAEV,kBAAC,UAAD,iBAAab,GAAb,CAAwBa,UAAU,eAAlC,mBAIJ,yBAAKA,UAAU,YACb,4BACEM,KAAK,SACLN,UAAU,mCACVO,QAAS,kBAjnBL,SAACqB,GACnB,IACMC,EAAK,CAAEC,OAAQ,CAAE3G,KADZ4G,IAAWC,cAAchJ,IACDiJ,WAAY,CAAC,SAC1CC,EAAcH,IAAWF,EAAI,CAAEM,SAAU,OAAQ7B,KAAM,UACvDnF,EAAO,IAAIiH,KAAK,CAACF,GAAc,CAAE5B,KATvC,oFAUA+B,SAAiBlH,EAAMyG,EATH,SAqnBSU,CAAY,YAH7B,mBAQF,yBAAKtC,UAAU,YACb,kBAAC,IAAKQ,QAAN,CACE3F,GAAG,WACHmF,UAAU,SACVM,KAAK,OACL1B,KAAK,gBACL2D,UAAU,EACVrC,SAAU,SAACC,IAtlBP,SAACA,GACnB,IACIqC,EADQrC,EAAEC,OAAOqC,MACP,GACVC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUzC,GACxB,IAAIhF,EAAOgF,EAAEC,OAAOyC,OAChBC,EAAaf,IAAU5G,EAAM,CAAEmF,KAAM,WACnCyC,EAASD,EAAWb,WAAW,GAC/Be,EAAKF,EAAWhB,OAAOiB,GAGvBE,EAAYlB,IAAWmB,cAAcF,EAAI,CAAEG,OAAQ,IACzDF,EAAUG,OAAO,EAAG,GACpB,IAAM5H,EAAW,GACjBwC,IAAa,GACbiF,EAAUlC,KAAI,SAACS,EAAMC,GACnBjG,EAASoD,KAAO4C,EAAK,GACrBhG,EAASU,OAASsF,EAAK,GACvBhG,EAASoF,UAAYY,EAAK,GAAG6B,WAC7B7H,EAASsF,MAAQU,EAAK,GACtBhG,EAASmF,QAAUa,EAAK,GACxBhG,EAAS8H,aAAe9B,EAAK,GAC7BhG,EAAS+H,UAAY/B,EAAK,GAAG6B,WAC7B7H,EAAS5D,SAAW4J,EAAK,GACzBhG,EAASgI,IAAMhC,EAAK,GAAKiC,IAAOA,IAAOjC,EAAK,GAAI,eAAekC,eAAgB,IAAI1M,MAAO0M,cAAcC,MAAM,EAAG,IACjHnI,EAASoI,QAAUpC,EAAK,GAAG6B,WAC3B7H,EAASqI,kBAAqBrC,EAAK,IAAMiC,IAAOA,IAAOjC,EAAK,IAAK,eAAekC,eAAgB,IAAI1M,MAAO0M,cAAcC,MAAM,EAAG,IAClInI,EAASsI,cAAgBtC,EAAK,IAAMiC,IAAOA,IAAOjC,EAAK,IAAK,eAAekC,eAAgB,IAAI1M,MAAO0M,cAAcC,MAAM,EAAG,IAC7HnI,EAASuI,IAAMvC,EAAK,IAAMA,EAAK,IAAM,2BACrChG,EAASyF,eAAiBO,EAAK,IAAI6B,WACnC7H,EAAS0F,YAAcM,EAAK,IAAI6B,WAChC7H,EAASwI,UAAY,IACrBxI,EAASyI,UAAY,IACrBzI,EAAS0I,QAAU,QACnB1I,EAAS2I,gBAAkB,2DAC3B3I,EAAS4I,aAAe,2DACxB7E,GAAe/D,MAEjBwC,IAAa,GACbrF,EAAQoD,KAAK,wBAEf2G,EAAO2B,mBAAmB7B,GA6iBO8B,CAAYnE,IAC/BoE,OAAO,SAET,4BACEhE,QAlmBK,SAACJ,GACpBA,EAAEmB,iBACF,IAAMkD,EAAUC,SAASC,eAAe,YACpCF,GACFA,EAAQG,SA+lBI3E,UAAS,mCAFX,oBAOJ,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,uBACf,+BACE,4BACE,sCACA,6CACA,wCACA,qCACA,uCACA,sCACA,wCACA,mDACA,sCACA,sCACA,wCACC,CAAC,SAAS4E,SAAV,OAAmB9L,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAS4F,YAA5B,aAAmB,EAAetC,OACjC,+BAIN,+BACG2B,GAAY,kBAAC,IAAD,MAEX/E,IAAQ,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAU+H,KAAI,SAACS,GAAU,IAAD,IAClC,OACE,4BACE,mCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAM5C,MACX,mCAAK4C,QAAL,IAAKA,OAAL,EAAKA,EAAMZ,WACX,mCAAKY,QAAL,IAAKA,OAAL,EAAKA,EAAMtF,QACX,mCAAKsF,QAAL,IAAKA,GAAL,UAAKA,EAAMuC,WAAX,aAAK,EAAWnF,MAChB,mCAAK4C,QAAL,IAAKA,OAAL,EAAKA,EAAMV,OACX,mCAAKU,QAAL,IAAKA,OAAL,EAAKA,EAAMpF,MACX,4BAAK/E,YAAa,OAACmK,QAAD,IAACA,OAAD,EAACA,EAAMlK,SACzB,4BACE,4BACEgJ,KAAK,SACLN,UAAU,mCACVO,QAAS,kBAAMvB,GAAgB,OAACwC,QAAD,IAACA,OAAD,EAACA,EAAM3G,MAHxC,aAQF,4BACE,4BACEyF,KAAK,SACLN,UAAU,mCACVO,QAAS,WAlvBpB,IAACsE,IAkvBmC,OAACrD,QAAD,IAACA,OAAD,EAACA,EAAM3G,GAjvB1DlC,EAAQoD,KAAR,oBAA0B8I,MA8uBF,SAQF,4BACE,uBACEtE,QAAS,kBA/3BlB,SAACrK,GAAW,IAAD,EAC5B4D,IACAgD,GAAe5G,GACf6G,IAAqB,OAAL7G,QAAK,IAALA,OAAA,EAAAA,EAAOoB,SAAU,GACjCqG,GAAe,OAACzH,QAAD,IAACA,OAAD,EAACA,EAAOgG,QACvB2B,GAAY,OAAC3H,QAAD,IAACA,GAAD,UAACA,EAAO6N,WAAR,aAAC,EAAYnF,MACzBd,GAAa,OAAC5H,QAAD,IAACA,OAAD,EAACA,EAAOkG,MACrBE,IAAQ,GAw3BiCwI,CAAWtD,IAC1BxB,UAAU,yBAGd,4BACE,uBACEO,QAAS,kBApuBjBwE,EAouBiC,OAACvD,QAAD,IAACA,OAAD,EAACA,EAAM3G,QAnuB1DmK,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,uDACNC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,kBACnBC,iBAAkB,gBACjBC,MAAK,SAAC7C,GACP,GAAIA,EAAO3M,MACT,OACEyP,YAAUZ,GAAKjJ,SAAQ,kBAAMb,QAC7B+J,IAAKC,KACH,WACA,wCACA,WAGKpC,EAAO+C,UAAYZ,IAAKa,cAAcC,QAC/Cd,IAAKC,KAAK,YAAa,iCAAkC,YArB5C,IAACF,GAquBQ/E,UAAU,kBAET,MAGJ,CAAC,SAAS4E,SAAV,OAAmB9L,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAS4F,YAA5B,aAAmB,EAAetC,OACjC,4BACE,4BACEkE,KAAK,SACLN,UAAU,mCACVO,QAAS,kBAt4BTrK,EAs4BoCsL,EAr4BhE1H,IACAgD,GAAe5G,QACfuD,GAAgB,GAHW,IAACvD,IAm4BF,6BAchB,kBAAC,IAAD,CACE6P,WAAW,MACXC,UAAU,SACVhG,UAAU,cACViG,aAnwBU,SAAC5E,GACvB6E,OAAOC,SAAS,EAAG,GACnBxJ,GAAc0E,EAAMhB,WAkwBR+F,mBAAoB,EACpB7J,UAAWA,GACX8J,cAAc,aACdC,sBAAuB,KACvBC,UAAW7J","file":"static/js/17.9e727ae4.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// Hook\r\nexport const useDebounce = (value, delay) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }","export const statusOption = [\r\n    { value : 0, label : 'Active' },\r\n    { value : 1, label : 'In Active' },\r\n    { value : 2, label : 'Terminated' }\r\n]\r\n\r\nexport const roleOption = [\r\n    { value : 'user', label : 'User' },\r\n    { value : 'admin', label : 'Admin' },\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const roleOptionForAmin = [\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const timeOption = [\r\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\r\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\r\n]\r\n\r\nexport const optionForExpenceType = [\r\n    { value : 'Office expence', label : 'Office expence' },\r\n    { value : 'Employee expence', label : 'Employee expence' },\r\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\r\n    { value : 'Other expence', label : 'Other expence' }\r\n]\r\n\r\nexport const optionForCostCategory = [\r\n    { value : 'Petrol', label : 'Petrol' },\r\n    { value : 'Food', label : 'Food' },\r\n    { value : 'Rent', label : 'Rent' },\r\n    { value : 'Tea', label : 'Tea' },\r\n    { value : 'Transport', label : 'Transport' },\r\n    { value : 'Gift', label : 'Gift' },\r\n    { value : 'Printing', label : 'Printing' },\r\n    { value : 'Advertising', label : 'Advertising' },\r\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\r\n    { value : 'Cleaning', label : 'Cleaning' },\r\n    { value : 'Salary', label : 'Salary' },\r\n    { value : 'Medical Expences', label : 'Medical Expences' },\r\n    { value : 'Insurance', label : 'Insurance' },\r\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\r\n    { value : 'Phone Bill', label : 'Phone Bill' },\r\n    { value : 'Internet Bill', label : 'Internet Bill' },\r\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\r\n    { value : 'Depreciation', label : 'Depreciation' },\r\n    { value : 'Row materials', label : 'Row materials' },\r\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\r\n]\r\n\r\nexport const formateStatus = (status) => {\r\n    switch (+status) {\r\n        case (0):\r\n            return 'Active';\r\n        case (1):\r\n            return 'In Active';\r\n        case (2):\r\n            return 'Terminated'            \r\n        default:\r\n            return 'Active';\r\n    }\r\n}\r\n\r\nexport const formateStatusForTargets = (status) => {\r\n    switch (+status) {\r\n        case (1):\r\n            return 'Running';\r\n        case (2):\r\n            return 'Finished';\r\n        case (3):\r\n            return 'Cancelled';\r\n        case (4):\r\n            return 'Archieved';         \r\n        default:\r\n            return 'Cancelled';\r\n    }\r\n}","export const password_generator = ( len ) => {\r\n    let length = (len)?(len):(10);\r\n    let string = \"abcdefghijklmnopqrstuvwxyz\"; //to upper \r\n    let numeric = '0123456789';\r\n    let password = \"\";\r\n    let character = \"\";\r\n    let crunch = true;\r\n    while( password.length<length ) {\r\n       let entity1 = Math.ceil(string.length * Math.random()*Math.random());\r\n       let entity2 = Math.ceil(numeric.length * Math.random()*Math.random());\r\n       let hold = string.charAt( entity1 );\r\n        hold = (password.length%2==0)?(hold.toUpperCase()):(hold);\r\n        character += hold;\r\n        character += numeric.charAt( entity2 );\r\n        password = character;\r\n    }\r\n    password=password.split('').sort(function(){return 0.5-Math.random()}).join('');\r\n    return password.substr(0,len);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n  getUsers,\r\n  userLogout,\r\n  deleteUsr,\r\n  updateProfile,\r\n  getBranches,\r\n  getIBOs,\r\n  getUserBranch,\r\n  getUserIbo,\r\n  getProductsListClient,\r\n  ImageUpload,\r\n  CreateUser\r\n} from \"../../../utils/APIs\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { password_generator } from \"../../../utils/Functions/passwordGenerator\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport {\r\n  statusOption,\r\n  formateStatus,\r\n  roleOption\r\n} from \"../../../utils/Functions/commonOptions\";\r\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientList = () => {\r\n  const history = useHistory();\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [productlist, setproductlist] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n  const [showPerfomer, setShowPerfomer] = React.useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isDirty, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  var strongRegexMo = new RegExp(\r\n    \"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\"\r\n  );\r\n\r\n  const onPerformanceSubmit = async () => {\r\n    try {\r\n      const updatedData = JSON.stringify({ perfomance: updatePerfomence })\r\n      await updateProfile(updatedData, valueToEdit?.id);\r\n      toast.success(\"Add Perfomance Successfully\", {\r\n        autoClose: 3000,\r\n      });\r\n      list();\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    } finally {\r\n      setShowPerfomer(false);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    data.status = updateStatus;\r\n    data.branch = branchUpdate;\r\n    // data.IBO = IBOUpdate;\r\n    data.role = roleUpdate;\r\n    if (data.password === \"\") {\r\n      delete data.password;\r\n    }\r\n    try {\r\n      const updatedData = JSON.stringify(data);\r\n      await updateProfile(updatedData, valueToEdit?.id);\r\n      toast.success(\"User updated Successfully\", {\r\n        autoClose: 3000,\r\n      });\r\n      list();\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    } finally {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n\r\n  // We start with an empty list of items.\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(20);\r\n  const [show, setShow] = React.useState(false);\r\n  const [valueToEdit, setvalueToEdit] = useState({});\r\n  const [updateStatus, setupdateStatus] = useState(0);\r\n  const [updatePerfomence, setupdatePerfomence] = useState(1);\r\n  const [branchList, setbranchList] = useState([]);\r\n  const [selectedBranch, setselectedBranch] = useState(\"\");\r\n  const [IBOList, setIBOList] = useState([]);\r\n  const [selectedIBO, setselectedIBO] = useState(\"\");\r\n  const [selectedProduct, setselectedProduct] = useState(\"\");\r\n  const [branchUpdate, setbranchUpdate] = useState('')\r\n  const [IBOUpdate, setIBOUpdate] = useState('')\r\n  const [roleUpdate, setroleUpdate] = useState('')\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const onChangeBranchUpdate = (e) => {\r\n    setbranchUpdate(e?.target?.value)\r\n  }\r\n\r\n  const onChangePerfomence = (e) => {\r\n    setupdatePerfomence(+e?.target?.value || 0);\r\n  };\r\n\r\n  const onChangeStatusForm = (e) => {\r\n    setupdateStatus(+e?.target?.value || 0);\r\n  };\r\n\r\n  const onChangeIBOpdate = (e) => {\r\n    setIBOUpdate(e?.target?.value)\r\n  }\r\n\r\n  const onChangeRolepdate = (e) => {\r\n    setroleUpdate(e?.target?.value)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setShowPerfomer(false);\r\n    setvalueToEdit({});\r\n    setupdateStatus(0);\r\n    setbranchUpdate('');\r\n    setIBOUpdate('');\r\n    setroleUpdate('')\r\n    reset()\r\n  };\r\n\r\n  const handleShow = (value) => {\r\n    reset()\r\n    setvalueToEdit(value);\r\n    setupdateStatus(value?.status || 0);\r\n    setbranchUpdate(value?.branch)\r\n    setIBOUpdate(value?.IBO?.name)\r\n    setroleUpdate(value?.role)\r\n    setShow(true);\r\n  };\r\n\r\n  const handlePerfomanceShow = (value) => {\r\n    reset()\r\n    setvalueToEdit(value);\r\n    setShowPerfomer(true);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage, selectedBranch, selectedIBO, selectedProduct]);\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [debouncedSearchTerm]);\r\n\r\n  useEffect(() => {\r\n    getBranchList();\r\n    getIBOList();\r\n    productList();\r\n  }, []);\r\n\r\n  const productList = async () => {\r\n    try {\r\n      const items = await (await getProductsListClient()).data;\r\n      setproductlist(items?.results);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getBranchList = async () => {\r\n    const items = await (await getBranches(5000, 1, \"\", \"branch\")).data;\r\n\r\n    setbranchList(items?.results);\r\n  };\r\n\r\n  const onChangeHandlerBranch = (e) => {\r\n    setItemOffset(0);\r\n    setselectedBranch(e.target.value);\r\n  };\r\n\r\n  const getIBOList = async () => {\r\n    const items = await (await getIBOs(5000, 1, \"\")).data;\r\n    setIBOList(items?.results);\r\n  };\r\n\r\n  const onChangeHandlerIBO = (e) => {\r\n    setItemOffset(0);\r\n    setselectedIBO(e.target.value);\r\n  };\r\n\r\n  const onChangeHandlerProduct = (e) =>{\r\n    setItemOffset(0);\r\n    setselectedProduct(e.target.value);\r\n  }\r\n\r\n  const list = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      let items\r\n      if (cookies?.user?.role === \"branch\") {\r\n        items = await (\r\n          await getUserBranch(\r\n            cookies?.user?.name,\r\n            selectedProduct\r\n          )\r\n        ).data;\r\n        setitemlist(items.results);\r\n      } else if (cookies?.user?.role === \"IBO\") {\r\n        items = await (\r\n          await getUserIbo(\r\n            cookies?.user?.id,\r\n            selectedProduct\r\n          )\r\n        ).data;\r\n        setitemlist(items);\r\n      } else {\r\n        items = await (\r\n          await getUsers(\r\n            itemsPerPage,\r\n            +itemOffset + 1,\r\n            searchTerm,\r\n            \"user\",\r\n            selectedProduct,\r\n            selectedBranch,\r\n            selectedIBO\r\n          )\r\n        ).data;\r\n        setitemlist(items?.results);\r\n      }\r\n      setPageCount(items?.totalPages);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n    setIsLoading(false)\r\n  };\r\n\r\n  const viewUser = (Id) => {\r\n    history.push(`/viewUser/${Id}`);\r\n  }\r\n\r\n  const generatePassword = async (id) => {\r\n    const randomPassword = password_generator();\r\n    const newPassword = JSON.stringify({\r\n      password: randomPassword,\r\n    });\r\n\r\n    try {\r\n      await updateProfile(newPassword, id);\r\n      toast.success(\r\n        \"Password generated and sended to user via Email successfully\",\r\n        { autoClose: 3000 }\r\n      );\r\n    } catch (error) {\r\n      toast.error(\"Password generation failed, please try again later\");\r\n    }\r\n  };\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    window.scrollTo(0, 0);\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  const deleteData = (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonColor: \"#DD6B55\",\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        return (\r\n          deleteUsr(uid).finally(() => list()),\r\n          Swal.fire(\r\n            \"Deleted!\",\r\n            \"Your imaginary file has been deleted.\",\r\n            \"success\"\r\n          )\r\n        );\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n  // console.log(\"it\",itemlist[0])\r\n\r\n  // excel export\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n\r\n  // csv export\r\n  const exportToCSV = (fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(itemlist);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  const headers = [\r\n    { label: \"Name\", key: \"name\", },\r\n    { label: \"Contact no\", key: \"contactno\", },\r\n    { label: \"Branch\", key: \"branch\", },\r\n    { label: \"IBO\", key: \"IBO.name\", },\r\n    { label: \"Email\", key: \"email\", },\r\n    { label: \"Branch\", key: \"branch\", },\r\n    { label: \"DOB\", key: \"dob\", },\r\n    { label: \"Role\", key: \"role\", },\r\n    { label: \"Status\", key: \"status\", },\r\n    { label: \"Bank Account No\", key: \"bankAccNo\", },\r\n    { label: \"Bank IFSC Code\", key: \"bankIfscCode\", },\r\n    { label: \"Bank AadharCard No\", key: \"b_aadhar_card_no\", },\r\n    { label: \"Address\", key: \"address\", },\r\n\r\n  ]\r\n\r\n  const csvreport = {\r\n    data: itemlist,\r\n    headers: headers,\r\n    filename: 'Clue_Mediator_Report.csv'\r\n  };\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-id');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  const fileHandler = (e) => {\r\n    var files = e.target.files;\r\n    var f = files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      var data = e.target.result;\r\n      let readedData = XLSX.read(data, { type: 'binary' });\r\n      const wsname = readedData.SheetNames[0];\r\n      const ws = readedData.Sheets[wsname];\r\n\r\n      /* Convert array to json*/\r\n      const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n      dataParse.splice(0, 1);\r\n      const formData = {};\r\n      setIsLoading(true)\r\n      dataParse.map((item, index) => {\r\n        formData.name = item[0];\r\n        formData.branch = item[1];\r\n        formData.contactno = item[2].toString();\r\n        formData.email = item[3];\r\n        formData.address = item[4];\r\n        formData.bankIfscCode = item[5];\r\n        formData.bankAccNo = item[6].toString();\r\n        formData.password = item[7];\r\n        formData.dob = item[8] ? moment(moment(item[8], 'DD-MM-YYYY')).toISOString() : new Date().toISOString().slice(0, 10);\r\n        formData.product = item[9].toString();\r\n        formData.registration_date =  item[10] ? moment(moment(item[10], 'DD-MM-YYYY')).toISOString() : new Date().toISOString().slice(0, 10);\r\n        formData.maturity_date = item[11] ? moment(moment(item[11], 'DD-MM-YYYY')).toISOString() : new Date().toISOString().slice(0, 10);\r\n        formData.IBO = item[10] ? item[12] : \"633a99010d6d0aedc0e9d5b0\";\r\n        formData.aadhar_card_no = item[13].toString();\r\n        formData.pan_card_no = item[14].toString();\r\n        formData.maxAmount = '0';\r\n        formData.minAmount = '0';\r\n        formData.country = 'India';\r\n        formData.aadhar_card_img = \"http://fcn.ziadoz.com/static/media/fcn_logo.782c8a9c.png\";\r\n        formData.pan_card_img = \"http://fcn.ziadoz.com/static/media/fcn_logo.782c8a9c.png\";\r\n        onSubmitClient(formData);\r\n      })\r\n      setIsLoading(false)\r\n      history.push('/clients/clientlist')\r\n    };\r\n    reader.readAsBinaryString(f)\r\n  }\r\n\r\n  const onSubmitClient = async (data) => {\r\n    try {\r\n      await CreateUser(JSON.stringify(data));\r\n      toast.success(\"user created successfully\");\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showPerfomer}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Make Top Perfomer</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row auth\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-sample\"\r\n                  >\r\n                    <p className=\"card-description\"> Make Top Perfomer </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Perfomance Rank\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect3\"\r\n                              name=\"perfomence\"\r\n                              onChange={onChangePerfomence}\r\n                            >\r\n                              <option value='1' selected={valueToEdit?.perfomance === 1}>1</option>\r\n                              <option value='2' selected={valueToEdit?.perfomance === 2}>2</option>\r\n                              <option value='3' selected={valueToEdit?.perfomance === 3}>3</option>\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                        type=\"button\"\r\n                        onClick={onPerformanceSubmit}\r\n                      >\r\n                        Submit Perfomance\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Client</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row auth\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-sample\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                  >\r\n                    <p className=\"card-description\"> Update Client </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Name\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              defaultValue={valueToEdit.name}\r\n                              {...register(\"name\", { required: true })}\r\n                            />\r\n                            {errors && errors.name && (\r\n                              <p>name is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Address{\" \"}\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"address\"\r\n                              defaultValue={valueToEdit.address}\r\n                              {...register(\"address\", { required: true })}\r\n                            />\r\n                            {errors && errors.address && (\r\n                              <p>address is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Contact No\r\n                          </label>\r\n                          <div className=\"col-sm-8 contact_no\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"contactno\"\r\n                              defaultValue={valueToEdit.contactno}\r\n                              {...register(\"contactno\", {\r\n                                required: true,\r\n                                pattern: strongRegexMo,\r\n                              })}\r\n                            />\r\n                            {errors &&\r\n                              errors.contactno &&\r\n                              errors.contactno.type === \"required\" && (\r\n                                <p>contact number is required field</p>\r\n                              )}\r\n                            {errors &&\r\n                              errors.contactno &&\r\n                              errors.contactno.type === \"pattern\" && (\r\n                                <p>\r\n                                  invalid phone number please use valid formate\r\n                                </p>\r\n                              )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Email\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"email\"\r\n                              defaultValue={valueToEdit.email}\r\n                              {...register(\"email\", {\r\n                                required: true,\r\n                                pattern: /^\\S+@\\S+$/i,\r\n                              })}\r\n                            />\r\n                            {errors &&\r\n                              errors.email &&\r\n                              errors.email.type === \"required\" && (\r\n                                <p>email is required field</p>\r\n                              )}\r\n                            {errors &&\r\n                              errors.email &&\r\n                              errors.email.type === \"pattern\" && (\r\n                                <p>invalid email formate</p>\r\n                              )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            status\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect3\"\r\n                              name=\"status\"\r\n                              onChange={onChangeStatusForm}\r\n                            >\r\n                              {statusOption?.map((i) => {\r\n                                return (\r\n                                  <option\r\n                                    value={i?.value}\r\n                                    selected={+updateStatus === +i?.value}\r\n                                  >\r\n                                    {i?.label}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Search Branch\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              onChange={onChangeBranchUpdate}\r\n                            >\r\n                              {branchList?.map((i) => {\r\n                                return (\r\n                                  <>\r\n                                    <option\r\n                                      selected={i.name === branchUpdate}\r\n                                      value={i.name}\r\n                                    >\r\n                                      {i.name}\r\n                                    </option>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Select IBO\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              onChange={onChangeIBOpdate}\r\n                            >\r\n                              {IBOList?.map((i) => {\r\n                                return (\r\n                                  <>\r\n                                    <option\r\n                                      selected={i.name === IBOUpdate}\r\n                                      value={i.name}\r\n                                    >\r\n                                      {i.name}\r\n                                    </option>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Select Role\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              onChange={onChangeRolepdate}\r\n                            >\r\n                              {roleOption?.map((i) => {\r\n                                return (\r\n                                  <>\r\n                                    <option\r\n                                      selected={i.value === roleUpdate}\r\n                                      value={i.value}\r\n                                    >\r\n                                      {i.label}\r\n                                    </option>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            AadharCard Number\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"aadhar_card_no\"\r\n                              defaultValue={valueToEdit.aadhar_card_no}\r\n                              {...register(\"aadhar_card_no\", { required: true })}\r\n                            />\r\n                            {errors && errors.aadhar_card_no && (\r\n                              <p>Aadharcard number is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            PanCard Number\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"pan_card_no\"\r\n                              defaultValue={valueToEdit.pan_card_no}\r\n                              {...register(\"pan_card_no\", { required: true })}\r\n                            />\r\n                            {errors && errors.pan_card_no && (\r\n                              <p>PanCard number is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Password\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              {...register(\"password\")}\r\n                            />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                        type=\"submit\"\r\n                      >\r\n                        UPDATE\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Clients / Show Clients </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show clients\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              {cookies?.user?.role !== \"IBO\" && cookies?.user?.role !== \"branch\" && (\r\n                <>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-5 col-form-label\">\r\n                        Search Branch\r\n                      </label>\r\n                      <div className=\"col-sm-7\">\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"branch\"\r\n                          onChange={onChangeHandlerBranch}\r\n                        >\r\n                          <option selected={\"\" === selectedBranch} value={\"\"}>\r\n                            Not Selected\r\n                          </option>\r\n                          {branchList?.map((i) => {\r\n                            return (\r\n                              <>\r\n                                <option\r\n                                  selected={i.name === selectedBranch}\r\n                                  value={i.name}\r\n                                >\r\n                                  {i.name}\r\n                                </option>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-5 col-form-label\">Search IBO</label>\r\n                      <div className=\"col-sm-7\">\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"branch\"\r\n                          onChange={onChangeHandlerIBO}\r\n                        >\r\n                          <option selected={\"\" === selectedIBO} value={\"\"}>\r\n                            Not Selected\r\n                          </option>\r\n                          {IBOList?.map((i) => {\r\n                            return (\r\n                              <>\r\n                                <option\r\n                                  selected={i.id === selectedIBO}\r\n                                  value={i.id}\r\n                                >\r\n                                  {i.name}\r\n                                </option>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"row\">\r\n              <>\r\n                <div className=\"col-md-6\">\r\n                  <Form.Group className=\"row\">\r\n                    <label className=\"col-sm-5 col-form-label\">Search Product</label>\r\n                    <div className=\"col-sm-7\">\r\n                      <select\r\n                        className=\"form-control form-control-sm\"\r\n                        id=\"exampleFormControlSelect2\"\r\n                        name=\"branch\"\r\n                        onChange={onChangeHandlerProduct}\r\n                      >\r\n                        <option value=''>--Select product--</option>\r\n                            {productlist.map((item, index) => (\r\n\r\n                              <option key={index} value={item?.id} label={item?.name} selected={selectedProduct === item?.id}></option>\r\n                            ))}                        \r\n                        </select>\r\n                    </div>\r\n                  </Form.Group>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"search-field d-none d-md-block\">\r\n                    <form className=\"d-flex align-items-center h-100\" action=\"#\">\r\n                      <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend outline-gray bg-transparent\">\r\n                          <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control outline-gray bg-transparent border-0\"\r\n                          placeholder=\"Search Clients\"\r\n                          value={searchTerm}\r\n                          onChange={(e) => {\r\n                            setSearchTerm(e?.target?.value);\r\n                            setItemOffset(0);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n            <h4 className=\"card-title\">Client list</h4>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-gradient-primary btn-sm \"\r\n                >\r\n                  <CSVLink {...csvreport} className=\"text-white\">Export to CSV</CSVLink>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-gradient-primary btn-sm \"\r\n                  onClick={() => exportToCSV('Client')}\r\n                >\r\n                  Download Excel\r\n                </button>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <Form.Control\r\n                  id=\"input-id\"\r\n                  className=\"d-none\"\r\n                  type=\"file\"\r\n                  name=\"import_client\"\r\n                  multiple={false}\r\n                  onChange={(e) => { fileHandler(e) }}\r\n                  accept=\".csv\"\r\n                />\r\n                <button\r\n                  onClick={handleUpload}\r\n                  className={`btn btn-gradient-primary btn-sm`}\r\n                >Import Clients\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Name </th>\r\n                    <th> Contact no. </th>\r\n                    <th> Branch </th>\r\n                    <th> IBO </th>\r\n                    <th> Email </th>\r\n                    <th> Role </th>\r\n                    <th> Status </th>\r\n                    <th> Generate Password </th>\r\n                    <th> View </th>\r\n                    <th> Edit </th>\r\n                    <th> Delete </th>\r\n                    {[\"admin\"].includes(cookies?.user?.role) && (\r\n                      <th></th>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {isLoading ? <Spinner />\r\n                    :\r\n                    itemlist && itemlist?.map((item) => {\r\n                      return (\r\n                        <tr>\r\n                          <td>{item?.name}</td>\r\n                          <td>{item?.contactno}</td>\r\n                          <td>{item?.branch}</td>\r\n                          <td>{item?.IBO?.name}</td>\r\n                          <td>{item?.email}</td>\r\n                          <td>{item?.role}</td>\r\n                          <td>{formateStatus(item?.status)}</td>\r\n                          <td>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-gradient-primary btn-sm \"\r\n                              onClick={() => generatePassword(item?.id)}\r\n                            >\r\n                              Generate\r\n                            </button>\r\n                          </td>\r\n                          <td>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-gradient-primary btn-sm \"\r\n                              onClick={() => { viewUser(item?.id) }}\r\n                            >\r\n                              View\r\n                            </button>\r\n                          </td>\r\n                          <td>\r\n                            <i\r\n                              onClick={() => handleShow(item)}\r\n                              className=\"mdi mdi-lead-pencil\"\r\n                            ></i>\r\n                          </td>\r\n                          <td>\r\n                            <i\r\n                              onClick={() => deleteData(item?.id)}\r\n                              className=\"mdi mdi-delete\"\r\n                            >\r\n                              {\" \"}\r\n                            </i>\r\n                          </td>\r\n                          {[\"admin\"].includes(cookies?.user?.role) && (\r\n                            <td>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-gradient-primary btn-sm \"\r\n                                onClick={() => handlePerfomanceShow(item)}\r\n                              >\r\n                                Make Top Perfomer\r\n                              </button>\r\n                            </td>\r\n                          )}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientList;\r\n"],"sourceRoot":""}