{"version":3,"sources":["utils/Functions/commonOptions.js","app/Admin-components/Cost/AddExpences.js"],"names":["statusOption","value","label","roleOption","roleOptionForAmin","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","formateStatusForTargets","AddExpences","useCookies","cookies","history","useHistory","document","addEventListener","e","keyCode","which","preventDefault","useForm","mode","register","handleSubmit","formState","errors","values","isDirty","isValid","getValues","onSubmit","data","formData","FormData","append","user","id","cost","expences","desc","file","type","addCost","toast","success","autoClose","push","response","message","error","process","className","style","display","justifyContent","Group","name","required","map","item","Control","as","multiple","onClick","element","getElementById","click"],"mappings":"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","file":"static/js/23.4e46843f.chunk.js","sourcesContent":["export const statusOption = [\r\n    { value : 0, label : 'Active' },\r\n    { value : 1, label : 'In Active' },\r\n    { value : 2, label : 'Terminated' }\r\n]\r\n\r\nexport const roleOption = [\r\n    { value : 'user', label : 'User' },\r\n    { value : 'admin', label : 'Admin' },\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const roleOptionForAmin = [\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const timeOption = [\r\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\r\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\r\n]\r\n\r\nexport const optionForExpenceType = [\r\n    { value : 'Office expence', label : 'Office expence' },\r\n    { value : 'Employee expence', label : 'Employee expence' },\r\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\r\n    { value : 'Other expence', label : 'Other expence' }\r\n]\r\n\r\nexport const optionForCostCategory = [\r\n    { value : 'Petrol', label : 'Petrol' },\r\n    { value : 'Food', label : 'Food' },\r\n    { value : 'Rent', label : 'Rent' },\r\n    { value : 'Tea', label : 'Tea' },\r\n    { value : 'Transport', label : 'Transport' },\r\n    { value : 'Gift', label : 'Gift' },\r\n    { value : 'Printing', label : 'Printing' },\r\n    { value : 'Advertising', label : 'Advertising' },\r\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\r\n    { value : 'Cleaning', label : 'Cleaning' },\r\n    { value : 'Salary', label : 'Salary' },\r\n    { value : 'Medical Expences', label : 'Medical Expences' },\r\n    { value : 'Insurance', label : 'Insurance' },\r\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\r\n    { value : 'Phone Bill', label : 'Phone Bill' },\r\n    { value : 'Internet Bill', label : 'Internet Bill' },\r\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\r\n    { value : 'Depreciation', label : 'Depreciation' },\r\n    { value : 'Row materials', label : 'Row materials' },\r\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\r\n]\r\n\r\nexport const formateStatus = (status) => {\r\n    switch (+status) {\r\n        case (0):\r\n            return 'Active';\r\n        case (1):\r\n            return 'In Active';\r\n        case (2):\r\n            return 'Terminated'            \r\n        default:\r\n            return 'Active';\r\n    }\r\n}\r\n\r\nexport const formateStatusForTargets = (status) => {\r\n    switch (+status) {\r\n        case (1):\r\n            return 'Running';\r\n        case (2):\r\n            return 'Finished';\r\n        case (3):\r\n            return 'Cancelled';\r\n        case (4):\r\n            return 'Archieved';         \r\n        default:\r\n            return 'Cancelled';\r\n    }\r\n}","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useCookies } from \"react-cookie\";\r\nimport { toast } from 'react-toastify';\r\nimport { addCost } from '../../../utils/APIs';\r\nimport { optionForExpenceType,optionForCostCategory } from \"../../../utils/Functions/commonOptions\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AddExpences = () => {\r\n    const [cookies ] = useCookies([\"user\"]);\r\n    const history = useHistory()\r\n\r\n    document.addEventListener('keypress', function (e) {\r\n        if(e.keyCode === 13 || e.which === 13) {\r\n          e.preventDefault();\r\n          return false;\r\n        }\r\n    });\r\n\r\n    const handleUpload = (e) => {\r\n        e.preventDefault()\r\n        const element = document.getElementById('input-id');\r\n        if (element) {\r\n            element.click();\r\n        }\r\n    };\r\n\r\n    // form validation\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid },\r\n        getValues\r\n    } = useForm({\r\n        mode: \"onChange\",\r\n    });\r\n\r\n    const values = getValues();\r\n\r\n    const onSubmit = async (data) => {\r\n        const formData = new FormData()\r\n        formData.append(\"user\",cookies?.user?.id)\r\n        formData.append(\"totalCost\",+data?.cost)\r\n        formData.append(\"category\",data?.expences)\r\n        formData.append(\"description\",data?.desc)\r\n        formData.append(\"image\",data?.file[0])\r\n        formData.append(\"type\",data?.type || '')\r\n        try {\r\n            await addCost(formData)\r\n            toast.success(\"Invoice added Succesfully\",{ autoClose : 4000 })\r\n            history.push('/costs/fetchExpences')\r\n        } catch (error) {\r\n            if (\r\n                error &&\r\n                error.response &&\r\n                error.response.data &&\r\n                error.response.data.message\r\n              ) {\r\n                toast.error(error.response.data.message);\r\n              } else {\r\n                toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n              }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='page-header'>\r\n                <h3 className='page-title'>Add Expences</h3>\r\n            </div>\r\n            <div className=\"row auth\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <div className=\"col-lg-6 col-md-8 col-sm-12 grid-margin\" >\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                                <p className=\"card-description\"> Add Expences </p>\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-md-12\">\r\n                                        <Form.Group className=\"row\">\r\n                                            <label className=\"col-sm-3 col-form-label\">Expences</label>\r\n                                            <div className=\"col-sm-9\">\r\n                                                <select\r\n                                                    className=\"form-control form-control-lg\"\r\n                                                    id=\"exampleFormControlSelect2\"\r\n                                                    name=\"expences\"\r\n                                                    {...register(\"expences\", {\r\n                                                        required: false,\r\n                                                    })}>\r\n                                                    <option value=''>--Select Expence--</option>\r\n                                                   {optionForCostCategory.map((item) => {\r\n                                                       return <option value={item.value}> {item.label} </option>\r\n                                                   })}\r\n                                                </select>\r\n                                                \r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-md-12\">\r\n                                        <Form.Group className=\"row\">\r\n                                            <label className=\"col-sm-3 col-form-label\">Type</label>\r\n                                            <div className=\"col-sm-9\">\r\n                                                <select\r\n                                                    className=\"form-control form-control-lg\"\r\n                                                    id=\"exampleFormControlSelect2\"\r\n                                                    name=\"type\"\r\n                                                    {...register(\"type\", {\r\n                                                        required: false,\r\n                                                    })}>\r\n                                                    <option value=''>--Select Type--</option>\r\n                                                  \r\n                                                </select>\r\n                                                {errors && errors.type && (\r\n                                                    <p>Type is required field</p>\r\n                                                )}\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <Form.Group className=\"row\">\r\n                                            <label className=\"col-sm-3 col-form-label\">\r\n                                                Total Cost{\" \"}\r\n                                            </label>\r\n                                            <div className=\"col-sm-9\">\r\n                                                <Form.Control\r\n                                                    type=\"number\"\r\n                                                    name=\"cost\"\r\n                                                    {...register(\"cost\", {\r\n                                                        required: true,\r\n                                                    })}\r\n                                                />\r\n                                                {errors && errors.cost && (\r\n                                                    <p>cost is required field</p>\r\n                                                )}\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <Form.Group className=\"row\">\r\n                                            <label className=\"col-sm-3 col-form-label\">\r\n                                                Description{\" \"}\r\n                                            </label>\r\n                                            <div className=\"col-sm-9\">\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    name=\"desc\"\r\n                                                    as=\"textarea\"\r\n                                                    {...register(\"desc\", { required: true })}\r\n                                                />\r\n                                                {errors && errors.desc && (\r\n                                                    <p>description is required field</p>\r\n                                                )}\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <Form.Group className=\"row\">\r\n                                            <label className=\"col-sm-4 col-form-label\">\r\n                                                Upload Invoice{\" \"}\r\n                                            </label>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <Form.Control\r\n                                                    id=\"input-id\"\r\n                                                    className=\"d-none\"\r\n                                                    type=\"file\"\r\n                                                    name=\"file\"\r\n                                                    multiple={false}\r\n                                                    {...register(\"file\", { required: false })}\r\n                                                />\r\n                                                \r\n                                                <button\r\n                                                    onClick={handleUpload}\r\n                                                    className={`btn btn-outline-${values?.file?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\r\n                                                        }`}\r\n                                                >\r\n                                                    {values?.file?.[0]?.name ? values?.file?.[0]?.name : \"Upload Invoice  \"}\r\n                                                </button>\r\n                                                {errors && errors.file && (\r\n                                                    <p>Upload invoice is required field</p>\r\n                                                )}\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"mt-3\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <button\r\n                                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddExpences"],"sourceRoot":""}