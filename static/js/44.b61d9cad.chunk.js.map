{"version":3,"sources":["utils/Functions/useUrl.js","utils/Functions/useDebounce.js","app/Admin-components/Employee-Management/PayrollDetail.js"],"names":["useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","useState","value","setValue","val","set","replace","toString","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","PayrollDetail","searchTerm","setSearchTerm","debouncedSearchTerm","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","setbranchlist","isLoading","setIsLoading","list","getBranchesClient","data","branch","results","getLeads","items","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","action","type","placeholder","onChange","e","target","Fragment","map","item","index","key","name","title","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/44.b61d9cad.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useUrl = (param) => {\n\n    const history = useHistory()\n    const { search, pathname } = useLocation()\n    const url = new URLSearchParams(search)\n\n    const urlParam = url.get(param)\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\n\n    function _setValue(val){\n        url.set(param, val)\n        history.replace({ pathname, search: url.toString() }); \n        setValue(val)\n    }\n\n    return [value, _setValue]\n}","import { useEffect, useState } from \"react\";\n\n// Hook\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay] // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n  }","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport { getLeads, getBranchesClient, deleteLead, userLogout, getBranches } from \"../../../utils/APIs\";\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\nimport Spinner from \"../../shared/Spinner\";\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PayrollDetail = () => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n    const [pageCount, setPageCount] = useState(0);\n    const [itemOffset, setItemOffset] = useUrl(\"page\");\n    const [itemsPerPage] = useState(20);\n\n    const [cookies, setCookie] = useCookies([\"user\"]);\n    const [itemlist, setitemlist] = useState([]);\n    const [branchlist, setbranchlist] = useState([]);\n    const [isLoading, setIsLoading] = useState(true)\n    const history = useHistory()\n\n    useEffect(() => {\n        list();\n    }, [itemOffset, itemsPerPage, debouncedSearchTerm]);\n\n    const list = async () => {\n        setIsLoading(true)\n        try {\n            const branch = await (await getBranchesClient()).data;\n            setbranchlist(branch?.results);\n            const items = await (\n                await getLeads(\n                    itemsPerPage,\n                    +itemOffset + 1,\n                    searchTerm\n                )\n            ).data;\n            setitemlist(items?.results);\n            setPageCount(items?.totalPages);\n            setIsLoading(false)\n        } catch (error) {\n            if (error?.response?.data?.message) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n            }\n\n            if (error?.response?.data?.code === 401) {\n                const formData = JSON.stringify({\n                    refreshToken: localStorage.getItem(\"refreshToken\"),\n                });\n                setCookie(\"user\", null, { path: \"/\" });\n                userLogout(formData).finally(() => {\n                    history.push(\"/user-pages/login-1\");\n                });\n            }\n        }\n    }\n    const handlePageClick = (event) => {\n        setItemOffset(event.selected);\n    };\n\n    return (\n        <div>\n            <div className=\"page-header\">\n                <h3 className=\"page-title\">Employee / Show Payroll </h3>\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\">\n                            <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                                {cookies?.user?.role} Dashboard\n                            </a>\n                        </li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            Show Payroll\n                        </li>\n                    </ol>\n                </nav>\n            </div>\n            <div className=\"col-lg-12 grid-margin stretch-card p0\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row mb-3\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Payroll list</h4>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"search-field d-none d-md-block\">\n                                    <form className=\"d-flex align-items-center h-100\" action=\"#\">\n                                        <div className=\"input-group\">\n                                            <div className=\"input-group-prepend outline-gray bg-transparent\">\n                                                <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\n                                            </div>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control outline-gray bg-transparent border-0\"\n                                                placeholder=\"Search Payroll\"\n                                                value={searchTerm}\n                                                onChange={(e) => {\n                                                    setSearchTerm(e?.target?.value);\n                                                    setItemOffset(0);\n                                                }}\n                                            />\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                            </div>\n                            <div className=\"col-md-6 mt-3\">\n                                <button className=\"btn btn-sm ml-1 btn-primary\">PDF</button>\n                                <button className=\"btn btn-sm ml-1 btn-success\">Excel</button>\n                                <button className=\"btn btn-sm ml-1 btn-warning\">csv</button>\n                                <button className=\"btn btn-sm ml-1 btn-danger\">Copy</button>\n                                <button className=\"btn btn-sm ml-1 btn-secondary\">Print</button>\n                            </div>\n                        </div>\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th> Name </th>\n                                        <th> Payroll Type </th>\n                                        <th> Salary </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        isLoading ? <React.Fragment><Spinner /></React.Fragment>\n                                            :\n                                            itemlist?.map((item, index) => {\n                                                return (\n                                                    <tr key={index}>\n                                                        <td>{item?.name}</td>\n                                                        <td>{item?.title}</td>\n                                                        <td>10000</td>\n                                                    </tr>\n                                                );\n                                            })}\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                breakLabel=\"...\"\n                                nextLabel=\"next >\"\n                                className=\"client-list\"\n                                onPageChange={handlePageClick}\n                                pageRangeDisplayed={5}\n                                pageCount={pageCount}\n                                previousLabel=\"< previous\"\n                                renderOnZeroPageCount={null}\n                                forcePage={itemOffset}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PayrollDetail\n\n\n\n\n"],"sourceRoot":""}