{"version":3,"sources":["app/Admin-components/Product/ProductAdd.js"],"names":["ProductAdd","useCookies","cookies","useState","setitemlist","setBranchlist","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","onSubmit","isDirty","isValid","RegExp","data","CreateUser","toast","success","push","response","message","error","process","useEffect","list","branchList","getBranches","items","console","log","results","code","JSON","stringify","refreshToken","localStorage","getItem","getIBOs","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","style","display","justifyContent","Group","Control","type","name","required","address"],"mappings":"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","file":"static/js/59.8a6707a8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from \"react-bootstrap\";\nimport { useCookies } from \"react-cookie\";\nimport { toast } from \"react-toastify\";\nimport { CreateUser,getBranches,getIBOs } from \"../../../utils/APIs\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ProductAdd = () => {\n  const [cookies] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n  const [branchlist, setBranchlist] = useState([]);\n\n\n  const history = useHistory()\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: \"onChange\",\n  });\n  var strongRegexMo = new RegExp(\n    \"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\"\n  );\n  var strongRegex = new RegExp(\"^(?=.*[A-Za-z])(?=.*[0-9])(?=.{8,})\");\n\n  const onSubmit = async (data) => {\n      try {\n        await CreateUser(data)\n        toast.success(\"user crated successfully\");\n        history.push('/clients/clientlist')\n      } catch (error) {\n        if (\n          error &&\n          error.response &&\n          error.response.data &&\n          error.response.data.message\n        ) {\n          toast.error(error.response.data.message);\n        } else {\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n        }\n      }\n  };\n  useEffect(() => {\n    list();\n  }, []);\n  useEffect(() => {\n    branchList();\n  }, []);\n\n  const list = async () => {\n    try {\n      const items = await (await getBranches()).data;\n      console.log(\"itm\",items)\n      setitemlist(items?.results);\n    } catch (error) {\n      if (error?.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n\n      if (error?.response?.data?.code === 401) {\n        const formData = JSON.stringify({\n          refreshToken: localStorage.getItem(\"refreshToken\"),\n        });\n      \n      }\n    }\n  };\n  const branchList = async () => {\n    try {\n      const items = await (await getIBOs()).data;\n      setBranchlist(items?.results);\n    } catch (error) {\n      if (error?.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n\n      if (error?.response?.data?.code === 401) {\n        const formData = JSON.stringify({\n          refreshToken: localStorage.getItem(\"refreshToken\"),\n        });\n      \n      }\n    }\n  };\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Products / Add Product </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Add Product\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row auth\" style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"col-6 grid-margin\" >\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                <p className=\"card-description\"> Add Product </p>\n                <div className=\"row\" >\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">Name</label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"name\"\n                          {...register(\"name\", { required: true })}\n                        />\n                        {errors && errors.name && <p>name is required field</p>}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Type{\" \"}\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"type\"\n                          {...register(\"type\", { required: true })}\n                        />\n                        {errors && errors.address && (\n                          <p>Type is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Description{\" \"}\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"desc\"\n                          {...register(\"desc\", { required: true })}\n                        />\n                        {errors && errors.address && (\n                          <p>Description is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n          \n                <div className=\"mt-3\" style={{display: 'flex', justifyContent: 'center'}}>\n                  <button\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                  >\n                    SUBMIT\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductAdd;\n"],"sourceRoot":""}