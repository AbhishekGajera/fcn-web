{"version":3,"sources":["utils/Functions/useUrl.js","app/Admin-components/Video/FetchVideo.js"],"names":["useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","useState","value","setValue","val","set","replace","toString","FetchVideo","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","React","show","setShow","valueToEdit","setvalueToEdit","useCookies","cookies","setCookie","itemlist","setitemlist","isLoading","setIsLoading","useEffect","list","useForm","mode","register","handleSubmit","reset","formState","errors","onSubmit","isDirty","isValid","data","target_id","id","updatedData","JSON","stringify","UpdateTargets","toast","success","autoClose","response","message","error","process","getVideo","items","results","totalPages","code","formData","refreshToken","localStorage","getItem","path","userLogout","finally","push","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","as","type","name","defaultValue","Description","required","placeholder","aria-label","href","onClick","event","preventDefault","user","role","aria-current","Fragment","map","item","index","key","title","uid","Swal","fire","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","deleteVideo","dismiss","DismissReason","cancel","videoURL","window","open","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/54.424f0bc2.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useUrl = (param) => {\n\n    const history = useHistory()\n    const { search, pathname } = useLocation()\n    const url = new URLSearchParams(search)\n\n    const urlParam = url.get(param)\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\n\n    function _setValue(val){\n        url.set(param, val)\n        history.replace({ pathname, search: url.toString() }); \n        setValue(val)\n    }\n\n    return [value, _setValue]\n}","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from 'react-bootstrap';\nimport {\n    deleteVideo,\n    getVideo,\n    UpdateTargets,\n    userLogout\n} from \"../../../utils/APIs\";\nimport Swal from \"sweetalert2\";\nimport Spinner from \"../../shared/Spinner\";\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nconst FetchVideo = () => {\n\n    const [pageCount, setPageCount] = useState(0);\n    const [itemOffset, setItemOffset] = useUrl(\"page\");\n    const [itemsPerPage] = useState(20);\n    const [show, setShow] = React.useState(false);\n    const [valueToEdit, setvalueToEdit] = useState({});\n    const [cookies, setCookie] = useCookies([\"user\"]);\n    const [itemlist, setitemlist] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const history = useHistory();\n\n    useEffect(() => {\n        list();\n    }, [itemOffset, itemsPerPage]);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n        setItemOffset(event.selected);\n    };\n\n    const { register, handleSubmit, reset, formState: { errors, isDirty, isValid } } = useForm({\n        mode: \"onChange\"\n    });\n\n    const handleClose = () => {\n        setShow(false)\n        setvalueToEdit({})\n        reset()\n    };\n\n    const handleShow = (value) => {\n        reset()\n        setvalueToEdit(value)\n        setShow(true);\n    }\n\n    const deleteData = (uid) => {\n        Swal.fire({\n            title: \"Are you sure?\",\n            text: \"You will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonColor: \"#DD6B55\",\n            confirmButtonColor: \"#DD6B55\",\n            confirmButtonText: \"Yes, delete it!\",\n            cancelButtonText: \"No, keep it\",\n        }).then((result) => {\n            if (result.value) {\n                return (\n                    deleteVideo(uid).finally(() => list()),\n                    Swal.fire(\n                        \"Deleted!\",\n                        \"Your imaginary file has been deleted.\",\n                        \"success\"\n                    )\n                );\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\n                Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n            }\n        });\n    };\n\n    const onSubmit = async (data) => {\n        try {\n            data.target_id = valueToEdit?.id;\n            const updatedData = JSON.stringify(data)\n            await UpdateTargets(updatedData)\n            toast.success('Target updated Successfully', {\n                autoClose: 3000\n            })\n            list()\n        } catch (error) {\n            if (\n                error &&\n                error.response &&\n                error.response.data &&\n                error.response.data.message\n            ) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n            }\n        } finally {\n            setShow(false)\n        }\n    };\n\n    const list = async () => {\n        setIsLoading(true);\n        try {\n            const items = await (\n                await getVideo()\n            ).data;\n            setitemlist(items?.results);\n            setPageCount(items?.totalPages);\n            setIsLoading(false);\n        } catch (error) {\n            if (error?.response?.data?.message) {\n                toast.error(error.response.data.message);\n            } else {\n                toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n            }\n\n            if (error?.response?.data?.code === 401) {\n                const formData = JSON.stringify({\n                    refreshToken: localStorage.getItem(\"refreshToken\"),\n                });\n                setCookie(\"user\", null, { path: \"/\" });\n                userLogout(formData).finally(() => {\n                    history.push(\"/user-pages/login-1\");\n                });\n            }\n        }\n    };\n\n    const onClickDownload = (videoURL) => {\n        window.open(videoURL, '_blank');\n    }\n\n    return (\n        <div>\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Target</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"row auth\">\n                        <div className=\"col-12 grid-margin\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                                        <p className=\"card-description\"> Update Target </p>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12\">\n                                                <Form.Group className=\"row\">\n                                                    <label className=\"col-sm-3 col-form-label\">\n                                                        Description\n                                                    </label>\n                                                    <div className=\"col-sm-9\">\n                                                        <Form.Control\n                                                            as=\"textarea\"\n                                                            type=\"text\"\n                                                            name=\"Description\"\n                                                            defaultValue={valueToEdit.Description}\n                                                            {...register(\"Description\", { required: true })}\n                                                            placeholder=\"Description\"\n                                                        />\n                                                        {errors && errors.Description && (\n                                                            <p>Description is required field</p>\n                                                        )}\n                                                    </div>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12\">\n\n                                            </div>\n                                        </div>\n\n                                        <div className=\"mt-3\">\n                                            <button\n                                                className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                                                type=\"submit\"\n                                            >\n                                                UPDATE\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n\n\n            </Modal>\n            <div className=\"page-header\">\n                <h3 className=\"page-title\">Video / Show Video </h3>\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\">\n                            <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                                {cookies?.user?.role} Dashboard\n                            </a>\n                        </li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            Show Video\n                        </li>\n                    </ol>\n                </nav>\n            </div>\n            <div className=\"col-lg-12 grid-margin stretch-card p0\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Video list</h4>\n\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th> Type </th>\n                                        <th> Title </th>\n                                        <th> Delete </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {isLoading ? (\n                                        <React.Fragment>\n                                            <Spinner />\n                                        </React.Fragment>\n                                    ) : (\n                                        itemlist?.map((item, index) => {\n                                            return (\n                                                <tr key={index}>\n                                                    <td>{item?.type}</td>\n                                                    <td>{item?.title}</td>\n                                                    <td>\n                                                        <i\n                                                            onClick={() => deleteData(item?.id)}\n                                                            className=\"mdi mdi-delete\"\n                                                        ></i>\n                                                    </td>\n                                                    <td>\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"btn btn-gradient-primary btn-sm \"\n                                                            onClick={() => onClickDownload(item?.url)}\n                                                        >\n                                                            Download Video\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })\n                                    )}\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                breakLabel=\"...\"\n                                nextLabel=\"next >\"\n                                className=\"client-list\"\n                                onPageChange={handlePageClick}\n                                pageRangeDisplayed={5}\n                                pageCount={pageCount}\n                                previousLabel=\"< previous\"\n                                renderOnZeroPageCount={null}\n                                forcePage={itemOffset}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FetchVideo;\n"],"sourceRoot":""}