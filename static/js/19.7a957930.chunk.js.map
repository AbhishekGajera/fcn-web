{"version":3,"sources":["utils/Functions/useDebounce.js","utils/Functions/commonOptions.js","app/Admin-components/Revenues/RevenueFetch.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","statusOption","label","roleOption","roleOptionForAmin","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","formateStatusForTargets","RevenueFetch","searchTerm","setSearchTerm","debouncedSearchTerm","pageCount","setPageCount","selectedExpenceTime","setselectedExpenceTime","useUrl","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","isLoading","setIsLoading","history","useHistory","list","getRevenueList","data","items","results","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","Group","id","name","onChange","e","target","selected","map","i","action","type","placeholder","Fragment","item","index","key","product","total_revenue","net_revenue","commision_branch","commision_ibo","breakLabel","nextLabel","onPageChange","window","scrollTo","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/19.7a957930.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// Hook\r\nexport const useDebounce = (value, delay) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }","export const statusOption = [\r\n    { value : 0, label : 'Active' },\r\n    { value : 1, label : 'In Active' },\r\n    { value : 2, label : 'Terminated' }\r\n]\r\n\r\nexport const roleOption = [\r\n    { value : 'user', label : 'User' },\r\n    { value : 'admin', label : 'Admin' },\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const roleOptionForAmin = [\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const timeOption = [\r\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\r\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\r\n]\r\n\r\nexport const optionForExpenceType = [\r\n    { value : 'Office expence', label : 'Office expence' },\r\n    { value : 'Employee expence', label : 'Employee expence' },\r\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\r\n    { value : 'Other expence', label : 'Other expence' }\r\n]\r\n\r\nexport const optionForCostCategory = [\r\n    { value : 'Petrol', label : 'Petrol' },\r\n    { value : 'Food', label : 'Food' },\r\n    { value : 'Rent', label : 'Rent' },\r\n    { value : 'Tea', label : 'Tea' },\r\n    { value : 'Transport', label : 'Transport' },\r\n    { value : 'Gift', label : 'Gift' },\r\n    { value : 'Printing', label : 'Printing' },\r\n    { value : 'Advertising', label : 'Advertising' },\r\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\r\n    { value : 'Cleaning', label : 'Cleaning' },\r\n    { value : 'Salary', label : 'Salary' },\r\n    { value : 'Medical Expences', label : 'Medical Expences' },\r\n    { value : 'Insurance', label : 'Insurance' },\r\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\r\n    { value : 'Phone Bill', label : 'Phone Bill' },\r\n    { value : 'Internet Bill', label : 'Internet Bill' },\r\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\r\n    { value : 'Depreciation', label : 'Depreciation' },\r\n    { value : 'Row materials', label : 'Row materials' },\r\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\r\n]\r\n\r\nexport const formateStatus = (status) => {\r\n    switch (+status) {\r\n        case (0):\r\n            return 'Active';\r\n        case (1):\r\n            return 'In Active';\r\n        case (2):\r\n            return 'Terminated'            \r\n        default:\r\n            return 'Active';\r\n    }\r\n}\r\n\r\nexport const formateStatusForTargets = (status) => {\r\n    switch (+status) {\r\n        case (1):\r\n            return 'Running';\r\n        case (2):\r\n            return 'Finished';\r\n        case (3):\r\n            return 'Cancelled';\r\n        case (4):\r\n            return 'Archieved';         \r\n        default:\r\n            return 'Cancelled';\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { getRevenueList ,userLogout } from \"../../../utils/APIs\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { timeOption } from \"../../../utils/Functions/commonOptions\";\r\n\r\n\r\nconst RevenueFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  // We start with an empty list of items.\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [selectedExpenceTime, setselectedExpenceTime] = useState(\"\");\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(20);\r\n  const [cookies,setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const history = useHistory()\r\n  \r\n  const onChangeHandlerForExpenceTime = (e) => {\r\n    setItemOffset(0);\r\n    setselectedExpenceTime(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage, debouncedSearchTerm]);\r\n\r\n  // Invoke when user click to request another page. \r\n  const handlePageClick = (event) => {\r\n    window.scrollTo(0, 0);\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n\r\n  const list = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      \r\n      const items = await (\r\n         await getRevenueList(itemsPerPage, +itemOffset + 1)\r\n       ).data;\r\n\r\n      setitemlist(items?.results);\r\n      setPageCount(items?.totalPages);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }    \r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Revenue / Show Revenue </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show Revenue\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <Form.Group className=\"row\">\r\n                  <label className=\"col-sm-4 col-form-label\">\r\n                    Select Time\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <select\r\n                      className=\"form-control form-control-sm\"\r\n                      id=\"exampleFormControlSelect2\"\r\n                      name=\"branch\"\r\n                      onChange={onChangeHandlerForExpenceTime}\r\n                    >\r\n                      <option\r\n                        selected={\"\" === selectedExpenceTime}\r\n                        value={\"\"}\r\n                      >\r\n                        Not Selected\r\n                      </option>\r\n                      {timeOption?.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <option\r\n                              selected={i.value === selectedExpenceTime}\r\n                              value={i.value}\r\n                            >\r\n                              {i.label}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                </Form.Group>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <div className=\"search-field d-none d-md-block\">\r\n                  <form className=\"d-flex align-items-center h-100\" action=\"#\">\r\n                    <div className=\"input-group\">\r\n                      <div className=\"input-group-prepend outline-gray bg-transparent\">\r\n                        <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control outline-gray bg-transparent border-0\"\r\n                        placeholder=\"Search Revenue\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => {\r\n                          setSearchTerm(e?.target?.value);\r\n                          setItemOffset(0);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <h4 className=\"card-title\">Revenue list</h4>\r\n\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Product </th>\r\n                    <th> Total Revenue </th>\r\n                    <th> Net Profit </th>\r\n                    <th> Commision To Branch </th>\r\n                    <th> Commission To IBO </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                  isLoading ? <React.Fragment><Spinner /></React.Fragment>\r\n                    :\r\n                    itemlist?.map((item, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>{item?.product?.name}</td>\r\n                          <td>{item?.total_revenue}</td>\r\n                          <td>{item?.net_revenue}</td>\r\n                          <td>{item?.commision_branch}</td>\r\n                          <td>{item?.commision_ibo}</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevenueFetch;\r\n"],"sourceRoot":""}