{"version":3,"sources":["utils/Functions/useDebounce.js","utils/Functions/useUrl.js","utils/Functions/commonOptions.js","utils/Functions/passwordGenerator.js","app/IBO-components/ClientList/index.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","setValue","val","set","replace","toString","statusOption","label","roleOption","roleOptionForAmin","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","formateStatusForTargets","password_generator","len","length","string","password","character","entity1","Math","ceil","random","entity2","hold","charAt","toUpperCase","split","sort","join","substr","ClientList","useCookies","cookies","setCookie","itemlist","setitemlist","searchTerm","setSearchTerm","debouncedSearchTerm","useForm","mode","register","handleSubmit","reset","formState","errors","strongRegexMo","isDirty","isValid","RegExp","onSubmit","data","updateStatus","branch","branchUpdate","role","roleUpdate","updatedData","JSON","stringify","updateProfile","valueToEdit","id","toast","success","autoClose","list","response","message","error","process","code","formData","refreshToken","localStorage","getItem","path","userLogout","finally","push","setShow","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","React","show","setvalueToEdit","setupdateStatus","branchList","setbranchList","selectedBranch","setselectedBranch","IBOList","setIBOList","selectedIBO","setselectedIBO","setbranchUpdate","IBOUpdate","setIBOUpdate","setroleUpdate","isLoading","setIsLoading","getBranchList","getIBOList","getBranches","items","results","getIBOs","console","log","user","getUserBranch","name","totalPages","getUserIbo","getUsers","generatePassword","randomPassword","newPassword","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","type","defaultValue","required","address","contactno","pattern","email","onChange","e","target","map","i","selected","aadhar_card_no","pan_card_no","aria-label","href","onClick","event","preventDefault","aria-current","action","placeholder","item","IBO","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","deleteUsr","dismiss","DismissReason","cancel","breakLabel","nextLabel","onPageChange","window","scrollTo","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":";oLAGaA,EAAc,SAACC,EAAOC,GAE/B,MAA4CC,mBAASF,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAgBA,OAfAC,qBACE,WAEE,IAAMC,EAAUC,YAAW,WACzBH,EAAkBJ,KACjBC,GAIH,OAAO,WACLO,aAAaF,MAGjB,CAACN,EAAOC,IAEHE,I,6FClBEM,EAAS,SAACC,GAEnB,IAAMC,EAAUC,cAChB,EAA6BC,cAArBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SACVC,EAAM,IAAIC,gBAAgBH,GAE1BI,EAAWF,EAAIG,IAAIT,GACzB,EAA0BR,mBAAsB,OAAbgB,EAAoBA,EAAW,IAAlE,mBAAOlB,EAAP,KAAcoB,EAAd,KAQA,MAAO,CAACpB,EANR,SAAmBqB,GACfL,EAAIM,IAAIZ,EAAOW,GACfV,EAAQY,QAAQ,CAAER,WAAUD,OAAQE,EAAIQ,aACxCJ,EAASC,O,iCCfjB,gRAAO,IAAMI,EAAe,CACxB,CAAEzB,MAAQ,EAAG0B,MAAQ,UACrB,CAAE1B,MAAQ,EAAG0B,MAAQ,aACrB,CAAE1B,MAAQ,EAAG0B,MAAQ,eAGZC,EAAa,CACtB,CAAE3B,MAAQ,OAAQ0B,MAAQ,QAC1B,CAAE1B,MAAQ,QAAS0B,MAAQ,SAC3B,CAAE1B,MAAQ,MAAO0B,MAAQ,OACzB,CAAE1B,MAAQ,SAAU0B,MAAQ,WAGnBE,EAAoB,CAC7B,CAAE5B,MAAQ,MAAO0B,MAAQ,OACzB,CAAE1B,MAAQ,SAAU0B,MAAQ,WAGnBG,EAAa,CACtB,CAAE7B,OAAQ,IAAI8B,MAAOC,SAAQ,IAAID,MAAOE,UAAY,GAAIN,MAAQ,UAChE,CAAE1B,OAAQ,IAAI8B,MAAOC,SAAQ,IAAID,MAAOE,UAAY,IAAKN,MAAQ,WACjE,CAAE1B,OAAQ,IAAI8B,MAAOC,SAAQ,IAAID,MAAOE,UAAY,IAAKN,MAAQ,WACjE,CAAE1B,OAAQ,IAAI8B,MAAOC,SAAQ,IAAID,MAAOE,UAAY,KAAMN,MAAQ,WAClE,CAAE1B,OAAQ,IAAI8B,MAAOC,SAAQ,IAAID,MAAOE,UAAY,KAAMN,MAAQ,WAGzDO,EAAuB,CAChC,CAAEjC,MAAQ,iBAAkB0B,MAAQ,kBACpC,CAAE1B,MAAQ,mBAAoB0B,MAAQ,oBACtC,CAAE1B,MAAQ,wBAAyB0B,MAAQ,yBAC3C,CAAE1B,MAAQ,gBAAiB0B,MAAQ,kBAG1BQ,EAAwB,CACjC,CAAElC,MAAQ,SAAU0B,MAAQ,UAC5B,CAAE1B,MAAQ,OAAQ0B,MAAQ,QAC1B,CAAE1B,MAAQ,OAAQ0B,MAAQ,QAC1B,CAAE1B,MAAQ,MAAO0B,MAAQ,OACzB,CAAE1B,MAAQ,YAAa0B,MAAQ,aAC/B,CAAE1B,MAAQ,OAAQ0B,MAAQ,QAC1B,CAAE1B,MAAQ,WAAY0B,MAAQ,YAC9B,CAAE1B,MAAQ,cAAe0B,MAAQ,eACjC,CAAE1B,MAAQ,mBAAoB0B,MAAQ,oBACtC,CAAE1B,MAAQ,WAAY0B,MAAQ,YAC9B,CAAE1B,MAAQ,SAAU0B,MAAQ,UAC5B,CAAE1B,MAAQ,mBAAoB0B,MAAQ,oBACtC,CAAE1B,MAAQ,YAAa0B,MAAQ,aAC/B,CAAE1B,MAAQ,6BAA8B0B,MAAQ,8BAChD,CAAE1B,MAAQ,aAAc0B,MAAQ,cAChC,CAAE1B,MAAQ,gBAAiB0B,MAAQ,iBACnC,CAAE1B,MAAQ,oBAAqB0B,MAAQ,qBACvC,CAAE1B,MAAQ,eAAgB0B,MAAQ,gBAClC,CAAE1B,MAAQ,gBAAiB0B,MAAQ,iBACnC,CAAE1B,MAAQ,mCAAoC0B,MAAQ,qCAG7CS,EAAgB,SAACC,GAC1B,QAASA,GACL,KAAM,EACF,MAAO,SACX,KAAM,EACF,MAAO,YACX,KAAM,EACF,MAAO,aACX,QACI,MAAO,WAINC,EAA0B,SAACD,GACpC,QAASA,GACL,KAAM,EACF,MAAO,UACX,KAAM,EACF,MAAO,WACX,KAAM,EACF,MAAO,YACX,KAAM,EACF,MAAO,YACX,QACI,MAAO,e,iCChFnB,kCAAO,IAAME,EAAqB,SAAEC,GAOhC,IANA,IAAIC,EAAUD,GAAY,GACtBE,EAAS,6BAETC,EAAW,GACXC,EAAY,GAETD,EAASF,OAAOA,GAAS,CAC7B,IAAII,EAAUC,KAAKC,KAAKL,EAAOD,OAASK,KAAKE,SAASF,KAAKE,UACvDC,EAAUH,KAAKC,KANR,aAMqBN,OAASK,KAAKE,SAASF,KAAKE,UACxDE,EAAOR,EAAOS,OAAQN,GAEzBD,GADAM,EAAQP,EAASF,OAAO,GAAG,EAAIS,EAAKE,cAAgBF,EAGpDP,EADAC,GAVU,aAUWO,OAAQF,GAIjC,OADAN,EAASA,EAASU,MAAM,IAAIC,MAAK,WAAW,MAAO,GAAIR,KAAKE,YAAWO,KAAK,KAC5DC,OAAO,EAAEhB,K,ggNCmxBdiB,UAtwBI,WAAO,IAAD,MACjB7C,EAAUC,cAChB,EAA6B6C,YAAW,CAAC,SAAzC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCzD,mBAAS,IAAzC,mBAAO0D,EAAP,KAAiBC,EAAjB,KACA,EAAoC3D,mBAAS,IAA7C,mBAAO4D,EAAP,KAAmBC,EAAnB,KACMC,EAAsBjE,YAAY+D,EAAY,KAEpD,EAKIG,YAAQ,CACVC,KAAM,aALNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MAHF,IAIEC,UAAaC,EAJf,EAIeA,OAIXC,GARJ,EAIuBC,QAJvB,EAIgCC,QAIZ,IAAIC,OACtB,4FAGIC,EAAQ,uCAAG,WAAOC,GAAP,wFACfA,EAAKzC,OAAS0C,GACdD,EAAKE,OAASC,GAEdH,EAAKI,KAAOC,GACU,KAAlBL,EAAKnC,iBACAmC,EAAKnC,SANC,SASPyC,EAAcC,KAAKC,UAAUR,GATtB,SAUPS,aAAcH,EAAD,OAAcI,SAAd,IAAcA,QAAd,EAAcA,GAAaC,IAVjC,OAWbC,IAAMC,QAAQ,4BAA6B,CACzCC,UAAW,MAEbC,KAda,mDAgBb,sCAAI,KAAOC,gBAAX,iBAAI,EAAiBhB,YAArB,aAAI,EAAuBiB,SACzBL,IAAMM,MAAM,KAAMF,SAAShB,KAAKiB,SAEhCL,IAAMM,MAAMC,wFAGsB,OAAhC,2CAAOH,gBAAP,mBAAiBhB,YAAjB,eAAuBoB,QACnBC,EAAWd,KAAKC,UAAU,CAC9Bc,aAAcC,aAAaC,QAAQ,kBAErC1C,EAAU,OAAQ,KAAM,CAAE2C,KAAM,MAChCC,aAAWL,GAAUM,SAAQ,WAC3B7F,EAAQ8F,KAAK,2BA5BJ,yBAgCbC,IAAQ,GAhCK,6EAAH,sDAqCd,EAAkCxG,mBAAS,GAA3C,mBAAOyG,EAAP,KAAkBC,EAAlB,KAGA,EAAoCnG,YAAO,QAA3C,mBAAOoG,EAAP,KAAmBC,EAAnB,KACA,EAAuB5G,mBAAS,IAAzB6G,EAAP,oBACA,GAAwBC,IAAM9G,UAAS,GAAvC,qBAAO+G,GAAP,MAAaP,GAAb,MACA,GAAsCxG,mBAAS,IAA/C,qBAAOqF,GAAP,MAAoB2B,GAApB,MACA,GAAwChH,mBAAS,GAAjD,qBAAO4E,GAAP,MAAqBqC,GAArB,MACA,GAAoCjH,mBAAS,IAA7C,qBAAOkH,GAAP,MAAmBC,GAAnB,MACA,GAA4CnH,mBAAS,IAArD,qBAAOoH,GAAP,MAAuBC,GAAvB,MACA,GAA8BrH,mBAAS,IAAvC,qBAAOsH,GAAP,MAAgBC,GAAhB,MACA,GAAsCvH,mBAAS,IAA/C,qBAAOwH,GAAP,MAAoBC,GAApB,MACA,GAAwCzH,mBAAS,IAAjD,qBAAO8E,GAAP,MAAqB4C,GAArB,MACA,GAAkC1H,mBAAS,IAA3C,qBAAO2H,GAAP,MAAkBC,GAAlB,MACA,GAAoC5H,mBAAS,IAA7C,qBAAOgF,GAAP,MAAmB6C,GAAnB,MACA,GAAkC7H,oBAAS,GAA3C,qBAAO8H,GAAP,MAAkBC,GAAlB,MAqCA5H,qBAAU,WACRuF,OACC,CAACiB,EAAYE,EAAcO,GAAgBI,KAE9CrH,qBAAU,WACRuF,OACC,CAAC5B,IAEJ3D,qBAAU,WACR6H,KACAC,OACC,IAEH,IAAMD,GAAa,uCAAG,oGACOE,YAAY,IAAM,EAAG,GAAI,UADhC,8BAC2CvD,KAD3C,OACdwD,EADc,OAGpBhB,GAAa,OAACgB,QAAD,IAACA,OAAD,EAACA,EAAOC,SAHD,2CAAH,qDAWbH,GAAU,uCAAG,oGACUI,YAAQ,IAAM,EAAG,IAD3B,8BACgC1D,KADhC,OACXwD,EADW,OAEjBZ,GAAU,OAACY,QAAD,IAACA,OAAD,EAACA,EAAOC,SAFD,2CAAH,qDAUhBE,QAAQC,IAAI,UAAW/E,GACvB,IAAMkC,GAAI,uCAAG,qHACXqC,IAAa,GAEe,YAAjB,OAAPvE,QAAO,IAAPA,GAAA,UAAAA,EAASgF,YAAT,eAAezD,MAHR,0CAMC0D,YAAa,OACjBjF,QADiB,IACjBA,GADiB,UACjBA,EAASgF,YADQ,aACjB,EAAeE,MAPZ,8BASL/D,KATK,OAKDwD,EALC,OAUPxE,EAAW,OAACwE,QAAD,IAACA,OAAD,EAACA,EAAOC,SACnB1B,EAAY,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAOQ,YAXb,mDAcP,sCAAI,KAAOhD,gBAAX,iBAAI,EAAiBhB,YAArB,aAAI,EAAuBiB,SACzBL,IAAMM,MAAM,KAAMF,SAAShB,KAAKiB,SAEhCL,IAAMM,MAAMC,wFAjBP,mCAoBuB,SAAjB,OAAPtC,QAAO,IAAPA,GAAA,UAAAA,EAASgF,YAAT,eAAezD,MApBd,4CAuBC6D,YAAU,OACdpF,QADc,IACdA,GADc,UACdA,EAASgF,YADK,aACd,EAAeE,MAxBZ,gCA0BL/D,KA1BK,QAsBDwD,EAtBC,OA2BPxE,EAAW,OAACwE,QAAD,IAACA,OAAD,EAACA,EAAOC,SACnB1B,EAAY,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAOQ,YA5Bb,oDA+BP,sCAAI,KAAOhD,gBAAX,iBAAI,EAAiBhB,YAArB,aAAI,EAAuBiB,SACzBL,IAAMM,MAAM,KAAMF,SAAShB,KAAKiB,SAEhCL,IAAMM,MAAMC,wFAlCP,2DAwCC+C,YACJhC,GACCF,EAAa,EACd/C,EACA,OACAwD,GACAI,IA9CG,gCAgDL7C,KAhDK,QAuCDwD,EAvCC,OAiDPxE,EAAW,OAACwE,QAAD,IAACA,OAAD,EAACA,EAAOC,SACnB1B,EAAY,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAOQ,YAlDb,oDAqDP,sCAAI,KAAOhD,gBAAX,iBAAI,EAAiBhB,YAArB,aAAI,EAAuBiB,SACzBL,IAAMM,MAAM,KAAMF,SAAShB,KAAKiB,SAEhCL,IAAMM,MAAMC,wFAIsB,OAAhC,2CAAOH,gBAAP,mBAAiBhB,YAAjB,eAAuBoB,QACnBC,EAAWd,KAAKC,UAAU,CAC9Bc,aAAcC,aAAaC,QAAQ,kBAErC1C,EAAU,OAAQ,KAAM,CAAE2C,KAAM,MAChCC,aAAWL,GAAUM,SAAQ,WAC3B7F,EAAQ8F,KAAK,2BAlEV,QAuEXwB,IAAa,GAvEF,0EAAH,qDA0EJe,GAAgB,uCAAG,WAAOxD,GAAP,gFACjByD,EAAiB3G,cACjB4G,EAAc9D,KAAKC,UAAU,CACjC3C,SAAUuG,IAHW,kBAOf3D,aAAc4D,EAAa1D,GAPZ,OAQrBC,IAAMC,QACJ,+DACA,CAAEC,UAAW,MAVM,gDAarBF,IAAMM,MAAM,sDAbS,yDAAH,sDAiDtB,OACE,6BACE,kBAAC,IAAD,CACEkB,KAAMA,GACNkC,OAtLc,WAClBzC,IAAQ,GACRQ,GAAe,IACfC,GAAgB,GAChBS,GAAgB,IAChBE,GAAa,IACbC,GAAc,IACd1D,KAgLI+E,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,uBAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,cACV9E,SAAUR,EAAaQ,IAEvB,uBAAG8E,UAAU,oBAAb,mBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,QAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEC,KAAK,OACLjB,KAAK,OACLkB,aAAcvE,GAAYqD,MACtBzE,EAAS,OAAQ,CAAE4F,UAAU,MAElCxF,GAAUA,EAAOqE,MAChB,yDAOV,yBAAKc,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,UACU,KAEV,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEC,KAAK,OACLjB,KAAK,UACLkB,aAAcvE,GAAYyE,SACtB7F,EAAS,UAAW,CAAE4F,UAAU,MAErCxF,GAAUA,EAAOyF,SAChB,4DAOV,yBAAKN,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cAGA,yBAAKA,UAAU,uBACb,kBAAC,IAAKE,QAAN,eACEC,KAAK,OACLjB,KAAK,YACLkB,aAAcvE,GAAY0E,WACtB9F,EAAS,YAAa,CACxB4F,UAAU,EACVG,QAAS1F,MAGZD,GACCA,EAAO0F,WACmB,aAA1B1F,EAAO0F,UAAUJ,MACf,+DAEHtF,GACCA,EAAO0F,WACmB,YAA1B1F,EAAO0F,UAAUJ,MACf,gFASZ,yBAAKH,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,SAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEC,KAAK,OACLjB,KAAK,QACLkB,aAAcvE,GAAY4E,OACtBhG,EAAS,QAAS,CACpB4F,UAAU,EACVG,QAAS,iBAGZ3F,GACCA,EAAO4F,OACe,aAAtB5F,EAAO4F,MAAMN,MACX,sDAEHtF,GACCA,EAAO4F,OACe,YAAtB5F,EAAO4F,MAAMN,MACX,wDAOZ,yBAAKH,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,UAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVlE,GAAG,4BACHoD,KAAK,SACLwB,SAxUD,SAACC,GAAO,IAAD,EAChClD,KAAgB,OAACkD,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWtK,QAAS,KAmUb,OAMGyB,UANH,IAMGA,SANH,EAMGA,IAAc8I,KAAI,SAACC,GAClB,OACE,4BACExK,MAAK,OAAEwK,QAAF,IAAEA,OAAF,EAAEA,EAAGxK,MACVyK,UAAW3F,OAAiB,OAAC0F,QAAD,IAACA,OAAD,EAACA,EAAGxK,QAFlC,OAIGwK,QAJH,IAIGA,OAJH,EAIGA,EAAG9I,eAUpB,yBAAKgI,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,iBAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVlE,GAAG,4BACHoD,KAAK,SACLwB,SAzWC,SAACC,GAAO,IAAD,EAClCzC,GAAe,OAACyC,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWtK,SAoWH,OAMGoH,SANH,IAMGA,QANH,EAMGA,GAAYmD,KAAI,SAACC,GAChB,OACE,oCACE,4BACEC,SAAUD,EAAE5B,OAAS5D,GACrBhF,MAAOwK,EAAE5B,MAER4B,EAAE5B,eAWrB,yBAAKc,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVlE,GAAG,4BACHoD,KAAK,SACLwB,SAhYH,SAACC,GAAO,IAAD,EAC9BvC,GAAY,OAACuC,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWtK,SA2XA,OAMGwH,SANH,IAMGA,QANH,EAMGA,GAAS+C,KAAI,SAACC,GACb,OACE,oCACE,4BACEC,SAAUD,EAAE5B,OAASf,GACrB7H,MAAOwK,EAAE5B,MAER4B,EAAE5B,eAWrB,yBAAKc,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,eAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVlE,GAAG,4BACHoD,KAAK,SACLwB,SA3ZF,SAACC,GAAO,IAAD,EAC/BtC,GAAa,OAACsC,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWtK,SAsZD,OAMG2B,UANH,IAMGA,SANH,EAMGA,IAAY4I,KAAI,SAACC,GAChB,OACE,oCACE,4BACEC,SAAUD,EAAExK,QAAUkF,GACtBlF,MAAOwK,EAAExK,OAERwK,EAAE9I,gBAWrB,yBAAKgI,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,qBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEC,KAAK,OACLjB,KAAK,iBACLkB,aAAcvE,GAAYmF,gBACtBvG,EAAS,iBAAkB,CAAE4F,UAAU,MAE5CxF,GAAUA,EAAOmG,gBAChB,sEAOV,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,kBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEC,KAAK,OACLjB,KAAK,cACLkB,aAAcvE,GAAYoF,aACtBxG,EAAS,cAAe,CAAE4F,UAAU,MAEzCxF,GAAUA,EAAOoG,aAChB,mEAOV,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,YAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEC,KAAK,WACLjB,KAAK,YACDzE,EAAS,kBAOvB,yBAAKuF,UAAU,QACb,4BACEA,UAAU,2DACVG,KAAK,UAFP,kBAchB,yBAAKH,UAAU,eACb,wBAAIA,UAAU,cAAd,2BACA,yBAAKkB,aAAW,cACd,wBAAIlB,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGmB,KAAK,KAAKC,QAAS,SAACC,GAAD,OAAWA,EAAMC,mBAAvC,OACGtH,QADH,IACGA,GADH,UACGA,EAASgF,YADZ,aACG,EAAezD,KADlB,eAIF,wBAAIyE,UAAU,yBAAyBuB,eAAa,QAApD,mBAMN,yBAAKvB,UAAU,yCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACY,SAAjB,OAAPhG,QAAO,IAAPA,GAAA,UAAAA,EAASgF,YAAT,eAAezD,OAA0C,YAAjB,OAAPvB,QAAO,IAAPA,GAAA,UAAAA,EAASgF,YAAT,eAAezD,OAC/C,oCACE,yBAAKyE,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,iBAGA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVlE,GAAG,4BACHoD,KAAK,SACLwB,SA7eM,SAACC,GAC7BvD,EAAc,GACdS,GAAkB8C,EAAEC,OAAOtK,SA6eL,4BAAQyK,SAAU,KAAOnD,GAAgBtH,MAAO,IAAhD,gBANF,OASGoH,SATH,IASGA,QATH,EASGA,GAAYmD,KAAI,SAACC,GAChB,OACE,oCACE,4BACEC,SAAUD,EAAE5B,OAAStB,GACrBtH,MAAOwK,EAAE5B,MAER4B,EAAE5B,cAUnB,yBAAKc,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cACA,yBAAKA,UAAU,YACb,4BACEA,UAAU,+BACVlE,GAAG,4BACHoD,KAAK,SACLwB,SAjgBG,SAACC,GAC1BvD,EAAc,GACda,GAAe0C,EAAEC,OAAOtK,SAigBF,4BAAQyK,SAAU,KAAO/C,GAAa1H,MAAO,IAA7C,gBANF,OASGwH,SATH,IASGA,QATH,EASGA,GAAS+C,KAAI,SAACC,GACb,OACE,oCACE,4BACEC,SAAUD,EAAE5B,OAASlB,GACrB1H,MAAOwK,EAAE5B,MAER4B,EAAE5B,cAUnB,yBAAKc,UAAU,YACb,yBAAKA,UAAU,kCACb,0BAAMA,UAAU,kCAAkCwB,OAAO,KACvD,yBAAKxB,UAAU,eACb,yBAAKA,UAAU,mDACb,uBAAGA,UAAU,+CAEf,2BACEG,KAAK,OACLH,UAAU,oDACVyB,YAAY,iBACZnL,MAAO8D,EACPsG,SAAU,SAACC,GAAO,IAAD,EACftG,EAAa,OAACsG,QAAD,IAACA,GAAD,UAACA,EAAGC,cAAJ,aAAC,EAAWtK,OACzB8G,EAAc,YAUhC,wBAAI4C,UAAU,cAAd,eAEA,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,uBACf,+BACE,4BACE,sCACA,6CACA,wCACA,qCACA,uCACA,sCACA,wCACA,mDACA,sCACA,0CAGJ,+BACG1B,GAAY,kBAAC,IAAD,MAAH,OAERpE,QAFQ,IAERA,OAFQ,EAERA,EAAU2G,KAAI,SAACa,GACb,OACE,4BACE,mCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMxC,MACX,mCAAKwC,QAAL,IAAKA,OAAL,EAAKA,EAAMnB,WACX,mCAAKmB,QAAL,IAAKA,OAAL,EAAKA,EAAMrG,QACX,mCAAKqG,QAAL,IAAKA,OAAL,EAAKA,EAAMC,KACX,mCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAMjB,OACX,mCAAKiB,QAAL,IAAKA,OAAL,EAAKA,EAAMnG,MACX,4BAAK9C,YAAa,OAACiJ,QAAD,IAACA,OAAD,EAACA,EAAMhJ,SACzB,4BACE,4BACEyH,KAAK,SACLH,UAAU,mCACVoB,QAAS,kBAAM9B,GAAgB,OAACoC,QAAD,IAACA,OAAD,EAACA,EAAM5F,MAHxC,aAQF,4BACE,uBACEsF,QAAS,kBAhoBjB9K,EAgoBkCoL,EA/nBpD/G,IACA6C,GAAelH,GACfmH,IAAqB,OAALnH,QAAK,IAALA,OAAA,EAAAA,EAAOoC,SAAU,GACjCwF,GAAe,OAAC5H,QAAD,IAACA,OAAD,EAACA,EAAO+E,QACvB+C,GAAY,OAAC9H,QAAD,IAACA,OAAD,EAACA,EAAOqL,KACpBtD,GAAa,OAAC/H,QAAD,IAACA,OAAD,EAACA,EAAOiF,WACrByB,IAAQ,GAPS,IAAC1G,GAioBQ0J,UAAU,yBAGd,4BACE,uBACEoB,QAAS,kBAxfjBQ,EAwfiC,OAACF,QAAD,IAACA,OAAD,EAACA,EAAM5F,QAvf1D+F,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,uDACNC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,kBACnBC,iBAAkB,gBACjBC,MAAK,SAACC,GACP,GAAIA,EAAOlM,MACT,OACEmM,YAAUb,GAAK9E,SAAQ,kBAAMZ,QAC7B2F,IAAKC,KACH,WACA,wCACA,WAGKU,EAAOE,UAAYb,IAAKc,cAAcC,QAC/Cf,IAAKC,KAAK,YAAa,iCAAkC,YArB5C,IAACF,GAyfQ5B,UAAU,kBAET,YAQjB,kBAAC,IAAD,CACE6C,WAAW,MACXC,UAAU,SACV9C,UAAU,cACV+C,aA5gBU,SAAC1B,GACvB2B,OAAOC,SAAS,EAAG,GACnB7F,EAAciE,EAAMN,WA2gBRmC,mBAAoB,EACpBjG,UAAWA,EACXkG,cAAc,aACdC,sBAAuB,KACvBC,UAAWlG","file":"static/js/16.ac805f76.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// Hook\r\nexport const useDebounce = (value, delay) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }","import { useState } from 'react'\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const useUrl = (param) => {\r\n\r\n    const history = useHistory()\r\n    const { search, pathname } = useLocation()\r\n    const url = new URLSearchParams(search)\r\n\r\n    const urlParam = url.get(param)\r\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\r\n\r\n    function _setValue(val){\r\n        url.set(param, val)\r\n        history.replace({ pathname, search: url.toString() }); \r\n        setValue(val)\r\n    }\r\n\r\n    return [value, _setValue]\r\n}","export const statusOption = [\r\n    { value : 0, label : 'Active' },\r\n    { value : 1, label : 'In Active' },\r\n    { value : 2, label : 'Terminated' }\r\n]\r\n\r\nexport const roleOption = [\r\n    { value : 'user', label : 'User' },\r\n    { value : 'admin', label : 'Admin' },\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const roleOptionForAmin = [\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const timeOption = [\r\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\r\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\r\n]\r\n\r\nexport const optionForExpenceType = [\r\n    { value : 'Office expence', label : 'Office expence' },\r\n    { value : 'Employee expence', label : 'Employee expence' },\r\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\r\n    { value : 'Other expence', label : 'Other expence' }\r\n]\r\n\r\nexport const optionForCostCategory = [\r\n    { value : 'Petrol', label : 'Petrol' },\r\n    { value : 'Food', label : 'Food' },\r\n    { value : 'Rent', label : 'Rent' },\r\n    { value : 'Tea', label : 'Tea' },\r\n    { value : 'Transport', label : 'Transport' },\r\n    { value : 'Gift', label : 'Gift' },\r\n    { value : 'Printing', label : 'Printing' },\r\n    { value : 'Advertising', label : 'Advertising' },\r\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\r\n    { value : 'Cleaning', label : 'Cleaning' },\r\n    { value : 'Salary', label : 'Salary' },\r\n    { value : 'Medical Expences', label : 'Medical Expences' },\r\n    { value : 'Insurance', label : 'Insurance' },\r\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\r\n    { value : 'Phone Bill', label : 'Phone Bill' },\r\n    { value : 'Internet Bill', label : 'Internet Bill' },\r\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\r\n    { value : 'Depreciation', label : 'Depreciation' },\r\n    { value : 'Row materials', label : 'Row materials' },\r\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\r\n]\r\n\r\nexport const formateStatus = (status) => {\r\n    switch (+status) {\r\n        case (0):\r\n            return 'Active';\r\n        case (1):\r\n            return 'In Active';\r\n        case (2):\r\n            return 'Terminated'            \r\n        default:\r\n            return 'Active';\r\n    }\r\n}\r\n\r\nexport const formateStatusForTargets = (status) => {\r\n    switch (+status) {\r\n        case (1):\r\n            return 'Running';\r\n        case (2):\r\n            return 'Finished';\r\n        case (3):\r\n            return 'Cancelled';\r\n        case (4):\r\n            return 'Archieved';         \r\n        default:\r\n            return 'Cancelled';\r\n    }\r\n}","export const password_generator = ( len ) => {\r\n    let length = (len)?(len):(10);\r\n    let string = \"abcdefghijklmnopqrstuvwxyz\"; //to upper \r\n    let numeric = '0123456789';\r\n    let password = \"\";\r\n    let character = \"\";\r\n    let crunch = true;\r\n    while( password.length<length ) {\r\n       let entity1 = Math.ceil(string.length * Math.random()*Math.random());\r\n       let entity2 = Math.ceil(numeric.length * Math.random()*Math.random());\r\n       let hold = string.charAt( entity1 );\r\n        hold = (password.length%2==0)?(hold.toUpperCase()):(hold);\r\n        character += hold;\r\n        character += numeric.charAt( entity2 );\r\n        password = character;\r\n    }\r\n    password=password.split('').sort(function(){return 0.5-Math.random()}).join('');\r\n    return password.substr(0,len);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n  getUsers,\r\n  userLogout,\r\n  deleteUsr,\r\n  updateProfile,\r\n  getBranches,\r\n  getIBOs,\r\n  getUserBranch,\r\n  getUserIbo\r\n} from \"../../../utils/APIs\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { password_generator } from \"../../../utils/Functions/passwordGenerator\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport {\r\n  statusOption,\r\n  formateStatus,\r\n  roleOption\r\n} from \"../../../utils/Functions/commonOptions\";\r\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\r\nimport Spinner from \"../../shared/Spinner\";\r\n\r\nconst ClientList = () => {\r\n  const history = useHistory();\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isDirty, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  var strongRegexMo = new RegExp(\r\n    \"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\"\r\n  );\r\n\r\n  const onSubmit = async (data) => {\r\n    data.status = updateStatus;\r\n    data.branch = branchUpdate;\r\n    // data.IBO = IBOUpdate;\r\n    data.role = roleUpdate;\r\n    if (data.password === \"\") {\r\n      delete data.password;\r\n    }\r\n    try {\r\n      const updatedData = JSON.stringify(data);\r\n      await updateProfile(updatedData, valueToEdit?.id);\r\n      toast.success(\"User updated Successfully\", {\r\n        autoClose: 3000,\r\n      });\r\n      list();\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    } finally {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  // We start with an empty list of items.\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(10);\r\n  const [show, setShow] = React.useState(false);\r\n  const [valueToEdit, setvalueToEdit] = useState({});\r\n  const [updateStatus, setupdateStatus] = useState(0);\r\n  const [branchList, setbranchList] = useState([]);\r\n  const [selectedBranch, setselectedBranch] = useState(\"\");\r\n  const [IBOList, setIBOList] = useState([]);\r\n  const [selectedIBO, setselectedIBO] = useState(\"\");\r\n  const [branchUpdate, setbranchUpdate] = useState('')\r\n  const [IBOUpdate, setIBOUpdate] = useState('')\r\n  const [roleUpdate, setroleUpdate] = useState('')\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const onChangeBranchUpdate = (e) => {\r\n    setbranchUpdate(e?.target?.value)\r\n  }\r\n\r\n  const onChangeStatusForm = (e) => {\r\n    setupdateStatus(+e?.target?.value || 0);\r\n  };\r\n\r\n  const onChangeIBOpdate = (e) => {\r\n    setIBOUpdate(e?.target?.value)\r\n  }\r\n\r\n  const onChangeRolepdate = (e) => {\r\n    setroleUpdate(e?.target?.value)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setvalueToEdit({});\r\n    setupdateStatus(0);\r\n    setbranchUpdate('');\r\n    setIBOUpdate('');\r\n    setroleUpdate('')\r\n    reset()\r\n  };\r\n\r\n  const handleShow = (value) => {\r\n    reset()\r\n    setvalueToEdit(value);\r\n    setupdateStatus(value?.status || 0);\r\n    setbranchUpdate(value?.branch)\r\n    setIBOUpdate(value?.IBO)\r\n    setroleUpdate(value?.role)\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage, selectedBranch, selectedIBO]);\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [debouncedSearchTerm]);\r\n\r\n  useEffect(() => {\r\n    getBranchList();\r\n    getIBOList();\r\n  }, []);\r\n\r\n  const getBranchList = async () => {\r\n    const items = await (await getBranches(5000, 1, \"\", \"branch\")).data;\r\n\r\n    setbranchList(items?.results);\r\n  };\r\n\r\n  const onChangeHandlerBranch = (e) => {\r\n    setItemOffset(0);\r\n    setselectedBranch(e.target.value);\r\n  };\r\n\r\n  const getIBOList = async () => {\r\n    const items = await (await getIBOs(5000, 1, \"\")).data;\r\n    setIBOList(items?.results);\r\n  };\r\n\r\n  const onChangeHandlerIBO = (e) => {\r\n    setItemOffset(0);\r\n    setselectedIBO(e.target.value);\r\n  };\r\n\r\n  console.log(\"cookies\", cookies)\r\n  const list = async () => {\r\n    setIsLoading(true)\r\n\r\n    if (cookies?.user?.role === \"branch\") {\r\n      try {\r\n        const items = await (\r\n          await getUserBranch(\r\n            cookies?.user?.name\r\n          )\r\n        ).data;\r\n        setitemlist(items?.results);\r\n        setPageCount(items?.totalPages);\r\n\r\n      } catch (error) {\r\n        if (error?.response?.data?.message) {\r\n          toast.error(error.response.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n      }\r\n    } else if(cookies?.user?.role === \"IBO\"){\r\n      try {\r\n        const items = await (\r\n          await getUserIbo(\r\n            cookies?.user?.name\r\n          )\r\n        ).data;\r\n        setitemlist(items?.results);\r\n        setPageCount(items?.totalPages);\r\n\r\n      } catch (error) {\r\n        if (error?.response?.data?.message) {\r\n          toast.error(error.response.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n      }\r\n    }else {\r\n      try {\r\n        const items = await (\r\n          await getUsers(\r\n            itemsPerPage,\r\n            +itemOffset + 1,\r\n            searchTerm,\r\n            \"user\",\r\n            selectedBranch,\r\n            selectedIBO\r\n          )\r\n        ).data;\r\n        setitemlist(items?.results);\r\n        setPageCount(items?.totalPages);\r\n\r\n      } catch (error) {\r\n        if (error?.response?.data?.message) {\r\n          toast.error(error.response.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n\r\n\r\n        if (error?.response?.data?.code === 401) {\r\n          const formData = JSON.stringify({\r\n            refreshToken: localStorage.getItem(\"refreshToken\"),\r\n          });\r\n          setCookie(\"user\", null, { path: \"/\" });\r\n          userLogout(formData).finally(() => {\r\n            history.push(\"/user-pages/login-1\");\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false)\r\n  };\r\n\r\n  const generatePassword = async (id) => {\r\n    const randomPassword = password_generator();\r\n    const newPassword = JSON.stringify({\r\n      password: randomPassword,\r\n    });\r\n\r\n    try {\r\n      await updateProfile(newPassword, id);\r\n      toast.success(\r\n        \"Password generated and sended to user via Email successfully\",\r\n        { autoClose: 3000 }\r\n      );\r\n    } catch (error) {\r\n      toast.error(\"Password generation failed, please try again later\");\r\n    }\r\n  };\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    window.scrollTo(0, 0);\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  const deleteData = (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonColor: \"#DD6B55\",\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        return (\r\n          deleteUsr(uid).finally(() => list()),\r\n          Swal.fire(\r\n            \"Deleted!\",\r\n            \"Your imaginary file has been deleted.\",\r\n            \"success\"\r\n          )\r\n        );\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Client</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row auth\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-sample\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                  >\r\n                    <p className=\"card-description\"> Update Client </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Name\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              defaultValue={valueToEdit.name}\r\n                              {...register(\"name\", { required: true })}\r\n                            />\r\n                            {errors && errors.name && (\r\n                              <p>name is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Address{\" \"}\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"address\"\r\n                              defaultValue={valueToEdit.address}\r\n                              {...register(\"address\", { required: true })}\r\n                            />\r\n                            {errors && errors.address && (\r\n                              <p>address is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Contact No\r\n                          </label>\r\n                          <div className=\"col-sm-8 contact_no\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"contactno\"\r\n                              defaultValue={valueToEdit.contactno}\r\n                              {...register(\"contactno\", {\r\n                                required: true,\r\n                                pattern: strongRegexMo,\r\n                              })}\r\n                            />\r\n                            {errors &&\r\n                              errors.contactno &&\r\n                              errors.contactno.type === \"required\" && (\r\n                                <p>contact number is required field</p>\r\n                              )}\r\n                            {errors &&\r\n                              errors.contactno &&\r\n                              errors.contactno.type === \"pattern\" && (\r\n                                <p>\r\n                                  invalid phone number please use valid formate\r\n                                </p>\r\n                              )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Email\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"email\"\r\n                              defaultValue={valueToEdit.email}\r\n                              {...register(\"email\", {\r\n                                required: true,\r\n                                pattern: /^\\S+@\\S+$/i,\r\n                              })}\r\n                            />\r\n                            {errors &&\r\n                              errors.email &&\r\n                              errors.email.type === \"required\" && (\r\n                                <p>email is required field</p>\r\n                              )}\r\n                            {errors &&\r\n                              errors.email &&\r\n                              errors.email.type === \"pattern\" && (\r\n                                <p>invalid email formate</p>\r\n                              )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            status\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect3\"\r\n                              name=\"status\"\r\n                              onChange={onChangeStatusForm}\r\n                            >\r\n                              {statusOption?.map((i) => {\r\n                                return (\r\n                                  <option\r\n                                    value={i?.value}\r\n                                    selected={+updateStatus === +i?.value}\r\n                                  >\r\n                                    {i?.label}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Search Branch\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              onChange={onChangeBranchUpdate}\r\n                            >\r\n                              {branchList?.map((i) => {\r\n                                return (\r\n                                  <>\r\n                                    <option\r\n                                      selected={i.name === branchUpdate}\r\n                                      value={i.name}\r\n                                    >\r\n                                      {i.name}\r\n                                    </option>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Select IBO\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              onChange={onChangeIBOpdate}\r\n                            >\r\n                              {IBOList?.map((i) => {\r\n                                return (\r\n                                  <>\r\n                                    <option\r\n                                      selected={i.name === IBOUpdate}\r\n                                      value={i.name}\r\n                                    >\r\n                                      {i.name}\r\n                                    </option>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Select Role\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select\r\n                              className=\"form-control form-control-sm\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              onChange={onChangeRolepdate}\r\n                            >\r\n                              {roleOption?.map((i) => {\r\n                                return (\r\n                                  <>\r\n                                    <option\r\n                                      selected={i.value === roleUpdate}\r\n                                      value={i.value}\r\n                                    >\r\n                                      {i.label}\r\n                                    </option>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            AadharCard Number\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"aadhar_card_no\"\r\n                              defaultValue={valueToEdit.aadhar_card_no}\r\n                              {...register(\"aadhar_card_no\", { required: true })}\r\n                            />\r\n                            {errors && errors.aadhar_card_no && (\r\n                              <p>Aadharcard number is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            PanCard Number\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"pan_card_no\"\r\n                              defaultValue={valueToEdit.pan_card_no}\r\n                              {...register(\"pan_card_no\", { required: true })}\r\n                            />\r\n                            {errors && errors.pan_card_no && (\r\n                              <p>PanCard number is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Password\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              {...register(\"password\")}\r\n                            />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                        type=\"submit\"\r\n                      >\r\n                        UPDATE\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Clients / Show Clients </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show clients\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              {cookies?.user?.role !== \"IBO\" && cookies?.user?.role !== \"branch\" && (\r\n                <>\r\n                  <div className=\"col-md-4\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-6 col-form-label\">\r\n                        Search Branch\r\n                      </label>\r\n                      <div className=\"col-sm-6\">\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"branch\"\r\n                          onChange={onChangeHandlerBranch}\r\n                        >\r\n                          <option selected={\"\" === selectedBranch} value={\"\"}>\r\n                            Not Selected\r\n                          </option>\r\n                          {branchList?.map((i) => {\r\n                            return (\r\n                              <>\r\n                                <option\r\n                                  selected={i.name === selectedBranch}\r\n                                  value={i.name}\r\n                                >\r\n                                  {i.name}\r\n                                </option>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-5 col-form-label\">Search IBO</label>\r\n                      <div className=\"col-sm-7\">\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"branch\"\r\n                          onChange={onChangeHandlerIBO}\r\n                        >\r\n                          <option selected={\"\" === selectedIBO} value={\"\"}>\r\n                            Not Selected\r\n                          </option>\r\n                          {IBOList?.map((i) => {\r\n                            return (\r\n                              <>\r\n                                <option\r\n                                  selected={i.name === selectedIBO}\r\n                                  value={i.name}\r\n                                >\r\n                                  {i.name}\r\n                                </option>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <div className=\"search-field d-none d-md-block\">\r\n                      <form className=\"d-flex align-items-center h-100\" action=\"#\">\r\n                        <div className=\"input-group\">\r\n                          <div className=\"input-group-prepend outline-gray bg-transparent\">\r\n                            <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\r\n                          </div>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control outline-gray bg-transparent border-0\"\r\n                            placeholder=\"Search Clients\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => {\r\n                              setSearchTerm(e?.target?.value);\r\n                              setItemOffset(0);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <h4 className=\"card-title\">Client list</h4>\r\n\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Name </th>\r\n                    <th> Contact no. </th>\r\n                    <th> Branch </th>\r\n                    <th> IBO </th>\r\n                    <th> Email </th>\r\n                    <th> Role </th>\r\n                    <th> Status </th>\r\n                    <th> Generate Password </th>\r\n                    <th> Edit </th>\r\n                    <th> Delete </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {isLoading ? <Spinner />\r\n                    :\r\n                    itemlist?.map((item) => {\r\n                      return (\r\n                        <tr>\r\n                          <td>{item?.name}</td>\r\n                          <td>{item?.contactno}</td>\r\n                          <td>{item?.branch}</td>\r\n                          <td>{item?.IBO}</td>\r\n                          <td>{item?.email}</td>\r\n                          <td>{item?.role}</td>\r\n                          <td>{formateStatus(item?.status)}</td>\r\n                          <td>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-gradient-primary btn-sm \"\r\n                              onClick={() => generatePassword(item?.id)}\r\n                            >\r\n                              Generate\r\n                            </button>\r\n                          </td>\r\n                          <td>\r\n                            <i\r\n                              onClick={() => handleShow(item)}\r\n                              className=\"mdi mdi-lead-pencil\"\r\n                            ></i>\r\n                          </td>\r\n                          <td>\r\n                            <i\r\n                              onClick={() => deleteData(item?.id)}\r\n                              className=\"mdi mdi-delete\"\r\n                            >\r\n                              {\" \"}\r\n                            </i>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientList;\r\n"],"sourceRoot":""}