{"version":3,"sources":["utils/Functions/commonOptions.js","app/Admin-components/Cost/ExpenceList.js"],"names":["statusOption","value","label","roleOption","roleOptionForAmin","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","formateStatusForTargets","ExpenceList","useState","selectedExpenceType","setselectedExpenceType","selectedExpenceCategory","setselectedExpenceCategory","selectedExpenceTime","setselectedExpenceTime","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","history","useHistory","useEffect","list","getCostList","includes","user","role","id","data","items","results","console","log","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","aria-current","Group","name","onChange","e","target","selected","map","i","item","category","totalCost","type","description","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","deleteCost","dismiss","DismissReason","cancel","imageURL","image","window","open","breakLabel","nextLabel","onPageChange","scrollTo","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/24.f49a0220.chunk.js","sourcesContent":["export const statusOption = [\r\n    { value : 0, label : 'Active' },\r\n    { value : 1, label : 'In Active' },\r\n    { value : 2, label : 'Terminated' }\r\n]\r\n\r\nexport const roleOption = [\r\n    { value : 'user', label : 'User' },\r\n    { value : 'admin', label : 'Admin' },\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const roleOptionForAmin = [\r\n    { value : 'IBO', label : 'IBO' },\r\n    { value : 'branch', label : 'Branch' }\r\n]\r\n\r\nexport const timeOption = [\r\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\r\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\r\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\r\n]\r\n\r\nexport const optionForExpenceType = [\r\n    { value : 'Office expence', label : 'Office expence' },\r\n    { value : 'Employee expence', label : 'Employee expence' },\r\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\r\n    { value : 'Other expence', label : 'Other expence' }\r\n]\r\n\r\nexport const optionForCostCategory = [\r\n    { value : 'Petrol', label : 'Petrol' },\r\n    { value : 'Food', label : 'Food' },\r\n    { value : 'Rent', label : 'Rent' },\r\n    { value : 'Tea', label : 'Tea' },\r\n    { value : 'Transport', label : 'Transport' },\r\n    { value : 'Gift', label : 'Gift' },\r\n    { value : 'Printing', label : 'Printing' },\r\n    { value : 'Advertising', label : 'Advertising' },\r\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\r\n    { value : 'Cleaning', label : 'Cleaning' },\r\n    { value : 'Salary', label : 'Salary' },\r\n    { value : 'Medical Expences', label : 'Medical Expences' },\r\n    { value : 'Insurance', label : 'Insurance' },\r\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\r\n    { value : 'Phone Bill', label : 'Phone Bill' },\r\n    { value : 'Internet Bill', label : 'Internet Bill' },\r\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\r\n    { value : 'Depreciation', label : 'Depreciation' },\r\n    { value : 'Row materials', label : 'Row materials' },\r\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\r\n]\r\n\r\nexport const formateStatus = (status) => {\r\n    switch (+status) {\r\n        case (0):\r\n            return 'Active';\r\n        case (1):\r\n            return 'In Active';\r\n        case (2):\r\n            return 'Terminated'            \r\n        default:\r\n            return 'Active';\r\n    }\r\n}\r\n\r\nexport const formateStatusForTargets = (status) => {\r\n    switch (+status) {\r\n        case (1):\r\n            return 'Running';\r\n        case (2):\r\n            return 'Finished';\r\n        case (3):\r\n            return 'Cancelled';\r\n        case (4):\r\n            return 'Archieved';         \r\n        default:\r\n            return 'Cancelled';\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { deleteCost, getCostList,userLogout\r\n} from \"../../../utils/APIs\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  optionForExpenceType,\r\n  optionForCostCategory,\r\n  timeOption,\r\n} from \"../../../utils/Functions/commonOptions\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst ExpenceList = () => {\r\n  const [selectedExpenceType, setselectedExpenceType] = useState(\"\");\r\n  const [selectedExpenceCategory, setselectedExpenceCategory] = useState(\"\");\r\n  const [selectedExpenceTime, setselectedExpenceTime] = useState(\"\");\r\n\r\n  // We start with an empty list of items.\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const [itemsPerPage] = useState(20);\r\n  const [cookies,setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const onChangeHandlerForExpenceType = (e) => {\r\n    setItemOffset(0);\r\n    setselectedExpenceType(e.target.value);\r\n  };\r\n\r\n  const onChangeHandlerForExpenceCategory = (e) => {\r\n    setItemOffset(0);\r\n    setselectedExpenceCategory(e.target.value);\r\n  };\r\n\r\n  const onChangeHandlerForExpenceTime = (e) => {\r\n    setItemOffset(0);\r\n    setselectedExpenceTime(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage, selectedExpenceType, selectedExpenceCategory, selectedExpenceTime]);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    window.scrollTo(0, 0);\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  const deleteBranch = (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonColor: \"#DD6B55\",\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        return (\r\n          deleteCost(uid).finally(() => list()),\r\n          Swal.fire(\r\n            \"Deleted!\",\r\n            \"Your imaginary file has been deleted.\",\r\n            \"success\"\r\n          )\r\n        );\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickDownload = (imageURL) => {\r\n    window.open(imageURL, '_blank');\r\n  }\r\n\r\n  const list = async () => {\r\n    try {\r\n      const items = await (\r\n        await getCostList(\r\n          itemsPerPage,\r\n          +itemOffset + 1,\r\n          selectedExpenceCategory,\r\n          selectedExpenceType,\r\n          [\"IBO\", \"branch\"].includes(cookies?.user?.role) ? cookies?.user?.id : ''\r\n        )\r\n      ).data;\r\n      setitemlist(items?.results);\r\n      console.log(\"res\",items?.results);\r\n      setPageCount(items?.totalPages);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">costs / Show Costs </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show Costs\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-6\">\r\n                <Form.Group className=\"row\">\r\n                  <label className=\"col-sm-6 col-form-label\">\r\n                    Select Expence Category\r\n                  </label>\r\n                  <div className=\"col-sm-6\">\r\n                    <select\r\n                      className=\"form-control form-control-sm\"\r\n                      id=\"exampleFormControlSelect2\"\r\n                      name=\"branch\"\r\n                      onChange={onChangeHandlerForExpenceCategory}\r\n                    >\r\n                      <option\r\n                        selected={\"\" === selectedExpenceCategory}\r\n                        value={\"\"}\r\n                      >\r\n                        Not Selected\r\n                      </option>\r\n                      {optionForCostCategory?.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <option\r\n                              selected={i.value === selectedExpenceCategory}\r\n                              value={i.value}\r\n                            >\r\n                              {i.label}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                </Form.Group>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <Form.Group className=\"row\">\r\n                  <label className=\"col-sm-4 col-form-label\">\r\n                    Select Time\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <select\r\n                      className=\"form-control form-control-sm\"\r\n                      id=\"exampleFormControlSelect2\"\r\n                      name=\"branch\"\r\n                      onChange={onChangeHandlerForExpenceTime}\r\n                    >\r\n                      <option\r\n                        selected={\"\" === selectedExpenceTime}\r\n                        value={\"\"}\r\n                      >\r\n                        Not Selected\r\n                      </option>\r\n                      {timeOption?.map((i) => {\r\n                        // console.log(\"val\",i,selectedExpenceTime);\r\n                        \r\n                        return (\r\n                          <>\r\n                            <option\r\n                              selected={i.label === selectedExpenceTime}\r\n                              value={i.value}\r\n                            >\r\n                              {i.label}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                </Form.Group>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <Form.Group className=\"row\">\r\n                  <label className=\"col-sm-6 col-form-label\">\r\n                    Select Expence Type\r\n                  </label>\r\n                  <div className=\"col-sm-6\">\r\n                    <select\r\n                      className=\"form-control form-control-sm\"\r\n                      id=\"exampleFormControlSelect2\"\r\n                      name=\"branch\"\r\n                      onChange={onChangeHandlerForExpenceType}\r\n                    >\r\n                      <option selected={\"\" === selectedExpenceType} value={\"\"}>\r\n                        Not Selected\r\n                      </option>\r\n                      {optionForExpenceType?.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <option\r\n                              selected={i.value === selectedExpenceType}\r\n                              value={i.value}\r\n                            >\r\n                              {i.label}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                </Form.Group>\r\n              </div>\r\n            </div>\r\n            <h4 className=\"card-title\">Expence list</h4>\r\n\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Expence Category </th>\r\n                    <th> Total Expence </th>\r\n                    <th> Type </th>\r\n                    <th> Description </th>\r\n                    <th> User </th>\r\n                    <th> User Type</th>\r\n                    <th> Delete </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {itemlist?.map((item) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{item?.category}</td>\r\n                        <td>{item?.totalCost}</td>\r\n                        <td>{item?.type}</td>\r\n                        <td>{item?.description}</td>\r\n                        <td>{item?.user?.name}</td>\r\n                        <td>{item?.user?.role}</td>\r\n                        <td>\r\n                          <i\r\n                            onClick={() => deleteBranch(item?.id)}\r\n                            className=\"mdi mdi-delete\"\r\n                          ></i>\r\n                        </td>\r\n                        <td>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-gradient-primary btn-sm \"\r\n                            onClick={() => onClickDownload(item?.image)}\r\n                          >\r\n                            Download Invoice\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenceList;\r\n"],"sourceRoot":""}