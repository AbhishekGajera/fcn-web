{"version":3,"sources":["utils/Functions/useDebounce.js","utils/Functions/useUrl.js","app/Admin-components/Product/ProductFetch.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","setValue","val","set","replace","toString","ProductList","searchTerm","setSearchTerm","debouncedSearchTerm","selectedProductType","selectedProductCategory","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","isLoading","setIsLoading","list","getProductsList","data","items","results","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","action","type","placeholder","onChange","e","target","Fragment","map","item","index","key","name","category","description","uid","id","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","deleteProductById","dismiss","DismissReason","cancel","imageURL","image","window","open","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/27.6b117970.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\n// Hook\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n        }, delay);\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay] // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n  }","import { useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useUrl = (param) => {\n\n    const history = useHistory()\n    const { search, pathname } = useLocation()\n    const url = new URLSearchParams(search)\n\n    const urlParam = url.get(param)\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\n\n    function _setValue(val){\n        url.set(param, val)\n        history.replace({ pathname, search: url.toString() }); \n        setValue(val)\n    }\n\n    return [value, _setValue]\n}","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport { deleteProductById, getProductsList,userLogout } from \"../../../utils/APIs\";\nimport Swal from \"sweetalert2\";\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\nimport Spinner from \"../../shared/Spinner\";\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ProductList = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  const [selectedProductType, setselectedProductType] = useState(\"\");\n  const [selectedProductCategory, setselectedProductCategory] = useState(\"\");\n\n  // We start with an empty list of items.\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\n  const [itemsPerPage] = useState(10);\n  const [cookies,setCookie] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n  const [isLoading, setIsLoading] = useState(true)\n  const history = useHistory()\n  \n  useEffect(() => {\n    list();\n  }, [itemOffset, itemsPerPage, selectedProductType, selectedProductCategory, debouncedSearchTerm]);\n\n  // Invoke when user click to request another page. \n  const handlePageClick = (event) => {\n    setItemOffset(event.selected);\n  };\n\n  const deleteProduct = (uid) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonColor: \"#DD6B55\",\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, keep it\",\n    }).then((result) => {\n      if (result.value) {\n        return (\n          deleteProductById(uid).finally(() => list()),\n          Swal.fire(\n            \"Deleted!\",\n            \"Your imaginary file has been deleted.\",\n            \"success\"\n          )\n        );\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n      }\n    });\n  };\n\n  const onClickDownload = (imageURL) => {\n    window.open(imageURL, '_blank');\n  }\n\n  const list = async () => {\n    setIsLoading(true)\n try { const items = await (\n      await getProductsList(\n        itemsPerPage,\n        +itemOffset + 1,\n        searchTerm,\n      )\n    ).data;\n    setitemlist(items?.results);\n    setPageCount(items?.totalPages);\n    setIsLoading(false)\n  }catch(error){\n    if (error?.response?.data?.message) {\n      toast.error(error.response.data.message);\n    } else {\n      toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n    }\n\n    if (error?.response?.data?.code === 401) {\n      const formData = JSON.stringify({\n        refreshToken: localStorage.getItem(\"refreshToken\"),\n      });\n      setCookie(\"user\", null, { path: \"/\" });\n      userLogout(formData).finally(() => {\n        history.push(\"/user-pages/login-1\");\n      });\n    }\n  }\n}\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Products / Fetch Products </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Fetch Products\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n              </div>\n\n              <div className=\"col-md-6\">\n                <div className=\"search-field d-none d-md-block\">\n                  <form className=\"d-flex align-items-center h-100\" action=\"#\">\n                    <div className=\"input-group\">\n                      <div className=\"input-group-prepend outline-gray bg-transparent\">\n                        <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\n                      </div>\n                      <input\n                        type=\"text\"\n                        className=\"form-control outline-gray bg-transparent border-0\"\n                        placeholder=\"Search Products\"\n                        value={searchTerm}\n                        onChange={(e) => {\n                          setSearchTerm(e?.target?.value);\n                          setItemOffset(0);\n                        }}\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n\n            </div>\n            <h4 className=\"card-title\">Product list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Name </th>\n                    <th> Category </th>\n                    <th> Description </th>\n                    <th> Delete </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                  isLoading ? <React.Fragment><Spinner /></React.Fragment>\n                    :\n                    itemlist?.map((item, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{item?.name}</td>\n                          <td>{item?.category}</td>\n                          <td>{item?.description}</td>\n                          <td>\n                            <i\n                              onClick={() => deleteProduct(item?.id)}\n                              className=\"mdi mdi-delete\"\n                            ></i>\n                          </td>\n                          <td>\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-gradient-primary btn-sm \"\n                              onClick={() => onClickDownload(item?.image)}\n                            >\n                              Download Product Image\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n                forcePage={itemOffset}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"sourceRoot":""}