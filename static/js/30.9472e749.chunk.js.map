{"version":3,"sources":["utils/Functions/useUrl.js","utils/Functions/useDebounce.js","app/Admin-components/Employee-Management/Attendance.js"],"names":["useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","useState","value","setValue","val","set","replace","toString","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Attendance","searchTerm","setSearchTerm","debouncedSearchTerm","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","setbranchlist","isLoading","setIsLoading","list","getBranchesClient","data","branch","results","getLeads","items","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","action","type","placeholder","onChange","e","target","Fragment","map","item","index","key","name","title","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/30.9472e749.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const useUrl = (param) => {\r\n\r\n    const history = useHistory()\r\n    const { search, pathname } = useLocation()\r\n    const url = new URLSearchParams(search)\r\n\r\n    const urlParam = url.get(param)\r\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\r\n\r\n    function _setValue(val){\r\n        url.set(param, val)\r\n        history.replace({ pathname, search: url.toString() }); \r\n        setValue(val)\r\n    }\r\n\r\n    return [value, _setValue]\r\n}","import { useEffect, useState } from \"react\";\r\n\r\n// Hook\r\nexport const useDebounce = (value, delay) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { getLeads, getBranchesClient, deleteLead, userLogout, getBranches } from \"../../../utils/APIs\";\r\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Attendance = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(10);\r\n\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [branchlist, setbranchlist] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage, debouncedSearchTerm]);\r\n\r\n  const list = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const branch = await (await getBranchesClient()).data;\r\n      setbranchlist(branch?.results);\r\n      const items = await (\r\n        await getLeads(\r\n          itemsPerPage,\r\n          +itemOffset + 1,\r\n          searchTerm\r\n        )\r\n      ).data;\r\n      setitemlist(items?.results);\r\n      setPageCount(items?.totalPages);\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const handlePageClick = (event) => {\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Employee / Show Attendance </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show Attendance\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-md-6\">\r\n                <h4 className=\"card-title\">Attendance list</h4>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"search-field d-none d-md-block\">\r\n                  <form className=\"d-flex align-items-center h-100\" action=\"#\">\r\n                    <div className=\"input-group\">\r\n                      <div className=\"input-group-prepend outline-gray bg-transparent\">\r\n                        <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control outline-gray bg-transparent border-0\"\r\n                        placeholder=\"Search Attendance\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => {\r\n                          setSearchTerm(e?.target?.value);\r\n                          setItemOffset(0);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Name </th>\r\n                    <th> Status </th>\r\n                    <th> Note </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    isLoading ? <React.Fragment><Spinner /></React.Fragment>\r\n                      :\r\n                      itemlist?.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{item?.name}</td>\r\n                            <td>{item?.title}</td>\r\n                            <td><input type='text' name='note' /></td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attendance\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}