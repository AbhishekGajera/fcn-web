{"version":3,"sources":["app/Admin-components/Notification/AllNotification.js"],"names":["AllNotification","React","useState","show","setShow","searchTerm","setsearchTerm","dropDownOpt","setdropDownOpt","useEffect","getUserlist","getusersbyfilter","items","Userlist","data","results","dropDownValue","map","response","email","useForm","mode","register","handleSubmit","formState","errors","values","isDirty","isValid","getValues","onSubmit","console","log","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","type","name","required","title","options","onChange","term","isMulti","style","textAlign","width","float","marginRight","description","id","multiple","onClick","e","preventDefault","element","document","getElementById","click","file","aria-label","href","event","aria-current","marginBottom"],"mappings":"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","file":"static/js/70.b7680ca0.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from 'react-bootstrap';\nimport { getusersbyfilter } from \"../../../utils/APIs\";\n// import { useCookies } from \"react-cookie\"\nimport Select from 'react-select'\n\nconst AllNotification = () => {\n\n  // const [cookies, setCookie] = useCookies([\"user\"]);\n  const [show, setShow] = React.useState(false);\n  const [searchTerm, setsearchTerm] = React.useState('');\n  const [dropDownOpt, setdropDownOpt] = React.useState([]);\n\n  const handleClose = () => {\n    setShow(false)\n  };\n\n  useEffect(() => {\n    getUserlist();\n  }, [searchTerm]);\n\n  const getUserlist = async () => {\n    const items = await (await getusersbyfilter(searchTerm));\n    const Userlist = items?.data?.results;\n    const dropDownValue = Userlist.map((response) => ({\n      \"value\": response.email,\n      \"label\": response.email\n    }))\n    // console.log(\"dropDownValue\",dropDownValue)\n    setdropDownOpt(dropDownValue)\n  }\n\n  const handleUpload = (e) => {\n    e.preventDefault()\n    const element = document.getElementById('input-id');\n    if (element) {\n      element.click()\n    }\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n    getValues,\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  const values = getValues();\n\n  const onSubmit = async (data) => {\n    console.log(\"data\", data);\n    setShow(false);\n  }\n\n  const searchUpdated = (term) => {\n    console.log(\"term\", term);\n    setsearchTerm(term)\n  }\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Send Notification</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row auth\">\n            <div className=\"col-12 grid-margin\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                    <p className=\"card-description\"> Send Notification </p>\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">Title</label>\n                          <div className=\"col-sm-9\">\n                            <Form.Control\n                              type=\"text\"\n                              name=\"title\"\n                              {...register(\"title\", { required: true })}\n\n                            />\n                            {errors && errors.title && <p>Title is required field</p>}\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Select User{\" \"}\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <Select\n                              options={dropDownOpt}\n                              onChange={searchUpdated}\n                              name='user'\n                              isMulti={true}\n                            />\n                          </div>\n                          <div style={{textAlign:'end',width:'85%'}}>\n                            <span className=\"d-flex\" style={{ float: 'right' }} >\n                              <input style={{ marginRight: \"10px\" }} type=\"checkbox\" />\n                              Select All\n                            </span>\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Description{\" \"}\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <Form.Control\n                              type=\"text\"\n                              name=\"description\"\n                              {...register(\"description\", { required: true })}\n                            />\n                            {errors && errors.description && (\n                              <p>Description is required field</p>\n                            )}\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-4 col-form-label\">\n                            Upload Image{\" \"}</label>\n\n                          <div className=\"col-sm-8\">\n                            <Form.Control\n                              id=\"input-id\"\n                              className=\"d-none\"\n                              type=\"file\"\n                              name=\"file\"\n                              multiple={false}\n                              {...register(\"file\", { required: true })}\n                            />\n\n                            <button\n                              onClick={handleUpload}\n                              className={`btn btn-outline-${values?.file?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\n                                }`}\n                            >\n                              {values?.file?.[0]?.name ? values?.file?.[0]?.name : \"Upload Image\"}\n                            </button>\n                            {errors && errors.file && (\n                              <p>Upload image is required field</p>\n                            )}\n                          </div>\n                        </Form.Group>\n                      </div>\n                    </div>\n                    <div className=\"mt-3\">\n                      <button\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                        type=\"submit\"\n                      >\n                        Send\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Notification / All </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {/* {cookies?.user?.role}  */}\n                Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              All\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\" style={{ marginBottom: '14px' }}>\n              <div className=\"col-md-3\">\n                <button className=\"btn btn-gradient-primary btn-lg\" type=\"button\" onClick={() => setShow(true)}>\n                  Send Notification\n                </button>\n              </div>\n              <div className=\"col-md-9\">\n              </div>\n            </div>\n            <h4 className=\"card-title\">Receiver list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Name </th>\n                    <th> Title </th>\n                    <th> Description </th>\n                    <th> Delete </th>\n                  </tr>\n                </thead>\n                <tbody>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AllNotification;\n\n"],"sourceRoot":""}