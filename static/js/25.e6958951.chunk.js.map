{"version":3,"sources":["assets/images/dashboard/circle.svg","app/client-component/balance/Deposit.js","app/client-component/balance/Withdraw.js","app/client-component/balance/Balance.js"],"names":["module","exports","Deposit","history","useHistory","useCookies","cookies","setCookie","React","useState","show","setShow","itemlist","setitemlist","handleClose","list","getBranchesClient","data","items","results","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","useEffect","useForm","mode","register","handleSubmit","formState","errors","onSubmit","isDirty","isValid","amount","user","id","branch","addTransaction","success","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","type","placeholder","name","required","value","map","item","index","key","label","src","require","alt","onClick","Withdraw","Balance","aria-label","href","event","preventDefault","aria-current"],"mappings":"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","file":"static/js/25.e6958951.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circle.953c9ca0.svg\";","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport {\r\n  addTransaction,\r\n  getBranchesClient,\r\n  userLogout\r\n} from \"../../../utils/APIs\";\r\n\r\nconst Deposit = () => {\r\n  const history = useHistory();\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [show, setShow] = React.useState(false);\r\n  const [itemlist, setitemlist] = React.useState([]);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const list = async () => {\r\n    try {\r\n      const items = await (await getBranchesClient()).data;\r\n      setitemlist(items?.results);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    list();\r\n  }, []);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = async (data) => {\r\n    handleClose();\r\n    const formData = JSON.stringify({\r\n      'total': data.amount,\r\n      'from_user': cookies?.user?.id,\r\n      'to_user': data.branch,\r\n      'type': \"deposit\",\r\n      'role':'branch',\r\n      'status': 0\r\n    })\r\n    try {\r\n      await addTransaction(formData);\r\n      toast.success(\"Deposit successfully\");\r\n      history.push(\"/balance\");\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Deposit</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 \">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-sample\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Enter Amount\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Amount\"\r\n                              name=\"amount\"\r\n                              {...register(\"amount\", { required: false })}\r\n                            />\r\n                            {errors?.amount && <p>{errors?.amount?.message}</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            To\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select\r\n                              className=\"form-control form-control-lg\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              {...register(\"branch\", {\r\n                                required: true,\r\n                              })}\r\n                            >\r\n                              <option value=''>--Select branch--</option>\r\n                              {itemlist.map((item, index) => (\r\n                                <option key={index} value={item?.id} label={item?.name} ></option>\r\n                              ))}\r\n                            </select>\r\n                            {errors && errors.branch && <p>Select branch is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-sm font-weight-medium auth-form-btn \"\r\n                        type=\"submit\"\r\n                      >\r\n                        SUBMIT\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <div className=\"col-md-4 stretch-card grid-margin\">\r\n        <div className=\"card bg-gradient-success card-img-holder text-white\">\r\n          <div className=\"card-body\">\r\n            <img\r\n              src={require(\"../../../assets/images/dashboard/circle.svg\")}\r\n              className=\"card-img-absolute\"\r\n              alt=\"circle\"\r\n            />\r\n            <h4 className=\"font-weight-normal mb-4\">\r\n              Deposit{\" \"}\r\n              <i className=\"mdi mdi-chart-line mdi-24px float-right\"></i>\r\n            </h4>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-gradient-primary btn-fw mb-2 center\"\r\n              onClick={handleShow}\r\n            >\r\n              Click Here\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Deposit;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport {\r\n  addTransaction,\r\n  getBranchesClient,\r\n  userLogout\r\n} from \"../../../utils/APIs\";\r\n\r\nconst Withdraw = () => {\r\n  const history = useHistory();\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = React.useState([]);\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const list = async () => {\r\n    try {\r\n      const items = await (await getBranchesClient()).data;\r\n      setitemlist(items?.results);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    handleClose();\r\n    const formData = JSON.stringify({\r\n      'total': data.amount,\r\n      'from_user': cookies?.user?.id,\r\n      'to_user': data.branch,\r\n      'type': \"withdraw\",\r\n      'role':\"branch\",\r\n      'status': 0\r\n    })\r\n    try {\r\n      await addTransaction(formData);\r\n      toast.success(\"Withdraw Request successfully\");\r\n      history.push(\"/balance\");\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    list();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Withdraw</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 \">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Enter Amount\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Amount\"\r\n                              name=\"amount\"\r\n                              {...register(\"amount\", { required: false })}\r\n                            />\r\n                            {errors?.amount && <p>amount is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            To\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select\r\n                              className=\"form-control form-control-lg\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              {...register(\"branch\", {\r\n                                required: true,\r\n                              })}\r\n                            >\r\n                              <option value=''>--Select branch--</option>\r\n                              {itemlist.map((item, index) => (\r\n                                <option key={index} value={item?.id} label={item?.name} ></option>\r\n                              ))}\r\n                            </select>\r\n                            {errors && errors.branch && <p>Select branch is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-sm font-weight-medium auth-form-btn \"\r\n                        type=\"submit\"\r\n                      >\r\n                        SUBMIT\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <div className=\"col-md-4 stretch-card grid-margin\">\r\n        <div className=\"card bg-gradient-danger card-img-holder text-white\">\r\n          <div className=\"card-body\">\r\n            <img\r\n              src={require(\"../../../assets/images/dashboard/circle.svg\")}\r\n              className=\"card-img-absolute\"\r\n              alt=\"circle\"\r\n            />\r\n            <h4 className=\"font-weight-normal mb-4\">\r\n              WithDraw{\" \"}\r\n              <i className=\" mdi mdi-logout-variant mdi-24px float-right\"></i>\r\n            </h4>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-gradient-primary btn-fw mb-2\"\r\n              onClick={handleShow}\r\n            >\r\n              Click Here\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Withdraw;\r\n","import React from \"react\";\r\nimport Deposit from \"./Deposit\";\r\nimport Withdraw from \"./Withdraw\";\r\n\r\nconst Balance = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\"> Balance </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                Balance\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Balance\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row\">\r\n        <Deposit />\r\n        <Withdraw />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n"],"sourceRoot":""}