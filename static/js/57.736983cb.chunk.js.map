{"version":3,"sources":["common/MySelect.js","app/Admin-components/Notification/AllNotification.js"],"names":["MySelect","label","options","asyncSelect","loadOptions","components","placeholder","onSelect","fixedHeight","defaultOptions","props","ref","useRef","asyncRef","useState","fieldValue","setFieldValue","onChange","value","console","info","onMenuClose","current","select","blur","searchPromptText","autoload","isSearchable","searchable","cacheOptions","onInputChange","context","action","onFocus","state","inputValue","handleInputChange","onKeyDown","event","keyCode","AllNotification","history","useHistory","useCookies","cookies","setCookie","React","show","setShow","pageCount","setPageCount","setPersonalizeCount","pageAudienceCount","setAudienceCount","useUrl","itemOffset","setItemOffset","audienceOffset","setAudienceOffset","itemsPerPage","itemlist","setitemlist","audiencelist","setaudiencelist","personalizelist","setpersonalizelist","isLoading","setIsLoading","img","setimg","userOptions","setuserOptions","selectedUser","setselectedUser","handleClose","reset","useEffect","list","getUser","timer","setTimeout","clearTimeout","deleteNotifications","uid","data","JSON","stringify","is_delete","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","user","role","updateNotification","finally","deleteNotification","dismiss","DismissReason","cancel","viewNotification","Id","push","pathname","search","URLSearchParams","id","toString","name","getAllUsers","results","map","i","getNotification","items","getNotificationByAudience","filter","totalPages","response","message","toast","error","process","code","formData","refreshToken","localStorage","getItem","path","userLogout","audienceData","getPersonalizedNotification","personalizeData","useForm","mode","register","handleSubmit","formState","errors","values","isDirty","isValid","getValues","onSubmit","Data","FormData","append","ImageUpload","fileResult","attachment","secure_url","type","status","targetAudience","addNotification","success","Promise","resolve","getOptions","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Form","Group","Control","required","val","content","e","target","files","onClick","preventDefault","element","document","getElementById","click","aria-label","href","aria-current","style","marginBottom","Spinner","item","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage","length"],"mappings":"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","file":"static/js/57.736983cb.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Async from \"react-select/async\";\r\n\r\nconst MySelect = ({\r\n  label,\r\n  options,\r\n  asyncSelect,\r\n  loadOptions,\r\n  components,\r\n  placeholder,\r\n  fixedHeight,\r\n  onSelect,\r\n  defaultOptions = [],\r\n  ...props\r\n}) => {\r\n  const ref = useRef();\r\n  const asyncRef = useRef();\r\n\r\n  const [fieldValue, setFieldValue] = useState();\r\n\r\n  // Gets called when an option is chosen or created.\r\n  const onChange = value => {\r\n    console.info(\"inputvalue++ -> \",value)\r\n    setFieldValue(value);\r\n    onSelect(value);\r\n  };\r\n\r\n  // Toggle menu by presence of input.\r\n  // Reset value if input is emptied.\r\n  const onInputChange = (value, context) => {\r\n    if (!value && context.action === \"input-change\") {\r\n      onChange(null);\r\n    }\r\n  };\r\n\r\n  // Restore input value.\r\n  const onFocus = () => {\r\n    if (fieldValue) {\r\n      asyncRef.current.state.inputValue = fieldValue.label;\r\n      asyncRef.current.select.state.inputValue = fieldValue.label;\r\n      asyncRef.current.handleInputChange(fieldValue.label);\r\n    }\r\n  };\r\n\r\n  // Close menu when pressing enter. Submit does not work on mobile.\r\n  const onKeyDown = event => {\r\n    if (event.keyCode === 13) {\r\n      onMenuClose();\r\n    }\r\n  };\r\n\r\n  // Blur select element to trigger onFocus on next click.\r\n  const onMenuClose = () => {\r\n    asyncRef.current.select.blur();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div ref={ref} />\r\n      <Async\r\n        ref={asyncRef}\r\n        {...props}\r\n        value={fieldValue}\r\n        components={components ? components : null}\r\n        loadOptions={loadOptions ? loadOptions : () => null}\r\n        placeholder={placeholder ? placeholder : \"Select...\"}\r\n        searchPromptText=\"Start Typing\"\r\n        autoload\r\n        isSearchable\r\n        searchable\r\n        cacheOptions\r\n        // Hook into events to make the editing work.\r\n        onChange={onChange}\r\n        onInputChange={onInputChange}\r\n        onFocus={onFocus}\r\n        onKeyDown={onKeyDown}\r\n        onMenuClose={onMenuClose}\r\n        defaultOptions={defaultOptions}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MySelect;","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { ImageUpload, userLogout, addNotification, updateNotification, getNotification, deleteNotification, getNotificationByAll, getPersonalizedNotification, getNotificationByAudience, getAllUsers } from \"../../../utils/APIs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Swal from \"sweetalert2\";\r\nimport MySelect from \"../../../common/MySelect\";\r\n\r\n\r\nconst AllNotification = () => {\r\n\r\n  const history = useHistory();\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [show, setShow] = React.useState(false);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [pagepersonalizeCount, setPersonalizeCount] = useState(0);\r\n  const [pageAudienceCount, setAudienceCount] = useState(0);\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [audienceOffset, setAudienceOffset] = useUrl(\"page\");\r\n  const [personalizeOffset, setpersonalizeOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(20);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [audiencelist, setaudiencelist] = useState([]);\r\n  const [personalizelist, setpersonalizelist] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [img, setimg] = useState()\r\n  const [userOptions, setuserOptions] = useState([]);\r\n  const [selectedUser, setselectedUser] = useState('')\r\n\r\n  const onChangeImage = (e) => {\r\n    setimg(e?.target?.files[0])\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    reset()\r\n  };\r\n\r\n  useEffect(() => {\r\n    list()\r\n    getUser()\r\n  }, [itemOffset, itemsPerPage])\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      list()\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, [])\r\n\r\n  const deleteNotifications = (uid) => {\r\n    const data = JSON.stringify({\r\n      is_delete: 'true'\r\n    })\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonColor: \"#DD6B55\",\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (cookies?.user?.role !== 'admin') {\r\n          return (\r\n            updateNotification(uid, data).finally(() => list()),\r\n            Swal.fire(\r\n              \"Deleted!\",\r\n              \"Your imaginary file has been deleted.\",\r\n              \"success\"\r\n            )\r\n          );\r\n        } else {\r\n          return (\r\n            deleteNotification(uid).finally(() => list()),\r\n            Swal.fire(\r\n              \"Deleted!\",\r\n              \"Your imaginary file has been deleted.\",\r\n              \"success\"\r\n            )\r\n          );\r\n        }\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const viewNotification = (Id) => {\r\n    history.push({\r\n      pathname: '/viewNotification',\r\n      search: \"?\" + new URLSearchParams({ id: Id }).toString()\r\n    })\r\n  }\r\n\r\n  const getUser = async (name = '') => {\r\n    const { data } = await getAllUsers(500, 1, name)\r\n    setuserOptions(data?.results?.map((i) => ({ ...i, value: i?.id, label: i?.name })))\r\n    return data?.results?.map((i) => ({ ...i, value: i?.id, label: i?.name }))\r\n  }\r\n\r\n  const list = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      let items\r\n      if (cookies?.user?.role === 'admin') {\r\n        items = await (\r\n          await getNotification('1', itemsPerPage, +itemOffset + 1,)\r\n        ).data;\r\n        setitemlist(items?.results);\r\n      } else if (cookies?.user?.role === 'IBO') {\r\n        items = await (\r\n          await getNotificationByAudience(1, 'all', itemsPerPage, +itemOffset + 1,)\r\n        ).data;\r\n        setitemlist(items?.results?.filter(data => data.is_delete === 'false'));\r\n      } else if (cookies?.user?.role === 'branch') {\r\n        items = await (\r\n          await getNotificationByAudience(1, 'all', itemsPerPage, +itemOffset + 1,)\r\n        ).data;\r\n        setitemlist(items?.results?.filter(data => data.is_delete === 'false'));\r\n      } else if (cookies?.user?.role === 'user') {\r\n        items = await (\r\n          await getNotificationByAudience(1, 'all', itemsPerPage, +itemOffset + 1,)\r\n        ).data;\r\n        setitemlist(items?.results?.filter(data => data.is_delete === 'false'));\r\n      }\r\n      setPageCount(items?.totalPages);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n    if (cookies?.user?.role !== 'admin') {\r\n      let name;\r\n      try {\r\n        if (cookies?.user?.role === 'IBO') {\r\n          name = 'ibo';\r\n        } else if (cookies?.user?.role === 'branch') {\r\n          name = 'branch';\r\n        } else if (cookies?.user?.role === 'user') {\r\n          name = 'user';\r\n        }\r\n        const audienceData = await (\r\n          await getNotificationByAudience(1, name, itemsPerPage, +audienceOffset + 1,)\r\n        ).data;\r\n        setaudiencelist(audienceData?.results?.filter(data => data.is_delete === 'false'));\r\n        setAudienceCount(audienceData?.totalPages);\r\n      } catch (error) {\r\n        if (error?.response?.data?.message) {\r\n          toast.error(error.response.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n      }\r\n      try {\r\n        const personalizeData = await (\r\n          await getPersonalizedNotification(cookies?.user?.id, itemsPerPage, +audienceOffset)\r\n        ).data;\r\n        setpersonalizelist(personalizeData?.results?.results?.filter(data => data.is_delete === 'false'));\r\n        setPersonalizeCount(personalizeData?.totalPages);\r\n      } catch (error) {\r\n        if (error?.response?.data?.message) {\r\n          toast.error(error.response.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false)\r\n  };\r\n\r\n  const handlePageClick = (event) => {\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  const handleaudiencePageClick = (event) => {\r\n    setAudienceOffset(event.selected);\r\n  };\r\n\r\n  const handlepersonlizePageClick = (event) => {\r\n    setpersonalizeOffset(event.selected);\r\n  };\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-id');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isDirty, isValid },\r\n    getValues,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const values = getValues();\r\n\r\n  const onSubmit = async (data) => {\r\n    handleClose();\r\n    const Data = new FormData();\r\n    let fileResult;\r\n    if (img) {\r\n      Data.append('file', img);\r\n      fileResult = await ImageUpload(Data)\r\n      if (fileResult.error) {\r\n        toast.error(fileResult.error.message);\r\n      }\r\n    }\r\n    try {\r\n      data.attachment = fileResult ? fileResult.secure_url : '';\r\n      data.user = cookies?.user?.id;\r\n      data.type = \"all\";\r\n      data.status = 1;\r\n      if (data?.targetAudience === 'specificUser') {\r\n        data.user = selectedUser\r\n      }\r\n      const result = await addNotification(data)\r\n      toast.success(\"Notification Added successfully\");\r\n      list();\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  }\r\n\r\n  const loadOptions = async inputValue => {\r\n    return new Promise(resolve => resolve(getOptions(inputValue)));\r\n  };\r\n\r\n  const getOptions = async inputValue => {\r\n    // how to trigger this to be called within loadOptions when option is selected?\r\n    return getUser(inputValue);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Send Notification</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row auth\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <p className=\"card-description\"> Send Notification </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Title</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"title\"\r\n                              {...register(\"title\", { required: true })}\r\n\r\n                            />\r\n                            {errors && errors.title && <p>Title is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Select targetAudience{\" \"}\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <select name='targetAudience' className=\"form-control form-control-lg\"\r\n                              {...register(\"targetAudience\", {\r\n                                required: true,\r\n                              })}>\r\n                              <option value=\"all\">All</option>\r\n                              <option value=\"branch\">Branch</option>\r\n                              <option value=\"ibo\">IBO</option>\r\n                              <option value=\"client\">Client</option>\r\n                              <option value=\"specificUser\">Specific User</option>\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                        {values?.targetAudience === 'specificUser' && <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Select user to target{\" \"}\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n\r\n                            <MySelect\r\n                              name=\"addressLookup\"\r\n                              className=\"addressLookupContainer\"\r\n                              label=\"Address Lookup\"\r\n                              asyncSelect={true}\r\n                              loadOptions={loadOptions}\r\n                              onSelect={val => setselectedUser(val?.value)}\r\n                              defaultOptions={userOptions}\r\n                            />\r\n                          </div>\r\n                        </Form.Group>}\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Description{\" \"}\r\n                          </label>\r\n                          <div className=\"col-sm-8\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"content\"\r\n                              {...register(\"content\", { required: true })}\r\n                            />\r\n                            {errors && errors.content && (\r\n                              <p>Content is required field</p>\r\n                            )}\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-4 col-form-label\">\r\n                            Notification Image{\" \"}</label>\r\n\r\n                          <div className=\"col-sm-8\">\r\n                            <input type=\"file\" id=\"input-id\" className=\"d-none\" onChange={onChangeImage} />\r\n                            <button\r\n                              onClick={handleUpload}\r\n                              className={`btn btn-outline-${img?.name ? \" btn-primary\" : \" btn-primary\"\r\n                                }`}\r\n                            >\r\n                              {img?.name ? img?.name : \"Upload Image\"}\r\n                            </button>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Notification / All </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {/* {cookies?.user?.role}  */}\r\n                Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              All\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\" style={{ marginBottom: '14px' }}>\r\n              <div className=\"col-md-3\">\r\n                {cookies?.user?.role === \"admin\" && (\r\n                  <button className=\"btn btn-gradient-primary btn-lg\" type=\"button\" onClick={() => setShow(true)}>\r\n                    Send Notification\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n              </div>\r\n            </div>\r\n            <h4 className=\"card-title\"></h4>\r\n\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Title </th>\r\n                    <th> content </th>\r\n                    <th> Type </th>\r\n                    <th> Target Audience </th>\r\n                    <th> View </th>\r\n                    {cookies?.user?.role === 'admin' && (\r\n                    <th> Action </th>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {isLoading ? <Spinner />\r\n                    :\r\n                    itemlist?.map((item) => (\r\n                      <>\r\n                        <tr>\r\n                          <td>{item?.title}</td>\r\n                          <td className=\"max-width-200\">{item?.content}</td>\r\n                          <td>{item?.type}</td>\r\n                          <td>{item?.targetAudience}</td>\r\n                          <td><button\r\n                            type=\"button\"\r\n                            className=\"btn btn-gradient-primary btn-sm \"\r\n                            onClick={() => { viewNotification(item?.id) }}\r\n                          >\r\n                            View\r\n                          </button>\r\n                          </td>\r\n                          {cookies?.user?.role === 'admin' && (\r\n                          <td>\r\n                            <td>\r\n                              <i\r\n                                onClick={() => deleteNotifications(item?.id)}\r\n                                className=\"mdi mdi-delete\"\r\n                              ></i>\r\n                            </td>\r\n                          </td>\r\n                          )}\r\n                        </tr>\r\n                      </>\r\n                    )\r\n                    )}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {cookies?.user?.role !== 'admin' && audiencelist.length !== '0' && (\r\n        <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{cookies?.user.role} Notification list</h4>\r\n\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th> Title </th>\r\n                      <th> content </th>\r\n                      <th> Type </th>\r\n                      <th> Target Audience </th>\r\n                      <th> View </th>\r\n                      {/* <th> Action </th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {isLoading ? <Spinner />\r\n                      :\r\n                      audiencelist?.map((item) => {\r\n                        return (\r\n                          <tr>\r\n                            <td>{item?.title}</td>\r\n                            <td>{item?.content}</td>\r\n                            <td>{item?.type}</td>\r\n                            <td>{item?.targetAudience}</td>\r\n                            <td><button\r\n                              type=\"button\"\r\n                              className=\"btn btn-gradient-primary btn-sm \"\r\n                              onClick={() => { viewNotification(item?.id) }}\r\n                            >\r\n                              View\r\n                            </button>\r\n                            </td>\r\n                            {/* <td>\r\n                              <td>\r\n                                <i\r\n                                  onClick={() => deleteNotifications(item?.id)}\r\n                                  className=\"mdi mdi-delete\"\r\n                                ></i>\r\n                              </td>\r\n                            </td> */}\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </table>\r\n                <ReactPaginate\r\n                  breakLabel=\"...\"\r\n                  nextLabel=\"next >\"\r\n                  className=\"client-list\"\r\n                  onPageChange={handleaudiencePageClick}\r\n                  pageRangeDisplayed={5}\r\n                  pageCount={pageAudienceCount}\r\n                  previousLabel=\"< previous\"\r\n                  renderOnZeroPageCount={null}\r\n                  forcePage={audienceOffset}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {cookies?.user?.role !== 'admin' && personalizelist.length !== '0' && (\r\n        <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Personalize </h4>\r\n\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th> Title </th>\r\n                      <th> content </th>\r\n                      <th> Type </th>\r\n                      <th> Target Audience </th>\r\n                      <th> View </th>\r\n                      <th> Action </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {isLoading ? <Spinner />\r\n                      :\r\n                      personalizelist?.map((item) => {\r\n                        return (\r\n                          <tr>\r\n                            <td>{item?.title}</td>\r\n                            <td>{item?.content}</td>\r\n                            <td>{item?.type}</td>\r\n                            <td>{item?.targetAudience}</td>\r\n                            <td><button\r\n                              type=\"button\"\r\n                              className=\"btn btn-gradient-primary btn-sm \"\r\n                              onClick={() => { viewNotification(item?.id) }}\r\n                            >\r\n                              View\r\n                            </button>\r\n                            </td>\r\n                            <td>\r\n                              <td>\r\n                                <i\r\n                                  onClick={() => deleteNotifications(item?.id)}\r\n                                  className=\"mdi mdi-delete\"\r\n                                ></i>\r\n                              </td>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </table>\r\n                {/* <ReactPaginate\r\n                  breakLabel=\"...\"\r\n                  nextLabel=\"next >\"\r\n                  className=\"client-list\"\r\n                  onPageChange={handlepersonlizePageClick}\r\n                  pageRangeDisplayed={5}\r\n                  pageCount={pagepersonalizeCount}\r\n                  previousLabel=\"< previous\"\r\n                  renderOnZeroPageCount={null}\r\n                  forcePage={personalizeOffset}\r\n                /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllNotification;\r\n\r\n"],"sourceRoot":""}