name: Generate a build and push to another branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
       matrix:
        os:
          - ubuntu-latest
        node_version:
          - 16

    name: Node ${{ matrix.node_version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/checkout@v3
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.architecture }}

      - name: remove node modules
        run: rm -rf node_modules

      - name: remove packages-lock.json dependencies
        run: rm -rf package-lock.json

      - name: remove yarn.lock dependencies
        run: rm -rf yarn.lock

      - name: remove yarn-error.log dependencies
        run: rm -rf yarn-error.log

      - name: clean caches
        run: npm cache clean --force

      - name: npm update
        run: npm update -g npm

      - name: npm update node gyp
        run: npm install -g node-gyp

      - name: add path
        run: export npm_config_node_gyp=/usr/local/lib/node_modules/node-gyp/bin/node-gyp.js

      - name: npm install
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build # The build command of your project

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build # The branch name where you want to push the assets
          FOLDER: build # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message