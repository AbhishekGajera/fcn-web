{"version":3,"sources":["app/client-component/travel/addPlans.js"],"names":["AddPlans","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","values","isDirty","isValid","getValues","onSubmit","data","Data","FormData","append","file","ImageUpload","fileResult","error","toast","message","formData","JSON","stringify","name","desc","price","image","secure_url","type","addTravel","push","response","process","className","aria-label","href","onClick","event","preventDefault","aria-current","Group","Control","placeholder","required","style","color","description","id","multiple","e","element","document","getElementById","click","value"],"mappings":"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","file":"static/js/99.c5abbe9a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { addTravel, ImageUpload } from '../../../utils/APIs';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AddPlans = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  const { register, handleSubmit, formState: { errors, isDirty, isValid }, getValues } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const values = getValues();\r\n  const onSubmit = async (data) => {\r\n\r\n    const Data = new FormData();\r\n    Data.append('file', data.file[0]);\r\n    const fileResult = await ImageUpload(Data)\r\n\r\n    if (fileResult.error) {\r\n      toast.error(fileResult.error.message);\r\n    } else {\r\n      const formData = JSON.stringify({\r\n        name: data?.name || '',\r\n        desc: data.desc || '',\r\n        price: data?.price,\r\n        image: fileResult.secure_url,\r\n        type: data?.type\r\n      })\r\n      try {\r\n        await addTravel(formData)\r\n        history.push('/travel/ourplan')\r\n      } catch (error) {\r\n        if (\r\n          error &&\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.message\r\n        ) {\r\n          toast.error(error.response.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-id');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\"> Customize Tour  </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Travel</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Tour</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Add your travel plans here</h4>\r\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Name</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control type=\"text\"\r\n                          name=\"name\"\r\n                          placeholder=\"Enter name\"\r\n                          {...register(\"name\", { required: true })} />\r\n                        {errors && errors.name && <p style={{ color: \"red\" }}>name is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Description</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control type=\"text\"\r\n                          name=\"desc\"\r\n                          placeholder=\"Enter Description\"\r\n                          {...register(\"desc\", { required: true })} />\r\n                        {errors && errors.description && <p style={{ color: \"red\" }}>description is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Price</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control type=\"number\"\r\n                          name=\"price\"\r\n                          placeholder=\"Enter price per person\"\r\n                          {...register(\"price\", { required: true })} />\r\n                        {errors && errors.price && <p style={{ color: \"red\" }}>price is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Upload Image{\" \"}</label>\r\n\r\n                      <div className=\"col-sm-8\">\r\n                        <Form.Control\r\n                          id=\"input-id\"\r\n                          className=\"d-none\"\r\n                          type=\"file\"\r\n                          name=\"file\"\r\n                          multiple={false}\r\n                          {...register(\"file\", { required: true })}\r\n                        />\r\n\r\n                        <button\r\n                          onClick={handleUpload}\r\n                          className={`btn btn-outline-${values?.file?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\r\n                            }`}\r\n                        >\r\n                          {values?.file?.[0]?.name ? values?.file?.[0]?.name : \"Upload Image\"}\r\n                        </button>\r\n                        {errors && errors.file && (\r\n                          <p>Upload image is required field</p>\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Type</label>\r\n                      <div className=\"col-sm-8\">\r\n\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"type\"\r\n                          {...register(\"type\", {\r\n                            required: true,\r\n                          })}\r\n                        >\r\n                          <option value=\"regular\">Regular</option>\r\n                          <option value=\"pre\">Pre Departure</option>\r\n                        </select>\r\n                        {errors && errors.type && <p>Select type is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n                  <button\r\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                    type=\"submit\"\r\n\r\n                  >\r\n                    Create\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div></div>\r\n  )\r\n}\r\n\r\nexport default AddPlans"],"sourceRoot":""}