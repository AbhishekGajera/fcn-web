{"version":3,"sources":["app/BranchComponents/CreateEmployee/index.js"],"names":["CreateEmployee","useCookies","cookies","setCookie","useState","branchlist","setBranchlist","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","strongRegexMo","isDirty","isValid","RegExp","strongRegex","strongaadharcode","branchList","getBranchesClient","data","items","results","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","onSubmit","user","role","branch","id","CreateEmployees","success","console","info","useEffect","className","aria-label","href","onClick","event","preventDefault","aria-current","Group","Control","type","name","required","first_name","last_name","address","pattern","contactno","value","map","item","index","key","label","selected","email","dob","password","bankAccNo","bankIfscCode","aadhar_card_no"],"mappings":"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","file":"static/js/79.2fc789f8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CreateEmployees, getBranchesClient, userLogout } from \"../../../utils/APIs\";\r\n\r\nconst CreateEmployee = () => {\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [branchlist, setBranchlist] = useState([]);\r\n  const history = useHistory()\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  var strongRegexMo = new RegExp(\r\n    \"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\"\r\n  );\r\n  var strongRegex = new RegExp(\"^(?=.*[A-Za-z])(?=.*[0-9])(?=.{8,})\");\r\n\r\n  var strongaadharcode = new RegExp(\"^([0-9]){12}$\");\r\n\r\n\r\n  const branchList = async () => {\r\n    try {\r\n      const items = await (await getBranchesClient()).data;\r\n      setBranchlist(items?.results);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      if (cookies?.user?.role === 'branch') {\r\n        data.branch = cookies?.user?.id\r\n      }\r\n      const result = await CreateEmployees(data)\r\n      toast.success(\"Employee created successfully\");\r\n      history.push('/employees/listEmployee')\r\n    } catch (error) {\r\n      console.info(\"error \", error)\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    branchList();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Employee / Create Employees </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Create Employees\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row auth\">\r\n        <div className=\"col-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                <p className=\"card-description\"> Personal info </p>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-4 col-form-label\">First Name</label>\r\n                      <div className=\"col-sm-8\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"first_name\"\r\n                          {...register(\"first_name\", { required: true })}\r\n                        />\r\n                        {errors && errors.first_name && <p>first name is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-4 col-form-label\">Last Name</label>\r\n                      <div className=\"col-sm-8\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"last_name\"\r\n                          {...register(\"last_name\", { required: true })}\r\n                        />\r\n                        {errors && errors.last_name && <p>last name is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-2 col-form-label\">\r\n                        Address{\" \"}\r\n                      </label>\r\n                      <div className=\"col-sm-10\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          {...register(\"address\", { required: true })}\r\n                        />\r\n                        {errors && errors.address && (\r\n                          <p>address is required field</p>\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Contact No\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"contactno\"\r\n                          {...register(\"contactno\", {\r\n                            required: true,\r\n                            pattern: strongRegexMo,\r\n                          })}\r\n                        />\r\n                        {errors &&\r\n                          errors.contactno &&\r\n                          errors.contactno.type === \"required\" && (\r\n                            <p>contact number is required field</p>\r\n                          )}\r\n                        {errors &&\r\n                          errors.contactno &&\r\n                          errors.contactno.type === \"pattern\" && (\r\n                            <p>invalid phone number please use valid formate</p>\r\n                          )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Branch</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"branch\"\r\n                          {...register(\"branch\", {\r\n                            required: true,\r\n                          })}\r\n                        >\r\n                          <option value=''>--Select branch--</option>\r\n                          {branchlist.map((item, index) => (\r\n                            <option key={index} value={item?.id} label={item?.name} selected={branchlist?.branch === item?.name}></option>\r\n                          ))}\r\n                        </select>\r\n                        {errors && errors.branch && <p>Select branch is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Email</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"email\"\r\n                          {...register(\"email\", {\r\n                            required: true,\r\n                            pattern: /^\\S+@\\S+$/i,\r\n                          })}\r\n                        />\r\n                        {errors &&\r\n                          errors.email &&\r\n                          errors.email.type === \"required\" && (\r\n                            <p>email is required field</p>\r\n                          )}\r\n                        {errors &&\r\n                          errors.email &&\r\n                          errors.email.type === \"pattern\" && (\r\n                            <p>invalid email formate</p>\r\n                          )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">DOB</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"date\"\r\n                          name=\"dob\"\r\n                          {...register(\"dob\", { required: true })}\r\n                        />\r\n                        {errors && errors.dob && <p>DOB is required field</p>}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Password\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"password\"\r\n                          {...register(\"password\", {\r\n                            required: true,\r\n                            pattern: strongRegex,\r\n                          })}\r\n                        />\r\n                        {errors &&\r\n                          errors.password &&\r\n                          errors.password.type === \"required\" && (\r\n                            <p>password is required field</p>\r\n                          )}\r\n                        {errors &&\r\n                          errors.password &&\r\n                          errors.password.type === \"pattern\" && (\r\n                            <p>\r\n                              password should have at least 8 characters , 1\r\n                              number and latter\r\n                            </p>\r\n                          )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Select Country</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          id=\"exampleFormControlSelect2\"\r\n                          name=\"country\"\r\n                          {...register(\"country\", {\r\n                            required: true,\r\n                          })}\r\n                        >\r\n                          <option>Country</option>\r\n                          <option>United States of America</option>\r\n                          <option selected>India</option>\r\n                          <option>United Kingdom</option>\r\n                          <option>Germany</option>\r\n                          <option>Argentina</option>\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Bank Account no\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"bankAccNo\"\r\n                          {...register(\"bankAccNo\", { required: true })}\r\n                        />\r\n                        {errors && errors.bankAccNo && (\r\n                          <p>Bank Account number is required field</p>\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        IFSC code\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"bankIfscCode\"\r\n                          {...register(\"bankIfscCode\", { required: true })}\r\n                        />\r\n                        {errors && errors.bankIfscCode && (\r\n                          <p>Bank IFSC number is required field</p>\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        AadharCard Number\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"aadhar_card_no\"\r\n                          {...register(\"aadhar_card_no\", { required: true, pattern: strongaadharcode })}\r\n                        />\r\n                        {errors && errors.aadhar_card_no &&\r\n                          errors.aadhar_card_no.type === \"required\" && (\r\n                            <p>Aadharcard number is required field</p>\r\n                          )}\r\n                        {errors &&\r\n                          errors.aadhar_card_no &&\r\n                          errors.aadhar_card_no.type === \"pattern\" && (\r\n                            <p>\r\n                              Aadharcard should have number\r\n                            </p>\r\n                          )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                  <button\r\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                    type=\"submit\"\r\n                  >\r\n                    SUBMIT\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n"],"sourceRoot":""}