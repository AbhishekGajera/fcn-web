{"version":3,"sources":["utils/Functions/useDebounce.js","app/Admin-components/Employee-Management/Payroll.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Payroll","searchTerm","debouncedSearchTerm","setPageCount","useUrl","itemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","setbranchlist","isLoading","setIsLoading","history","useHistory","list","getBranchesClient","data","branch","results","getLeads","items","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","Fragment","map","item","index","key","name","title","to"],"mappings":";oLAGaA,EAAc,SAACC,EAAOC,GAE/B,MAA4CC,mBAASF,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAgBA,OAfAC,qBACE,WAEE,IAAMC,EAAUC,YAAW,WACzBH,EAAkBJ,KACjBC,GAIH,OAAO,WACLO,aAAaF,MAGjB,CAACN,EAAOC,IAEHE,I,u7MCsGIM,UAlHC,WAAO,IAAD,EACpB,EAAoCP,mBAAS,IAA7C,mBAAOQ,EAAP,KACMC,GADN,KAC4BZ,YAAYW,EAAY,MAEpD,EAAkCR,mBAAS,GAA3C,mBAAkBU,GAAlB,WACA,EAAoCC,YAAO,QAA3C,mBAAOC,EAAP,KACA,GADA,KACuBZ,mBAAS,KAAzBa,EAAP,oBAEA,EAA6BC,YAAW,CAAC,SAAzC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgChB,mBAAS,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAAoClB,mBAAS,IAA7C,mBAAmBmB,GAAnB,WACA,EAAkCnB,oBAAS,GAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cAEhBpB,qBAAU,WACRqB,MACC,CAACZ,EAAYC,EAAcJ,IAE9B,IAAMe,EAAI,uCAAG,uGACXH,GAAa,GADF,kBAGmBI,cAHnB,8BAGwCC,KAHxC,cAGHC,EAHG,OAITR,EAAa,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAQC,SAJb,UAMDC,aACJhB,GACCD,EAAa,EACdJ,GATK,gCAWPkB,KAXO,QAKHI,EALG,OAYTZ,EAAW,OAACY,QAAD,IAACA,OAAD,EAACA,EAAOF,SACnBlB,EAAY,OAACoB,QAAD,IAACA,OAAD,EAACA,EAAOC,YACpBV,GAAa,GAdJ,mDAgBT,sCAAI,KAAOW,gBAAX,iBAAI,EAAiBN,YAArB,aAAI,EAAuBO,SACzBC,IAAMC,MAAM,KAAMH,SAASN,KAAKO,SAEhCC,IAAMC,MAAMC,wFAGsB,OAAhC,2CAAOJ,gBAAP,mBAAiBN,YAAjB,eAAuBW,QACnBC,EAAWC,KAAKC,UAAU,CAC9BC,aAAcC,aAAaC,QAAQ,kBAErC3B,EAAU,OAAQ,KAAM,CAAE4B,KAAM,MAChCC,aAAWP,GAAUQ,SAAQ,WAC3BxB,EAAQyB,KAAK,2BA5BR,0DAAH,qDAqCV,OACE,6BACE,yBAAKC,UAAU,eACb,wBAAIA,UAAU,cAAd,4BACA,yBAAKC,aAAW,cACd,wBAAID,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGE,KAAK,KAAKC,QAAS,SAACC,GAAD,OAAWA,EAAMC,mBAAvC,OACGtC,QADH,IACGA,GADH,UACGA,EAASuC,YADZ,aACG,EAAeC,KADlB,eAIF,wBAAIP,UAAU,yBAAyBQ,eAAa,QAApD,mBAMN,yBAAKR,UAAU,yCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,kBAGJ,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,uBACf,+BACE,4BACE,uCACA,8CACA,wCACA,mCAGJ,+BAEI5B,EAAY,kBAAC,IAAMqC,SAAP,KAAgB,kBAAC,IAAD,OAAnB,OAEPxC,QAFO,IAEPA,OAFO,EAEPA,EAAUyC,KAAI,SAACC,EAAMC,GACnB,OACE,wBAAIC,IAAKD,GACP,mCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAMG,MACX,mCAAKH,QAAL,IAAKA,OAAL,EAAKA,EAAMI,OACX,sCACA,4BAAI,kBAAC,IAAD,CAAMC,GAAG,gCAA+B,4BAAQhB,UAAU,mCAAlB","file":"static/js/26.066bf08c.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// Hook\r\nexport const useDebounce = (value, delay) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { getLeads, getBranchesClient, deleteLead, userLogout, getBranches } from \"../../../utils/APIs\";\r\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Payroll = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(20);\r\n\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [branchlist, setbranchlist] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage, debouncedSearchTerm]);\r\n\r\n  const list = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const branch = await (await getBranchesClient()).data;\r\n      setbranchlist(branch?.results);\r\n      const items = await (\r\n        await getLeads(\r\n          itemsPerPage,\r\n          +itemOffset + 1,\r\n          searchTerm\r\n        )\r\n      ).data;\r\n      setitemlist(items?.results);\r\n      setPageCount(items?.totalPages);\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const handlePageClick = (event) => {\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Employee / Show Payroll </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show Payroll\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"card-title\">Payroll list</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Month </th>\r\n                    <th> Total Amount </th>\r\n                    <th> Status </th>\r\n                    <th> </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    isLoading ? <React.Fragment><Spinner /></React.Fragment>\r\n                      :\r\n                      itemlist?.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{item?.name}</td>\r\n                            <td>{item?.title}</td>\r\n                            <td>Active</td>\r\n                            <td><Link to='/employee_manage/run-payroll'><button className=\"btn btn-sm btn-gradient-primary\">Run Payroll</button></Link></td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payroll\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}