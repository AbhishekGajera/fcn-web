{"version":3,"sources":["app/Admin-components/Product/ProductAdd.js"],"names":["ProductAdd","useCookies","cookies","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","values","isDirty","isValid","getValues","onSubmit","data","formData","FormData","append","user","id","category","description","file","name","CreateProduct","toast","success","push","response","message","error","process","className","aria-label","href","onClick","event","preventDefault","role","aria-current","style","display","justifyContent","Group","Control","type","required","placeholder","address","as","multiple","e","element","document","getElementById","click"],"mappings":"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","file":"static/js/58.d68a0ea3.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from \"react-bootstrap\";\nimport { useCookies } from \"react-cookie\";\nimport { toast } from \"react-toastify\";\nimport { CreateProduct } from \"../../../utils/APIs\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProductAdd = () => {\n  const [cookies] = useCookies([\"user\"]);\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n        formState: { errors, isDirty, isValid },\n    getValues,\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  const values = getValues();\n\n  const onSubmit = async (data) => {\n    try {\n\n      const formData = new FormData()\n        formData.append(\"user\",cookies?.user?.id)\n        formData.append(\"category\",data?.category)\n        formData.append(\"description\",data?.description)\n        formData.append(\"image\",data?.file[0])\n        formData.append(\"name\",data?.name)\n\n      await CreateProduct(formData);\n      toast.success(\"Product crated successfully\");\n      history.push(\"/products/productslist\");\n    } catch (error) {\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n    }\n  };\n\n  const handleUpload = (e) => {\n    e.preventDefault()\n    const element = document.getElementById('input-id');\n    if (element) {\n        element.click()\n    }\n};\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Products / Add Product </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Add Product\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div\n        className=\"row auth\"\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <div className=\"col-6 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                <p className=\"card-description\"> Add Product </p>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">Name</label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"name\"\n                          {...register(\"name\", { required: true })}\n                          placeholder=\"name\"\n                        />\n                        {errors && errors.name && <p>name is required field</p>}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Category{\" \"}\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          type=\"text\"\n                          name=\"category\"\n                          {...register(\"category\", { required: true })}\n                          placeholder=\"category\"\n                        />\n                        {errors && errors.address && (\n                          <p>Category is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Description{\" \"}\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          as=\"textarea\"\n                          name=\"description\"\n                          {...register(\"description\", { required: true })}\n                          placeholder=\"description\"\n                        />\n                        {errors && errors.address && (\n                          <p>Description is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Form.Group className=\"row\">\n                      <label className=\"col-sm-3 col-form-label\">\n                        Upload Invoice{\" \"}\n                      </label>\n                      <div className=\"col-sm-9\">\n                        <Form.Control\n                          id=\"input-id\"\n                          className=\"d-none\"\n                          type=\"file\"\n                          name=\"file\"\n                          multiple={false}\n                          {...register(\"file\", { required: true })}\n                        />\n\n                        <button\n                          onClick={handleUpload}\n                          className={`btn btn-outline-${\n                            values?.file?.[0]?.name\n                              ? \" btn-primary\"\n                              : \" btn-primary\"\n                          }`}\n                        >\n                          {values?.file?.[0]?.name\n                            ? values?.file?.[0]?.name\n                            : \"Upload Invoice  \"}\n                        </button>\n                        {errors && errors.file && (\n                          <p>Upload invoice is required field</p>\n                        )}\n                      </div>\n                    </Form.Group>\n                  </div>\n                </div>\n\n                <div\n                  className=\"mt-3\"\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <button\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                  >\n                    SUBMIT\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductAdd;\n"],"sourceRoot":""}