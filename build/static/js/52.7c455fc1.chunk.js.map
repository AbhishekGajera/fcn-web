{"version":3,"sources":["utils/Functions/useUrl.js","app/Admin-components/Notification/AllNotification.js"],"names":["useUrl","param","history","useHistory","useLocation","search","pathname","url","URLSearchParams","urlParam","get","useState","value","setValue","val","set","replace","toString","AllNotification","useCookies","cookies","setCookie","React","show","setShow","pageCount","setPageCount","itemOffset","setItemOffset","itemlist","setitemlist","isLoading","setIsLoading","useEffect","timer","setTimeout","list","clearTimeout","user","role","getNotification","data","items","getNotificationByAudience","results","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","useForm","mode","register","handleSubmit","formState","errors","values","isDirty","isValid","getValues","onSubmit","Data","FormData","append","file","ImageUpload","fileResult","attachment","secure_url","id","type","status","addNotification","success","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","name","required","title","content","multiple","onClick","e","preventDefault","element","document","getElementById","click","aria-label","href","event","aria-current","style","marginBottom","map","item","targetAudience","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/52.7c455fc1.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useUrl = (param) => {\n\n    const history = useHistory()\n    const { search, pathname } = useLocation()\n    const url = new URLSearchParams(search)\n\n    const urlParam = url.get(param)\n    const [value, setValue] = useState(urlParam !== null ? urlParam : '')\n\n    function _setValue(val){\n        url.set(param, val)\n        history.replace({ pathname, search: url.toString() }); \n        setValue(val)\n    }\n\n    return [value, _setValue]\n}","import React, { useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\nimport { Form } from 'react-bootstrap';\nimport { ImageUpload, userLogout, addNotification, getNotification, getNotificationByAudience } from \"../../../utils/APIs\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport Spinner from \"../../shared/Spinner\";\nimport ReactPaginate from \"react-paginate\";\n\n\nconst AllNotification = () => {\n\n  const history = useHistory();\n  const [cookies, setCookie] = useCookies([\"user\"]);\n  const [show, setShow] = React.useState(false);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\n  const [itemsPerPage] = useState(20);\n  const [itemlist, setitemlist] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  const handleClose = () => {\n    setShow(false)\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      list()\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [])\n\n  const list = async () => {\n    setIsLoading(true)\n    try {\n      let items\n      if (cookies?.user?.role === 'admin') {\n        items = await (\n          await getNotification()\n        ).data;\n      }else if(cookies?.user?.role === 'IBO'){\n        items = await (\n          await getNotificationByAudience(1,'ibo')\n        ).data;\n      }else if(cookies?.user?.role === 'branch'){\n        items = await (\n          await getNotificationByAudience(1,'branch')\n        ).data;\n      }else if(cookies?.user?.role === 'user'){\n        items = await (\n          await getNotificationByAudience(1,'client')\n        ).data;\n      }\n      setitemlist(items?.results);\n      setPageCount(items?.totalPages);\n    } catch (error) {\n      if (error?.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n      }\n      if (error?.response?.data?.code === 401) {\n        const formData = JSON.stringify({\n          refreshToken: localStorage.getItem(\"refreshToken\"),\n        });\n        setCookie(\"user\", null, { path: \"/\" });\n        userLogout(formData).finally(() => {\n          history.push(\"/user-pages/login-1\");\n        });\n      }\n    }\n    setIsLoading(false)\n  };\n\n  const handlePageClick = (event) => {\n    setItemOffset(event.selected);\n  };\n\n  const handleUpload = (e) => {\n    e.preventDefault()\n    const element = document.getElementById('input-id');\n    if (element) {\n      element.click()\n    }\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n    getValues,\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  const values = getValues();\n\n  const onSubmit = async (data) => {\n    setShow(false);\n    const Data = new FormData();\n    Data.append('file', data.file[0]);\n    const fileResult = await ImageUpload(Data)\n    if (fileResult.error) {\n      toast.error(fileResult.error.message);\n    } else {\n      try {\n        delete data.file;\n        data.attachment = fileResult.secure_url;\n        data.user = cookies?.user?.id;\n        data.type = \"all\";\n        data.status = 1;\n        const result = await addNotification(data)\n        toast.success(\"Notification Added successfully\");\n        list();\n      } catch (error) {\n        if (\n          error &&\n          error.response &&\n          error.response.data &&\n          error.response.data.message\n        ) {\n          toast.error(error.response.data.message);\n        } else {\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n        }\n      }\n    }\n  }\n\n\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Send Notification</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row auth\">\n            <div className=\"col-12 grid-margin\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\n                    <p className=\"card-description\"> Send Notification </p>\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">Title</label>\n                          <div className=\"col-sm-9\">\n                            <Form.Control\n                              type=\"text\"\n                              name=\"title\"\n                              {...register(\"title\", { required: true })}\n\n                            />\n                            {errors && errors.title && <p>Title is required field</p>}\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Select targetAudience{\" \"}\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <select name='targetAudience' className=\"form-control form-control-lg\"\n                              {...register(\"targetAudience\", {\n                                required: true,\n                              })}>\n                              <option value=\"all\">All</option>\n                              <option value=\"branch\">Branch</option>\n                              <option value=\"ibo\">IBO</option>\n                              <option value=\"client\">Client</option>\n                            </select>\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Description{\" \"}\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <Form.Control\n                              type=\"text\"\n                              name=\"content\"\n                              {...register(\"content\", { required: true })}\n                            />\n                            {errors && errors.content && (\n                              <p>Content is required field</p>\n                            )}\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-4 col-form-label\">\n                            Notification Image{\" \"}</label>\n\n                          <div className=\"col-sm-8\">\n                            <Form.Control\n                              id=\"input-id\"\n                              className=\"d-none\"\n                              type=\"file\"\n                              name=\"file\"\n                              multiple={false}\n                              {...register(\"file\", { required: true })}\n                            />\n\n                            <button\n                              onClick={handleUpload}\n                              className={`btn btn-outline-${values?.file?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\n                                }`}\n                            >\n                              {values?.file?.[0]?.name ? values?.file?.[0]?.name : \"Upload Image\"}\n                            </button>\n                            {errors && errors.file && (\n                              <p>Notification image is required field</p>\n                            )}\n                          </div>\n                        </Form.Group>\n                      </div>\n                    </div>\n                    <div className=\"mt-3\">\n                      <button\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\n                        type=\"submit\"\n                      >\n                        Send\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Notification / All </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {/* {cookies?.user?.role}  */}\n                Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              All\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\" style={{ marginBottom: '14px' }}>\n              <div className=\"col-md-3\">\n                {cookies?.user?.role === \"admin\" && (\n                  <button className=\"btn btn-gradient-primary btn-lg\" type=\"button\" onClick={() => setShow(true)}>\n                    Send Notification\n                  </button>\n                )}\n              </div>\n              <div className=\"col-md-9\">\n              </div>\n            </div>\n            <h4 className=\"card-title\">Notification list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Title </th>\n                    <th> content </th>\n                    <th> Type </th>\n                    <th> Target Audience </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ? <Spinner />\n                    :\n                    itemlist?.map((item) => {\n                      return (\n                        <tr>\n                          <td>{item?.title}</td>\n                          <td>{item?.content}</td>\n                          <td>{item?.type}</td>\n                          <td>{item?.targetAudience}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n                forcePage={itemOffset}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AllNotification;\n\n"],"sourceRoot":""}