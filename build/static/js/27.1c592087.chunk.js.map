{"version":3,"sources":["utils/Functions/useDebounce.js","app/Admin-components/Employee-Management/PayrollDetail.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","PayrollDetail","searchTerm","setSearchTerm","debouncedSearchTerm","pageCount","setPageCount","useUrl","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","setbranchlist","isLoading","setIsLoading","history","useHistory","list","getBranchesClient","data","branch","results","getLeads","items","totalPages","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","action","type","placeholder","onChange","e","target","Fragment","map","item","index","key","name","title","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/27.1c592087.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// Hook\r\nexport const useDebounce = (value, delay) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { getLeads, getBranchesClient, deleteLead, userLogout, getBranches } from \"../../../utils/APIs\";\r\nimport { useDebounce } from \"../../../utils/Functions/useDebounce\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PayrollDetail = () => {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n    const [itemsPerPage] = useState(20);\r\n\r\n    const [cookies, setCookie] = useCookies([\"user\"]);\r\n    const [itemlist, setitemlist] = useState([]);\r\n    const [branchlist, setbranchlist] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [itemOffset, itemsPerPage, debouncedSearchTerm]);\r\n\r\n    const list = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            const branch = await (await getBranchesClient()).data;\r\n            setbranchlist(branch?.results);\r\n            const items = await (\r\n                await getLeads(\r\n                    itemsPerPage,\r\n                    +itemOffset + 1,\r\n                    searchTerm\r\n                )\r\n            ).data;\r\n            setitemlist(items?.results);\r\n            setPageCount(items?.totalPages);\r\n            setIsLoading(false)\r\n        } catch (error) {\r\n            if (error?.response?.data?.message) {\r\n                toast.error(error.response.data.message);\r\n            } else {\r\n                toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n            }\r\n\r\n            if (error?.response?.data?.code === 401) {\r\n                const formData = JSON.stringify({\r\n                    refreshToken: localStorage.getItem(\"refreshToken\"),\r\n                });\r\n                setCookie(\"user\", null, { path: \"/\" });\r\n                userLogout(formData).finally(() => {\r\n                    history.push(\"/user-pages/login-1\");\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const handlePageClick = (event) => {\r\n        setItemOffset(event.selected);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-header\">\r\n                <h3 className=\"page-title\">Employee / Show Payroll </h3>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\">\r\n                            <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                                {cookies?.user?.role} Dashboard\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Show Payroll\r\n                        </li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-md-6\">\r\n                                <h4 className=\"card-title\">Payroll list</h4>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"search-field d-none d-md-block\">\r\n                                    <form className=\"d-flex align-items-center h-100\" action=\"#\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend outline-gray bg-transparent\">\r\n                                                <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\r\n                                            </div>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control outline-gray bg-transparent border-0\"\r\n                                                placeholder=\"Search Payroll\"\r\n                                                value={searchTerm}\r\n                                                onChange={(e) => {\r\n                                                    setSearchTerm(e?.target?.value);\r\n                                                    setItemOffset(0);\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-sm ml-1 btn-primary\">PDF</button>\r\n                                <button className=\"btn btn-sm ml-1 btn-success\">Excel</button>\r\n                                <button className=\"btn btn-sm ml-1 btn-warning\">csv</button>\r\n                                <button className=\"btn btn-sm ml-1 btn-danger\">Copy</button>\r\n                                <button className=\"btn btn-sm ml-1 btn-secondary\">Print</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th> Name </th>\r\n                                        <th> Payroll Type </th>\r\n                                        <th> Salary </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        isLoading ? <React.Fragment><Spinner /></React.Fragment>\r\n                                            :\r\n                                            itemlist?.map((item, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>{item?.name}</td>\r\n                                                        <td>{item?.title}</td>\r\n                                                        <td>10000</td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                </tbody>\r\n                            </table>\r\n                            <ReactPaginate\r\n                                breakLabel=\"...\"\r\n                                nextLabel=\"next >\"\r\n                                className=\"client-list\"\r\n                                onPageChange={handlePageClick}\r\n                                pageRangeDisplayed={5}\r\n                                pageCount={pageCount}\r\n                                previousLabel=\"< previous\"\r\n                                renderOnZeroPageCount={null}\r\n                                forcePage={itemOffset}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PayrollDetail\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}