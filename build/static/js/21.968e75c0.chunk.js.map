{"version":3,"sources":["assets/images/dashboard/circle.svg","app/client-component/SipCalc/Calc/index.js","app/client-component/investment/PowerOne.js"],"names":["module","exports","Calc","useState","type","settype","amounts","setamounts","totalYear","settotalYear","returnRateAmount","setreturnRateAmount","settotalValue","futureValues","setfutureValues","investedValue","setinvestedValue","year","setYear","React","show","setShow","useEffect","data","i","push","useForm","mode","register","handleSubmit","formState","onSubmit","errors","isDirty","isValid","console","log","responsive","animation","animateScale","animateRotate","legend","trafficOptions","trafficData","settrafficData","ctx","document","getElementById","getContext","gradientdonut1","createLinearGradient","addColorStop","gradientdonut2","datasets","backgroundColor","hoverBackgroundColor","borderColor","legendColor","labels","calculateResult","instalments","investment","monthlyRate","months","futureValue","total","Math","pow","round","YearTotal","numberWithCommas","onChangeAmount","changeEvent","target","value","isNaN","onChangeRate","onChangeYear","x","toString","replace","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","placeholder","name","required","selected","onClick","window","open","Container","id","defaultActiveKey","sm","variant","Item","Link","eventKey","style","padding","Content","border","Pane","margin","onChange","width","accentColor","size","tooltip","max","display","justifyContent","map","e","options","PowerOne","history","useHistory","useCookies","cookies","setCookie","user","setUser","show1","setShow1","isLoading","setisLoading","itemlist","setitemlist","getAllUsersList","list","getBranchesClient","items","results","response","message","toast","error","process","code","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","getAllUsers","allUsers","handleClose","handleClose1","getValues","register2","handleSubmit2","errors2","reset","register3","handleSubmit3","errors3","reset3","values","onSubmitWithdraw","amount","branch","addTransaction","success","onSubmitDeposit","Data","FormData","aadharcard_img","pancard_img","passbook_img","payment_img","aadhar_card_img","length","append","ImageUpload","pan_card_img","passbook_card_img","payment_screenshot","deposit","deposit1","payment_gateway","passport_number","pan_number","aadhar_number","secure_url","addPowerone","color","item","index","key","label","title","aria-label","href","event","preventDefault","aria-current","defaultValue","email","contactno","mobile","address","city","state","country","multiple","element","click","voter_id","method_by","payment_no","cheque","neft","rtgs","src","require","alt"],"mappings":";kHAAAA,EAAOC,QAAU,IAA0B,oC,26MC6jB5BC,IAtjBF,WACX,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAgDN,mBAAS,IAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KAEA,EAAoCR,mBAAS,GAA7C,mBAAmBS,GAAnB,WACA,EAAwCT,mBAAS,GAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAA0CX,mBAAS,GAAnD,mBAAOY,EAAP,KAAsBC,EAAtB,KACA,EAAwBb,mBAAS,IAAjC,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAwBC,IAAMhB,UAAS,GAAvC,mBAAOiB,EAAP,KAAaC,EAAb,KAKAC,qBAAU,WAER,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,GAAKhB,EAAWgB,IAC9BD,EAAKE,KAAKD,GAEZN,EAAQK,KACP,CAACf,IAEJ,MAIIkB,YAAQ,CACVC,KAAM,aAJNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAIIC,GAPN,EAGeC,OAHf,EAGuBC,QAHvB,EAGgCC,QAIlB,uCAAG,WAAOX,GAAP,iEACfY,QAAQC,IAAIb,GADG,2CAAH,uDAId,EAAyBpB,mBAAS,CAChCkC,YAAY,EACZC,UAAW,CACTC,cAAc,EACdC,eAAe,GAEjBC,QAAQ,IANHC,EAAP,oBASA,GAAsCvC,mBAAS,IAA/C,qBAAOwC,GAAP,MAAoBC,GAApB,MACAtB,qBAAU,WAER,IAAIuB,EAAMC,SAASC,eAAe,kBAAkBC,WAAW,MAE3DC,EAAiBJ,EAAIK,qBAAqB,EAAG,EAAG,EAAG,KACvDD,EAAeE,aAAa,EAAG,yBAC/BF,EAAeE,aAAa,EAAG,0BAE/B,IAAIC,EAAiBP,EAAIK,qBAAqB,EAAG,EAAG,EAAG,IACvDE,EAAeD,aAAa,EAAG,wBAC/BC,EAAeD,aAAa,EAAG,0BAgB/BP,GAduB,CACrBS,SAAU,CACR,CACE9B,KAAM,CAACR,EAAeF,GACtByC,gBAAiB,CAACL,EAAgBG,GAClCG,qBAAsB,CAACN,EAAgBG,GACvCI,YAAa,CAACP,EAAgBG,GAC9BK,YAAa,CAACR,EAAgBG,KAKlCM,OAAQ,CAAC,kBAAmB,oBAG7B,CAAC3C,EAAeF,IAEnBM,IAAMG,WAAU,WACdqC,OACC,CAACrD,EAASE,EAAWE,EAAkBN,IAE1C,IAAMuD,GAAkB,WACtB,IACIC,EADAC,EAAavD,EAEjB,GAAa,IAATF,EAAY,CACd,IAAI0D,EAAcpD,EAAmB,GAAK,IACtCqD,EAAqB,GAAZvD,EACTwD,EAAc,EAEdC,EAAQJ,EAAarD,EAAYE,EAErCsD,EACGH,GACE,EAAIC,IACJI,KAAKC,IAAI,EAAIL,EAAaC,GAAU,GACvCD,EACFF,EAAcC,EAAarD,EAAY,OAClC,CACDyD,EAAQJ,EACZG,EAAcE,KAAKE,MACjBF,KAAKC,IAAI,EAAIzD,EAAmB,IAAKF,GAAaF,GAEpDsD,EAAcC,EAEhBjD,EAAwB,QAAVqD,EAAkB,IAAMA,GACtCnD,EAAgBoD,KAAKE,MAAMJ,IAC3BhD,EAAiB4C,IAGbS,GAAY,SAACpD,EAAKb,GACtB,IAAIyD,EAAavD,EAEjB,GAAa,IAATF,EAAY,CACd,IAAI0D,EAAcpD,EAAmB,GAAK,IACtCqD,EAAgB,GAAP9C,EAMV4C,GACE,EAAIC,IACJI,KAAKC,IAAI,EAAIL,EAAaC,GAAU,GACvCD,EACYD,EAAa5C,EAAO,OAC7B,CAESiD,KAAKE,MACjBF,KAAKC,IAAI,EAAIzD,EAAmB,IAAKO,GAAQX,GAEjCuD,EAEhB,OACSS,GADG,kBAATlE,EACuBW,EAAgBE,EACxB,iBAATb,EACkBS,EAAeI,EAASF,EAAgBE,EAEzCJ,EAAeI,IAIrCsD,GAAiB,SAACC,GAClBA,EAAYC,OAAOC,MAAQ,QAC7BnE,EAAWiE,EAAYC,OAAOC,OAI9BF,EAAYC,OAAOC,MAAQ,MAC1BC,OAAOH,EAAYC,OAAOC,QAE3BnE,EAAW,MAITqE,GAAe,SAACJ,GAChBA,EAAYC,OAAOC,MAAQ,IAC7B/D,EAAoB6D,EAAYC,OAAOC,OAGrCF,EAAYC,OAAOC,MAAQ,KAAOC,OAAOH,EAAYC,OAAOC,QAC9D/D,EAAoB,KAIlBkE,GAAe,SAACL,GAChBA,EAAYC,OAAOC,MAAQ,IAC7BjE,EAAa+D,EAAYC,OAAOC,OAG9BF,EAAYC,OAAOC,MAAQ,KAAOC,OAAOH,EAAYC,OAAOC,QAC9DjE,EAAa,KAIX6D,GAAmB,SAACQ,GACxB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,MAGvD,OACE,oCACE,kBAAC,IAAD,CACE5D,KAAMA,EACN6D,OAtKc,kBAAM5D,GAAQ,IAuK5B6D,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,iBAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,cACVzD,SAAUF,EAAaE,IAEvB,yBAAKyD,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,gBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEtF,KAAK,OACLuF,YAAY,eACZC,KAAK,UACDhE,EAAS,SAAU,CAAEiE,UAAU,QAIzC,kBAAC,IAAKJ,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,wBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEtF,KAAK,OACLuF,YAAY,uBACZC,KAAK,kBACDhE,EAAS,iBAAkB,CAC7BiE,UAAU,QAKlB,kBAAC,IAAKJ,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,wBAGA,yBAAKA,UAAU,YACb,4BAAQA,UAAU,eAChB,4BAAQM,UAAU,GAAlB,SACA,yCACA,yCACA,2CACA,6CAIN,kBAAC,IAAKL,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,iBAGA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEpF,KAAK,WACLoF,UAAU,mBACVI,KAAK,WACDhE,EAAS,UAAW,CAAEiE,UAAU,MAEtC,uBAAGL,UAAU,iBAPf,aAYJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEpF,KAAK,WACLoF,UAAU,mBACVI,KAAK,UACDhE,EAAS,SAAU,CAAEiE,UAAU,MAErC,uBAAGL,UAAU,iBAPf,eAgBV,yBAAKA,UAAU,sCAAf,mBACmB,IACjB,uBACEO,QAAS,kBAAMC,OAAOC,KAAK,6BAC3BT,UAAU,gBAFZ,eAOF,yBAAKA,UAAU,eACb,4BACEA,UAAU,4DACVpF,KAAK,UAFP,kBAchB,yBAAKoF,UAAU,OACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAIU,UAAL,CAAeC,GAAG,oBAAoBC,iBAAiB,SACrD,kBAAC,IAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,CAAKC,QAAQ,QAAQd,UAAU,cAC7B,kBAAC,IAAIe,KAAL,CAAUR,QAAS,kBAAM1F,EAAQ,KAC/B,kBAAC,IAAImG,KAAL,CAAUC,SAAS,SAAnB,QAEF,kBAAC,IAAIF,KAAL,CAAUR,QAAS,kBAAM1F,EAAQ,KAC/B,kBAAC,IAAImG,KAAL,CAAUC,SAAS,UAAnB,cAGC,IACP,6BACA,yBAAKC,MAAO,CAAEC,QAAS,mBACrB,kBAAC,IAAIC,QAAL,CAAaF,MAAO,CAAEG,OAAQ,SAC5B,kBAAC,IAAIC,KAAL,CAAUL,SAAS,SACjB,yBAAKC,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,oDACA,6BACE,2BACEpF,KAAK,OACLoF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLlB,MAAOpE,EACP0G,SAAUzC,KACT,IARL,WAYF,2BACEnE,KAAK,QACLsG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCxC,MAAOpE,EACP0G,SAAUzC,GACV4C,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAGT,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,4DACA,6BACE,2BACEpF,KAAK,OACLoF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLlB,MAAOhE,EACPsG,SAAUpC,KACT,IARL,MAYF,6BACE,2BACExE,KAAK,QACLsG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCxC,MAAOhE,EACPsG,SAAUpC,GACVuC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAIX,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,6CACA,6BACE,2BACEpF,KAAK,OACLoF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLlB,MAAOlE,EACPwG,SAAUnC,KACT,IARL,OAYF,2BACEzE,KAAK,QACLsG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCxC,MAAOlE,EACPwG,SAAUnC,GACVsC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAIX,kBAAC,IAAIP,KAAL,CAAUL,SAAS,UACjB,yBAAKC,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,kDACA,6BACE,2BACEpF,KAAK,OACLoF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLlB,MAAOpE,EACP0G,SAAUzC,KACT,IARL,WAYF,2BACEnE,KAAK,QACLsG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCxC,MAAOpE,EACP0G,SAAUzC,GACV4C,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAGT,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,4DACA,6BACE,2BACEpF,KAAK,OACLoF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLlB,MAAOhE,EACPsG,SAAUpC,KACT,IARL,MAYF,6BACE,2BACExE,KAAK,QACLsG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCxC,MAAOhE,EACPsG,SAAUpC,GACVuC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAIX,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,6CACA,6BACE,2BACEpF,KAAK,OACLoF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLlB,MAAOlE,EACPwG,SAAUnC,KACT,IARL,OAYF,2BACEzE,KAAK,QACLsG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCxC,MAAOlE,EACPwG,SAAUnC,GACVsC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,UAQjB,6BACE,yBACEX,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBR,OAAQ,aAGV,0BAAMvB,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAA7C,QACA,0BAAMzB,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAA7C,mBACA,0BAAMzB,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAA7C,gBACA,0BAAMzB,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAA7C,UAEDzG,EAAY,GAAKS,EAAKuG,KAAI,SAACC,EAAGjG,GAAJ,OACzB,yBACEkF,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBR,OAAQ,aAGV,0BAAMvB,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAAUQ,GACvD,0BAAMjC,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAAU5C,GAAUoD,EAAE,iBAAnE,gBACA,0BAAMjC,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAAU5C,GAAUoD,EAAE,gBAAnE,gBACA,0BAAMjC,UAAU,aAAakB,MAAO,CAAEO,MAAO,QAAU5C,GAAUoD,EAAE,SAAnE,wBAOZ,yBAAKjC,UAAU,qCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cACZ,4BACEpF,KAAK,SACLoF,UAAU,mCAFZ,eAOF,kBAAC,WAAD,CACEjE,KAAMoB,GACN+E,QAAShF,EACTyD,GAAG,mBAEL,yBACEA,GAAG,uBACHX,UAAU,0DAEV,4BACE,4BACE,0BAAMA,UAAU,wBADlB,mBAIA,4BACE,0BAAMA,UAAU,2BADlB,yB,k9MC+THmC,UAr1BE,WAAO,IAAD,oDACfC,EAAUC,cAChB,EAA6BC,YAAW,CAAC,SAAzC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwB7G,IAAMhB,SAAS,IAAvC,mBAAO8H,EAAP,KAAaC,EAAb,KACA,EAAwB/G,IAAMhB,UAAS,GAAvC,mBAAOiB,GAAP,KAAaC,GAAb,KACA,GAA0BF,IAAMhB,UAAS,GAAzC,qBAAOgI,GAAP,MAAcC,GAAd,MACA,GAAkCjH,IAAMhB,UAAS,GAAjD,qBAAOkI,GAAP,MAAkBC,GAAlB,MACA,GAAgCnH,IAAMhB,SAAS,IAA/C,qBAAOoI,GAAP,MAAiBC,GAAjB,MAEAlH,qBAAU,WACRmH,KACAC,OACC,IAEH,IAAMA,GAAI,uCAAG,uHAEkBC,cAFlB,8BAEuCpH,KAFvC,OAEHqH,EAFG,OAGTJ,GAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAOC,SAHV,iDAKT,sCAAI,KAAOC,gBAAX,iBAAI,EAAiBvH,YAArB,aAAI,EAAuBwH,SACzBC,IAAMC,MAAM,KAAMH,SAASvH,KAAKwH,SAEhCC,IAAMC,MAAMC,wFAGsB,OAAhC,2CAAOJ,gBAAP,mBAAiBvH,YAAjB,eAAuB4H,QACnBC,EAAWC,KAAKC,UAAU,CAC9BC,aAAcC,aAAaC,QAAQ,kBAErCzB,EAAU,OAAQ,KAAM,CAAE0B,KAAM,MAChCC,aAAWP,GAAUQ,SAAQ,WAC3BhC,EAAQnG,KAAK,2BAjBR,yDAAH,qDAuBJgH,GAAe,uCAAG,sGACCoB,cADD,OAChBC,EADgB,OAEtB5B,EAAO,OAAC4B,QAAD,IAACA,GAAD,UAACA,EAAUvI,YAAX,aAAC,EAAgBsH,SAFF,2CAAH,qDAKfkB,GAAc,kBAAM1I,IAAQ,IAC5B2I,GAAe,kBAAM5B,IAAS,IAKpC,GAAuF1G,YAAQ,CAC7FC,KAAM,aADAC,GAAR,GAAQA,SAAUC,GAAlB,GAAkBA,aAAlB,MAAgCC,UAAaE,GAA7C,GAA6CA,OAA4BiI,IAAzE,GAAqDhI,QAArD,GAA8DC,QAA9D,GAAyE+H,WAIzE,GAAoGvI,YAAQ,CAC1GC,KAAM,aADUuI,GAAlB,GAAQtI,SAAmCuI,GAA3C,GAA6BtI,aAAkDuI,GAA/E,GAA0DtI,UAAaE,OAAmBqI,GAA1F,GAA0FA,MAI1F,GAA4G3I,YAAQ,CAClHC,KAAM,aADU2I,GAAlB,GAAQ1I,SAAmC2I,GAA3C,GAA6B1I,aAAkD2I,GAA/E,GAA0D1I,UAAaE,OAA0ByI,GAAjG,GAA0FJ,MAIpFK,GAAST,KAkCTU,GAAgB,uCAAG,WAAOpJ,GAAP,gFACvBwI,KACMX,EAAWC,KAAKC,UAAU,CAC9B,MAAS/H,EAAKqJ,OACd,iBAAa7C,QAAb,IAAaA,GAAb,UAAaA,EAASE,YAAtB,aAAa,EAAe9B,GAC5B,QAAW5E,EAAKsJ,OAChB,KAAQ,WACR,KAAQ,SACR,OAAU,IARW,kBAWfC,YAAe1B,GAXA,OAYrBY,KACAS,KACAzB,IAAM+B,QAAQ,iCAdO,kDAiBnB,MACA,KAAMjC,UACN,KAAMA,SAASvH,MACf,KAAMuH,SAASvH,KAAKwH,QAEpBC,IAAMC,MAAM,KAAMH,SAASvH,KAAKwH,SAEhCC,IAAMC,MAAMC,wFAxBO,0DAAH,sDA6BhB8B,GAAe,uCAAG,WAAOzJ,GAAP,gFAChB6H,EAAWC,KAAKC,UAAU,CAC9B,MAAS/H,EAAKqJ,OACd,iBAAa7C,QAAb,IAAaA,GAAb,UAAaA,EAASE,YAAtB,aAAa,EAAe9B,GAC5B,QAAW5E,EAAKsJ,OAChB,KAAQ,UACR,KAAQ,SACR,OAAU,IAPU,kBAUdC,YAAe1B,GAVD,OAWpBiB,KACAN,KACAf,IAAM+B,QAAQ,wBAbM,gDAgBlB,MACA,KAAMjC,UACN,KAAMA,SAASvH,MACf,KAAMuH,SAASvH,KAAKwH,QAEpBC,IAAMC,MAAM,KAAMH,SAASvH,KAAKwH,SAEhCC,IAAMC,MAAMC,wFAvBM,yDAAH,sDA4BfnH,GAAQ,uCAAG,WAAOR,GAAP,kFACf+G,IAAa,GACbnG,QAAQC,IAAIb,GACN0J,EAAO,IAAIC,SACbC,EAAiB,GACjBC,EAAc,GACdC,EAAe,GACfC,EAAc,GACkB,IAAhC/J,EAAKgK,gBAAgBC,OARV,wBASbP,EAAKQ,OAAO,OAAQlK,EAAKgK,gBAAgB,IAT5B,UAUUG,YAAYT,GAVtB,QAUbE,EAVa,kBAYkB,IAA7B5J,EAAKoK,aAAaH,OAZP,wBAabP,EAAKQ,OAAO,OAAQlK,EAAKoK,aAAa,IAbzB,UAcOD,YAAYT,GAdnB,QAcbG,EAda,kBAiBuB,IAAlC7J,EAAKqK,kBAAkBJ,OAjBZ,wBAkBbP,EAAKQ,OAAO,OAAQlK,EAAKqK,kBAAkB,IAlB9B,UAmBQF,YAAYT,GAnBpB,QAmBbI,EAnBa,kBAsBwB,IAAnC9J,EAAKsK,mBAAmBL,OAtBb,wBAuBbP,EAAKQ,OAAO,OAAQlK,EAAKsK,mBAAmB,IAvB/B,UAwBOH,YAAYT,GAxBnB,QAwBbK,EAxBa,oBA2BXH,EAAelC,OAASmC,EAAYnC,OAASoC,EAAapC,OAASqC,EAAYrC,OA3BpE,iBA4BbD,IAAMC,MAAMkC,EAAelC,MAAMF,SA5BpB,sCA8BNxH,EAAKuK,eACLvK,EAAKwK,gBACLxK,EAAKyK,uBACLzK,EAAK0K,uBACL1K,EAAK2K,kBACL3K,EAAK4K,cACZ5K,EAAKsK,mBAAqBP,EAAYc,WACtC7K,EAAKgK,gBAAkBJ,EAAeiB,WACtC7K,EAAKoK,aAAeP,EAAYgB,WAChC7K,EAAKqK,kBAAoBP,EAAae,WAvCzB,UAyCX9D,IAAa,GAzCF,UA0CL+D,YAAY9K,GA1CP,QA2CXyH,IAAM+B,QAAQ,iCACdnD,EAAQnG,KAAK,4BA5CF,mDA+CT,MACA,KAAMqH,UACN,KAAMA,SAASvH,MACf,KAAMuH,SAASvH,KAAKwH,QAEpBC,IAAMC,MAAM,KAAMH,SAASvH,KAAKwH,SAEhCC,IAAMC,MAAMC,wFAtDH,2DAAH,sDA4Dd,OACE,6BACE,kBAAC,IAAD,CACE9H,KAAMA,GACN6D,OAAQ8E,GACR7E,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,qBAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,cACVzD,SAAUoI,GAAca,KAExB,yBAAKxF,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,gBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEtF,KAAK,OACLuF,YAAY,eACZC,KAAK,UACDsE,GAAU,SAAU,CAAErE,UAAU,MAErCuE,IAAWA,GAAQQ,QAAU,uBAAGlE,MAAO,CAAE4F,MAAO,QAAnB,oCAGlC,kBAAC,IAAK7G,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,MAGA,yBAAKA,UAAU,YACb,0CACEA,UAAU,+BACVW,GAAG,4BACHP,KAAK,UACDsE,GAAU,SAAU,CACtBrE,UAAU,KAGZ,4BAAQnB,MAAM,IAAd,qBACC6D,GAASf,KAAI,SAAC+E,EAAMC,GAAP,OACZ,4BAAQC,IAAKD,EAAO9H,MAAK,OAAE6H,QAAF,IAAEA,OAAF,EAAEA,EAAMpG,GAAIuG,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAM3G,WAGrDwE,IAAWA,GAAQS,QAAU,uBAAGnE,MAAO,CAAE4F,MAAO,QAAnB,uCAKtC,yBAAK9G,UAAU,eACb,4BACEA,UAAU,4DACVpF,KAAK,UAFP,kBAchB,kBAAC,IAAD,CACEgB,KAAM+G,GACNlD,OAAQ+E,GACR9E,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,wBAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,OACVzD,SAAUwI,GAAcI,KAExB,yBAAKnF,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,gBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACEtF,KAAK,OACLuF,YAAY,eACZC,KAAK,UACD0E,GAAU,SAAU,CAAEzE,UAAU,MAErC2E,IAAWA,GAAQI,QAAU,uBAAGlE,MAAO,CAAE4F,MAAO,QAAnB,8BAGlC,kBAAC,IAAK7G,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,MAGA,yBAAKA,UAAU,YACb,0CACEA,UAAU,+BACVW,GAAG,4BACHP,KAAK,UACD0E,GAAU,SAAU,CACtBzE,UAAU,KAGZ,4BAAQnB,MAAM,IAAd,qBACC6D,GAASf,KAAI,SAAC+E,EAAMC,GAAP,OACZ,4BAAQC,IAAKD,EAAO9H,MAAK,OAAE6H,QAAF,IAAEA,OAAF,EAAEA,EAAMpG,GAAIuG,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAM3G,WAGrD4E,IAAWA,GAAQK,QAAU,uBAAGnE,MAAO,CAAE4F,MAAO,QAAnB,uCAKtC,yBAAK9G,UAAU,eACb,4BACEA,UAAU,4DACVpF,KAAK,UAFP,kBAchB,kBAAC,IAAD,CAAMgG,iBAAiB,SACrB,kBAAC,IAAD,CAAKK,SAAS,QAAQkG,MAAM,YAC1B,yBAAKnH,UAAU,eACb,wBAAIA,UAAU,cAAd,8BACA,yBAAKoH,aAAW,cACd,wBAAIpH,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,uBAAGqH,KAAK,KAAK9G,QAAS,SAAA+G,GAAK,OAAIA,EAAMC,mBAArC,cAChC,wBAAIvH,UAAU,yBAAyBwH,eAAa,QAApD,eAIN,yBAAKxH,UAAU,OACb,yBAAKA,UAAU,sBACZ6C,GAAY,kBAAC,IAAD,MACX,yBAAK7C,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,YACA,0BAAMA,UAAU,cAAczD,SAAUF,GAAaE,KACnD,uBAAGyD,UAAU,yBAAb,mBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,gBAGA,yBAAKA,UAAU,YACb,0CACEA,UAAU,+BACVW,GAAG,4BACHP,KAAK,cACDhE,GAAS,OAAQ,CACnBiE,UAAU,KAGZ,4BAAQnB,MAAM,IAAd,mBARF,OAUIuD,QAVJ,IAUIA,OAVJ,EAUIA,EAAMT,KAAI,SAAC+E,EAAMC,GAAP,OACR,4BACEC,IAAKD,EACL9H,MAAK,OAAE6H,QAAF,IAAEA,OAAF,EAAEA,EAAMpG,GACbuG,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAM3G,WAIpB5D,IAAUA,GAAOiG,MAAQ,uBAAGvB,MAAO,CAAE4F,MAAO,QAAnB,6BAIhC,yBAAK9G,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,SACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OACjBwF,KAAK,QACLqH,aAAY,OAAElF,QAAF,IAAEA,GAAF,UAAEA,EAASE,YAAX,aAAE,EAAeiF,OACzBtL,GAAS,QAAS,CAAEiE,UAAU,MACnC7D,IAAUA,GAAOkL,OAAS,uBAAGxG,MAAO,CAAE4F,MAAO,QAAnB,+BAKnC,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,UACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OACjBwF,KAAK,SACLqH,aAAY,OAAElF,QAAF,IAAEA,GAAF,UAAEA,EAASE,YAAX,aAAE,EAAekF,WACzBvL,GAAS,SAAU,CAAEiE,UAAU,MACpC7D,IAAUA,GAAOoL,QAAU,uBAAG1G,MAAO,CAAE4F,MAAO,QAAnB,gCAMpC,uBAAG9G,UAAU,oBAAb,mBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,WACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,WAAWD,YAAY,sBAChD/D,GAAS,UAAW,CAAEiE,UAAU,MAErC7D,IAAUA,GAAOqL,SAAW,uBAAG3G,MAAO,CAAE4F,MAAO,QAAnB,gCAKnC,yBAAK9G,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,QACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,OAAOD,YAAY,mBAC5C/D,GAAS,OAAQ,CAAEiE,UAAU,MAElC7D,IAAUA,GAAOsL,MAAQ,uBAAG5G,MAAO,CAAE4F,MAAO,QAAnB,8BAKlC,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,SACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,QAAQD,YAAY,oBAC7C/D,GAAS,QAAS,CAAEiE,UAAU,MAEnC7D,IAAUA,GAAOuL,OAAS,uBAAG7G,MAAO,CAAE4F,MAAO,QAAnB,8BAIjC,yBAAK9G,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,WACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,UAAUD,YAAY,sBAC/C/D,GAAS,UAAW,CAAEiE,UAAU,MAErC7D,IAAUA,GAAOwL,SAAW,uBAAG9G,MAAO,CAAE4F,MAAO,QAAnB,iCAKrC,uBAAG9G,UAAU,oBAAb,QACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,4BAAjB,OACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEpF,KAAK,WACLoF,UAAU,mBACVI,KAAK,WACDhE,GAAS,UAAW,CAAEiE,UAAU,MAEtC,uBAAGL,UAAU,iBAPf,aAWF,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,yBAAKA,UAAU,aACb,kBAAC,IAAKE,QAAN,eACES,GAAG,cACHX,UAAU,SACVpF,KAAK,OACLwF,KAAK,eACL6H,UAAU,GACN7L,GAAS,kBAEf,4BACEmE,QAlcV,SAAC0B,GACvBA,EAAEsF,iBACF,IAAMW,EAAU5K,SAASC,eAAe,eACpC2K,GACFA,EAAQC,SA+bsBnI,UAAS,2BAA2B,OAANkF,SAAM,IAANA,IAAA,UAAAA,GAAQiB,oBAAR,mBAAuB,UAAvB,SAA2B/F,KAAO,mBAGzD,OAAN8E,SAAM,IAANA,IAAA,UAAAA,GAAQiB,oBAAR,mBAAuB,UAAvB,eAA2B/F,MAA3B,OAAkC8E,SAAlC,IAAkCA,IAAlC,UAAkCA,GAAQiB,oBAA1C,iBAAkC,EAAuB,UAAzD,aAAkC,EAA2B/F,KAAO,2BAK7E,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEpF,KAAK,WACLoF,UAAU,mBACVI,KAAK,cACDhE,GAAS,aAAc,CAAEiE,UAAU,MAEzC,uBAAGL,UAAU,iBAPf,gBAWF,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,yBAAKA,UAAU,aACb,kBAAC,IAAKE,QAAN,eACES,GAAG,WACHX,UAAU,SACVpF,KAAK,OACLwF,KAAK,kBACL6H,UAAU,GACN7L,GAAS,qBAEf,4BACEmE,QAndb,SAAC0B,GACpBA,EAAEsF,iBACF,IAAMW,EAAU5K,SAASC,eAAe,YACpC2K,GACFA,EAAQC,SAgdsBnI,UAAS,2BAA2B,OAANkF,SAAM,IAANA,IAAA,UAAAA,GAAQa,uBAAR,mBAA0B,UAA1B,SAA8B3F,KAAO,mBAG5D,OAAN8E,SAAM,IAANA,IAAA,UAAAA,GAAQa,uBAAR,mBAA0B,UAA1B,eAA8B3F,MAA9B,OAAqC8E,SAArC,IAAqCA,IAArC,UAAqCA,GAAQa,uBAA7C,iBAAqC,EAA0B,UAA/D,aAAqC,EAA8B3F,KAAO,wBAKnF,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEpF,KAAK,WACLoF,UAAU,mBACVI,KAAK,gBACDhE,GAAS,eAAgB,CAAEiE,UAAU,MAE3C,uBAAGL,UAAU,iBAPf,kBAWF,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,yBAAKA,UAAU,aACb,kBAAC,IAAKE,QAAN,eACES,GAAG,eACHX,UAAU,SACVpF,KAAK,OACLwF,KAAK,oBACL6H,UAAU,GACN7L,GAAS,uBAEf,4BACEmE,QA5fT,SAAC0B,GACxBA,EAAEsF,iBACF,IAAMW,EAAU5K,SAASC,eAAe,gBACpC2K,GACFA,EAAQC,SAyfsBnI,UAAS,2BAA2B,OAANkF,SAAM,IAANA,IAAA,UAAAA,GAAQkB,yBAAR,mBAA4B,UAA5B,SAAgChG,KAAO,mBAG9D,OAAN8E,SAAM,IAANA,IAAA,UAAAA,GAAQkB,yBAAR,mBAA4B,UAA5B,eAAgChG,MAAhC,OAAuC8E,SAAvC,IAAuCA,IAAvC,UAAuCA,GAAQkB,yBAA/C,iBAAuC,EAA4B,UAAnE,aAAuC,EAAgChG,KAAO,8BAQ7F,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,aAAaD,YAAY,yBAClD/D,GAAS,aAAc,CAAEiE,UAAU,MAExC7D,IAAUA,GAAOkK,YAAc,uBAAGxF,MAAO,CAAE4F,MAAO,QAAnB,+BAMxC,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,iBACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,gBAAgBD,YAAY,4BACrD/D,GAAS,gBAAiB,CAAEiE,UAAU,MAE3C7D,IAAUA,GAAOmK,eAAiB,uBAAGzF,MAAO,CAAE4F,MAAO,QAAnB,kCAM3C,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,mBACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,kBAAkBD,YAAY,uBACvD/D,GAAS,kBAAmB,CAAEiE,UAAU,MAC7C7D,IAAUA,GAAOiK,iBAAmB,uBAAGvF,MAAO,CAAE4F,MAAO,QAAnB,kCAM7C,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,mBACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,WAAWD,YAAY,8BAChD/D,GAAS,WAAY,CAAEiE,UAAU,MAEtC7D,IAAUA,GAAO4L,UAAY,uBAAGlH,MAAO,CAAE4F,MAAO,QAAnB,+BAMtC,uBAAG9G,UAAU,oBAAb,oBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,qBAGA,yBAAKA,UAAU,YACb,0CACEA,UAAU,+BACVW,GAAG,4BACHP,KAAK,aACDhE,GAAS,YAAa,CACxBiE,UAAU,KAGZ,4BAAQnB,MAAM,IAAd,6BACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,gBACA,4BAAQA,MAAM,WAAd,YAED1C,IAAUA,GAAO6L,WAAa,uBAAGnH,MAAO,CAAE4F,MAAO,QAAnB,mCAIrC,yBAAK9G,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,kBACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,aAAaD,YAAY,6BAClD/D,GAAS,aAAc,CAAEiE,UAAU,MACxC7D,IAAUA,GAAO8L,YAAc,uBAAGpH,MAAO,CAAE4F,MAAO,QAAnB,wCAKxC,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,aACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,SAASD,YAAY,qBAC9C/D,GAAS,SAAU,CAAEiE,UAAU,MAEpC7D,IAAUA,GAAO+L,QAAU,uBAAGrH,MAAO,CAAE4F,MAAO,QAAnB,+BAKlC,yBAAK9G,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,WACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,OAAOD,YAAY,mBAC5C/D,GAAS,OAAQ,CAAEiE,UAAU,MAElC7D,IAAUA,GAAOgM,MAAQ,uBAAGtH,MAAO,CAAE4F,MAAO,QAAnB,8BAMlC,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,WACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,OAAOD,YAAY,mBAC5C/D,GAAS,OAAQ,CAAEiE,UAAU,MAElC7D,IAAUA,GAAOiM,MAAQ,uBAAGvH,MAAO,CAAE4F,MAAO,QAAnB,6BAIhC,yBAAK9G,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,uBACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eAActF,KAAK,OAAOwF,KAAK,kBAAkBD,YAAY,sBACvD/D,GAAS,kBAAmB,CAAEiE,UAAU,MAE7C7D,IAAUA,GAAOgK,iBAAmB,uBAAGtF,MAAO,CAAE4F,MAAO,QAAnB,yCAK7C,yBAAK9G,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,sBACA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACES,GAAG,kBACHX,UAAU,SACVpF,KAAK,OACLwF,KAAK,qBACL6H,UAAU,GACN7L,GAAS,wBAEf,4BACEmE,QAnpBF,SAAC0B,GAC3BA,EAAEsF,iBACF,IAAMW,EAAU5K,SAASC,eAAe,mBACpC2K,GACFA,EAAQC,SAgpBkBnI,UAAS,2BAA2B,OAANkF,SAAM,IAANA,IAAA,UAAAA,GAAQmB,0BAAR,mBAA6B,UAA7B,SAAiCjG,KAAO,mBAG/D,OAAN8E,SAAM,IAANA,IAAA,UAAAA,GAAQmB,0BAAR,mBAA6B,UAA7B,eAAiCjG,MAAjC,OAAwC8E,SAAxC,IAAwCA,IAAxC,UAAwCA,GAAQmB,0BAAhD,iBAAwC,EAA6B,UAArE,aAAwC,EAAiCjG,KAAO,iCAM3F,yBAAKJ,UAAU,QACb,4BACEA,UAAU,2DACVpF,KAAK,UAFP,iBAehB,kBAAC,IAAD,CAAKqG,SAAS,SAASkG,MAAM,cAC3B,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAKlG,SAAS,QAAQkG,MAAM,aAC1B,yBAAKnH,UAAU,sCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,kBAEA,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,uBACf,+BACE,4BACE,sCACA,6CACA,wCACA,uCACA,0CAGJ,+BACE,4BACE,6CACA,2CACA,yCACA,yCACA,uCAEF,4BACE,6CACA,yCACA,yCACA,yCACA,8CAShB,kBAAC,IAAD,CAAKiB,SAAS,SAASkG,MAAM,eAC3B,yBAAKnH,UAAU,OACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,sDACb,yBAAKA,UAAU,aACb,yBAAK0I,IAAKC,EAAQ,KAAgD3I,UAAU,oBAAoB4I,IAAI,WACpG,wBAAI5I,UAAU,2BAAd,eAAoD,uBAAGA,UAAU,6CAEjE,wBAAIA,UAAU,QAAd,eACA,4BAAQpF,KAAK,SAASoF,UAAU,8CAA8CO,QAzwB3E,kBAAM1E,IAAQ,KAywBjB,mBAMV,kBAAC,IAAD,CAAKoF,SAAS,QAAQkG,MAAM,kBAC1B,yBAAKnH,UAAU,OACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,sDACb,yBAAKA,UAAU,aACb,yBAAK0I,IAAKC,EAAQ,KAAgD3I,UAAU,oBAAoB4I,IAAI,WACpG,wBAAI5I,UAAU,2BAAd,kBAAuD,uBAAGA,UAAU,6CAEpE,wBAAIA,UAAU,QAAd,kBACA,4BAAQpF,KAAK,SAASoF,UAAU,8CAA8CO,QAvxB1E,kBAAMqC,IAAS,KAuxBnB","file":"static/js/21.968e75c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circle.953c9ca0.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { Tab, Col, Nav } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Calc = () => {\r\n  const [type, settype] = useState(0);\r\n\r\n  const [amounts, setamounts] = useState(25000);\r\n  const [totalYear, settotalYear] = useState(10);\r\n  const [returnRateAmount, setreturnRateAmount] = useState(12);\r\n\r\n  const [totalValue, settotalValue] = useState(0);\r\n  const [futureValues, setfutureValues] = useState(0);\r\n  const [investedValue, setinvestedValue] = useState(0);\r\n  const [year, setYear] = useState([]);\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    let data = [];\r\n    for (let i = 1; i <= totalYear; i++) {\r\n      data.push(i)\r\n    }\r\n    setYear(data)\r\n  }, [totalYear])\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n  };\r\n  // chart management\r\n  const [trafficOptions] = useState({\r\n    responsive: true,\r\n    animation: {\r\n      animateScale: true,\r\n      animateRotate: true,\r\n    },\r\n    legend: false,\r\n  });\r\n\r\n  const [trafficData, settrafficData] = useState({});\r\n  useEffect(() => {\r\n    // your code\r\n    var ctx = document.getElementById(\"visitSaleChart\").getContext(\"2d\");\r\n\r\n    var gradientdonut1 = ctx.createLinearGradient(0, 0, 0, 181);\r\n    gradientdonut1.addColorStop(0, \"rgba(54, 215, 232, 1)\");\r\n    gradientdonut1.addColorStop(1, \"rgba(177, 148, 250, 1)\");\r\n\r\n    var gradientdonut2 = ctx.createLinearGradient(0, 0, 0, 50);\r\n    gradientdonut2.addColorStop(0, \"rgba(6, 185, 157, 1)\");\r\n    gradientdonut2.addColorStop(1, \"rgba(132, 217, 210, 1)\");\r\n\r\n    const newTrafficData = {\r\n      datasets: [\r\n        {\r\n          data: [investedValue, futureValues],\r\n          backgroundColor: [gradientdonut1, gradientdonut2],\r\n          hoverBackgroundColor: [gradientdonut1, gradientdonut2],\r\n          borderColor: [gradientdonut1, gradientdonut2],\r\n          legendColor: [gradientdonut1, gradientdonut2],\r\n        },\r\n      ],\r\n\r\n      // These labels appear in the legend and in the tooltips when hovering different arcs\r\n      labels: [\"invested amount\", \"Est. returns\"],\r\n    };\r\n    settrafficData(newTrafficData);\r\n  }, [investedValue, futureValues]);\r\n\r\n  React.useEffect(() => {\r\n    calculateResult();\r\n  }, [amounts, totalYear, returnRateAmount, type]);\r\n\r\n  const calculateResult = () => {\r\n    let investment = amounts;\r\n    let instalments;\r\n    if (type === 0) {\r\n      var monthlyRate = returnRateAmount / 12 / 100;\r\n      var months = totalYear * 12;\r\n      var futureValue = 0;\r\n\r\n      var total = investment * totalYear * returnRateAmount;\r\n\r\n      futureValue =\r\n        (investment *\r\n          (1 + monthlyRate) *\r\n          (Math.pow(1 + monthlyRate, months) - 1)) /\r\n        monthlyRate;\r\n      instalments = investment * totalYear * 12;\r\n    } else {\r\n      var total = investment;\r\n      futureValue = Math.round(\r\n        Math.pow(1 + returnRateAmount / 100, totalYear) * amounts\r\n      );\r\n      instalments = investment;\r\n    }\r\n    settotalValue(total === \"NaN\" ? \"0\" : total);\r\n    setfutureValues(Math.round(futureValue));\r\n    setinvestedValue(instalments);\r\n  };\r\n\r\n  const YearTotal = (year,type) => {\r\n    let investment = amounts;\r\n    let instalments;\r\n    if (type === 0) {\r\n      var monthlyRate = returnRateAmount / 12 / 100;\r\n      var months = year * 12;\r\n      var futureValue = 0;\r\n\r\n      var total = investment * year * returnRateAmount;\r\n\r\n      futureValue =\r\n        (investment *\r\n          (1 + monthlyRate) *\r\n          (Math.pow(1 + monthlyRate, months) - 1)) /\r\n        monthlyRate;\r\n      instalments = investment * year * 12;\r\n    } else {\r\n      var total = investment;\r\n      futureValue = Math.round(\r\n        Math.pow(1 + returnRateAmount / 100, year) * amounts\r\n      );\r\n      instalments = investment;\r\n    }\r\n    if(type === 'investedValue'){\r\n      return numberWithCommas(investedValue * year);\r\n    }else if(type === 'futureValues'){\r\n      return numberWithCommas((futureValues * year) - (investedValue * year));\r\n    }else{\r\n      return numberWithCommas(futureValues * year);\r\n    }\r\n  };\r\n\r\n  const onChangeAmount = (changeEvent) => {\r\n    if (changeEvent.target.value < 100001) {\r\n      setamounts(changeEvent.target.value);\r\n    }\r\n\r\n    if (\r\n      changeEvent.target.value > 100000 &&\r\n      !isNaN(+changeEvent.target.value)\r\n    ) {\r\n      setamounts(100000);\r\n    }\r\n  };\r\n\r\n  const onChangeRate = (changeEvent) => {\r\n    if (changeEvent.target.value < 31) {\r\n      setreturnRateAmount(changeEvent.target.value);\r\n    }\r\n\r\n    if (changeEvent.target.value > 30 && !isNaN(+changeEvent.target.value)) {\r\n      setreturnRateAmount(30);\r\n    }\r\n  };\r\n\r\n  const onChangeYear = (changeEvent) => {\r\n    if (changeEvent.target.value < 31) {\r\n      settotalYear(changeEvent.target.value);\r\n    }\r\n\r\n    if (changeEvent.target.value > 30 && !isNaN(+changeEvent.target.value)) {\r\n      settotalYear(10);\r\n    }\r\n  };\r\n\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Deposit</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 \">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-sample\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Enter Amount\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Amount\"\r\n                              name=\"amount\"\r\n                              {...register(\"amount\", { required: true })}\r\n                            />\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Enter Account-number\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Account-number\"\r\n                              name=\"account-number\"\r\n                              {...register(\"account-number\", {\r\n                                required: true,\r\n                              })}\r\n                            />\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Enter Account-number\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select className=\"form-select\">\r\n                              <option selected={true}>Surat</option>\r\n                              <option>Masma</option>\r\n                              <option>Olpad</option>\r\n                              <option>Navsari</option>\r\n                              <option>Valsad</option>\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Training Type\r\n                          </label>\r\n                          <div className=\"col-sm-3\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"form-check-input\"\r\n                                  name=\"android\"\r\n                                  {...register(\"android\", { required: true })}\r\n                                />\r\n                                <i className=\"input-helper\"></i>\r\n                                Android\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-sm-3\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"form-check-input\"\r\n                                  name=\"iphone\"\r\n                                  {...register(\"iphone\", { required: true })}\r\n                                />\r\n                                <i className=\"input-helper\"></i>\r\n                                IPhone\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"text-center mb-4 font-weight-light\">\r\n                      for bank details{\" \"}\r\n                      <a\r\n                        onClick={() => window.open(\"/user-pages/bank-details\")}\r\n                        className=\"text-primary\"\r\n                      >\r\n                        click here\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-sm font-weight-medium auth-form-btn \"\r\n                        type=\"submit\"\r\n                      >\r\n                        SUBMIT\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-7 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                <Col sm={12}>\r\n                  <Nav variant=\"pills\" className=\"d-flex row\">\r\n                    <Nav.Item onClick={() => settype(0)}>\r\n                      <Nav.Link eventKey=\"first\">SIP</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item onClick={() => settype(1)}>\r\n                      <Nav.Link eventKey=\"second\">Lumpsum</Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </Col>{\" \"}\r\n                <br />\r\n                <div style={{ padding: \"0px !important\" }}>\r\n                  <Tab.Content style={{ border: \"none\" }}>\r\n                    <Tab.Pane eventKey=\"first\">\r\n                      <div style={{ margin: \"10px 0px\" }}>\r\n                        <div className=\"investmentInput-controller\">\r\n                          <span>Monthly investment</span>\r\n                          <div>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"sipInput\"\r\n                              id=\"exampleInputEmail1\"\r\n                              name=\"investment\"\r\n                              value={amounts}\r\n                              onChange={onChangeAmount}\r\n                            />{\" \"}\r\n                            ₹\r\n                          </div>\r\n                        </div>\r\n                        <input\r\n                          type=\"range\"\r\n                          style={{ width: \"100%\", accentColor: \"#8163cc\" }}\r\n                          value={amounts}\r\n                          onChange={onChangeAmount}\r\n                          size=\"lg\"\r\n                          tooltip=\"off\"\r\n                          variant=\"primary\"\r\n                          max={100000}\r\n                        />\r\n                      </div>\r\n                      <div style={{ margin: \"10px 0px\" }}>\r\n                        <div className=\"investmentInput-controller\">\r\n                          <span>Expected return rate (p.a)</span>\r\n                          <div>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"sipInput\"\r\n                              id=\"exampleInputEmail1\"\r\n                              name=\"investment\"\r\n                              value={returnRateAmount}\r\n                              onChange={onChangeRate}\r\n                            />{\" \"}\r\n                            %\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <input\r\n                            type=\"range\"\r\n                            style={{ width: \"100%\", accentColor: \"#8163cc\" }}\r\n                            value={returnRateAmount}\r\n                            onChange={onChangeRate}\r\n                            size=\"lg\"\r\n                            tooltip=\"off\"\r\n                            variant=\"primary\"\r\n                            max={30}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ margin: \"10px 0px\" }}>\r\n                        <div className=\"investmentInput-controller\">\r\n                          <span>Time period</span>\r\n                          <div>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"sipInput\"\r\n                              id=\"exampleInputEmail1\"\r\n                              name=\"investment\"\r\n                              value={totalYear}\r\n                              onChange={onChangeYear}\r\n                            />{\" \"}\r\n                            Yr\r\n                          </div>\r\n                        </div>\r\n                        <input\r\n                          type=\"range\"\r\n                          style={{ width: \"100%\", accentColor: \"#8163cc\" }}\r\n                          value={totalYear}\r\n                          onChange={onChangeYear}\r\n                          size=\"lg\"\r\n                          tooltip=\"off\"\r\n                          variant=\"primary\"\r\n                          max={30}\r\n                        />\r\n                      </div>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"second\">\r\n                      <div style={{ margin: \"10px 0px\" }}>\r\n                        <div className=\"investmentInput-controller\">\r\n                          <span>Total investment</span>\r\n                          <div>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"sipInput\"\r\n                              id=\"exampleInputEmail1\"\r\n                              name=\"investment\"\r\n                              value={amounts}\r\n                              onChange={onChangeAmount}\r\n                            />{\" \"}\r\n                            ₹\r\n                          </div>\r\n                        </div>\r\n                        <input\r\n                          type=\"range\"\r\n                          style={{ width: \"100%\", accentColor: \"#8163cc\" }}\r\n                          value={amounts}\r\n                          onChange={onChangeAmount}\r\n                          size=\"lg\"\r\n                          tooltip=\"off\"\r\n                          variant=\"primary\"\r\n                          max={100000}\r\n                        />\r\n                      </div>\r\n                      <div style={{ margin: \"10px 0px\" }}>\r\n                        <div className=\"investmentInput-controller\">\r\n                          <span>Expected return rate (p.a)</span>\r\n                          <div>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"sipInput\"\r\n                              id=\"exampleInputEmail1\"\r\n                              name=\"investment\"\r\n                              value={returnRateAmount}\r\n                              onChange={onChangeRate}\r\n                            />{\" \"}\r\n                            %\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <input\r\n                            type=\"range\"\r\n                            style={{ width: \"100%\", accentColor: \"#8163cc\" }}\r\n                            value={returnRateAmount}\r\n                            onChange={onChangeRate}\r\n                            size=\"lg\"\r\n                            tooltip=\"off\"\r\n                            variant=\"primary\"\r\n                            max={30}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ margin: \"10px 0px\" }}>\r\n                        <div className=\"investmentInput-controller\">\r\n                          <span>Time period</span>\r\n                          <div>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"sipInput\"\r\n                              id=\"exampleInputEmail1\"\r\n                              name=\"investment\"\r\n                              value={totalYear}\r\n                              onChange={onChangeYear}\r\n                            />{\" \"}\r\n                            Yr\r\n                          </div>\r\n                        </div>\r\n                        <input\r\n                          type=\"range\"\r\n                          style={{ width: \"100%\", accentColor: \"#8163cc\" }}\r\n                          value={totalYear}\r\n                          onChange={onChangeYear}\r\n                          size=\"lg\"\r\n                          tooltip=\"off\"\r\n                          variant=\"primary\"\r\n                          max={30}\r\n                        />\r\n                      </div>\r\n                    </Tab.Pane>\r\n                  </Tab.Content>\r\n                </div>\r\n              </Tab.Container>\r\n\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    margin: \"10px 0px\",\r\n                  }}\r\n                >\r\n                  <span className=\"text-right\" style={{ width: '10%' }}>Year</span>\r\n                  <span className=\"text-right\" style={{ width: '32%' }}>Invested amount</span>\r\n                  <span className=\"text-right\" style={{ width: '30%' }}>Est. returns</span>\r\n                  <span className=\"text-right\" style={{ width: '28%' }}>Total</span>\r\n                </div>\r\n                {totalYear > 0 && year.map((e, i) =>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      margin: \"10px 0px\",\r\n                    }}\r\n                  >\r\n                    <span className=\"text-right\" style={{ width: '10%' }}>{e}</span>\r\n                    <span className=\"text-right\" style={{ width: '32%' }}>{YearTotal(e,'investedValue')} &nbsp; ₹</span>\r\n                    <span className=\"text-right\" style={{ width: '30%' }}>{YearTotal(e,'futureValues')} &nbsp; ₹</span>\r\n                    <span className=\"text-right\" style={{ width: '28%' }}>{YearTotal(e,'total')} &nbsp; ₹</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-5 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-gradient-primary btn-fw\"\r\n                >\r\n                  Invest now\r\n                </button>\r\n              </h4>\r\n              <Doughnut\r\n                data={trafficData}\r\n                options={trafficOptions}\r\n                id=\"visitSaleChart\"\r\n              />\r\n              <div\r\n                id=\"traffic-chart-legend\"\r\n                className=\"rounded-legend legend-vertical legend-bottom-left pt-4\"\r\n              >\r\n                <ul>\r\n                  <li>\r\n                    <span className=\"legend-dots bg-info\"></span>Invested\r\n                    amount\r\n                  </li>\r\n                  <li>\r\n                    <span className=\"legend-dots bg-success\"></span>Est.\r\n                    returns\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            {/* <div className='mr-3 mb-3'>\r\n              <h4 className=\"card-title text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-gradient-primary btn-fw\"\r\n                  onClick={handleShow}\r\n                >\r\n                  Withdrawal\r\n                </button>\r\n              </h4>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calc;\r\n","import React, { useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from 'react-bootstrap';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Calc from '../SipCalc/Calc';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ImageUpload, addPowerone, getAllUsers, getBranchesClient, userLogout, addTransaction } from '../../../utils/APIs';\r\nimport Spinner from '../../shared/Spinner';\r\n\r\n\r\nconst PowerOne = () => {\r\n  const history = useHistory();\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  const [user, setUser] = React.useState([]);\r\n  const [show, setShow] = React.useState(false);\r\n  const [show1, setShow1] = React.useState(false);\r\n  const [isLoading, setisLoading] = React.useState(false);\r\n  const [itemlist, setitemlist] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllUsersList();\r\n    list();\r\n  }, []);\r\n\r\n  const list = async () => {\r\n    try {\r\n      const items = await (await getBranchesClient()).data;\r\n      setitemlist(items?.results);\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getAllUsersList = async () => {\r\n    const allUsers = await getAllUsers();\r\n    setUser(allUsers?.data?.results);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleClose1 = () => setShow1(false);\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleShow1 = () => setShow1(true);\r\n\r\n  const { register, handleSubmit, formState: { errors, isDirty, isValid }, getValues } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const { register: register2, handleSubmit: handleSubmit2, formState: { errors: errors2 }, reset } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const { register: register3, handleSubmit: handleSubmit3, formState: { errors: errors3 }, reset: reset3 } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const values = getValues();\r\n\r\n  const handlePanUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-panId');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  const handlePassUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-passId');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-id');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  const handlepaymentUpload = (e) => {\r\n    e.preventDefault()\r\n    const element = document.getElementById('input-paymentId');\r\n    if (element) {\r\n      element.click()\r\n    }\r\n  };\r\n\r\n  const onSubmitWithdraw = async (data) => {\r\n    handleClose();\r\n    const formData = JSON.stringify({\r\n      'total': data.amount,\r\n      'from_user': cookies?.user?.id,\r\n      'to_user': data.branch,\r\n      'type': \"withdraw\",\r\n      'role': \"branch\",\r\n      'status': 0\r\n    })\r\n    try {\r\n      await addTransaction(formData);\r\n      handleClose1();\r\n      reset3();\r\n      toast.success(\"Withdraw Request successfully\");\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmitDeposit = async (data) => {\r\n    const formData = JSON.stringify({\r\n      'total': data.amount,\r\n      'from_user': cookies?.user?.id,\r\n      'to_user': data.branch,\r\n      'type': \"deposit\",\r\n      'role': 'branch',\r\n      'status': 0\r\n    })\r\n    try {\r\n      await addTransaction(formData);\r\n      reset();\r\n      handleClose();\r\n      toast.success(\"Deposit successfully\");\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    setisLoading(true)\r\n    console.log(data);\r\n    const Data = new FormData();\r\n    var aadharcard_img = '';\r\n    var pancard_img = '';\r\n    var passbook_img = '';\r\n    var payment_img = '';\r\n    if (data.aadhar_card_img.length !== 0) {\r\n      Data.append('file', data.aadhar_card_img[0]);\r\n      aadharcard_img = await ImageUpload(Data)\r\n    }\r\n    if (data.pan_card_img.length !== 0) {\r\n      Data.append('file', data.pan_card_img[0]);\r\n      pancard_img = await ImageUpload(Data)\r\n    }\r\n\r\n    if (data.passbook_card_img.length !== 0) {\r\n      Data.append('file', data.passbook_card_img[0]);\r\n      passbook_img = await ImageUpload(Data)\r\n    }\r\n\r\n    if (data.payment_screenshot.length !== 0) {\r\n      Data.append('file', data.payment_screenshot[0]);\r\n      payment_img = await ImageUpload(Data)\r\n    }\r\n\r\n    if (aadharcard_img.error || pancard_img.error || passbook_img.error || payment_img.error) {\r\n      toast.error(aadharcard_img.error.message);\r\n    } else {\r\n      delete data.deposit;\r\n      delete data.deposit1;\r\n      delete data.payment_gateway;\r\n      delete data.passport_number;\r\n      delete data.pan_number;\r\n      delete data.aadhar_number;\r\n      data.payment_screenshot = payment_img.secure_url;\r\n      data.aadhar_card_img = aadharcard_img.secure_url;\r\n      data.pan_card_img = pancard_img.secure_url;\r\n      data.passbook_card_img = passbook_img.secure_url;\r\n      try {\r\n        setisLoading(false)\r\n        await addPowerone(data)\r\n        toast.success(\"Powerone created successfully\");\r\n        history.push('/investment/poweronelist');\r\n      } catch (error) {\r\n        if (\r\n          error &&\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.message\r\n        ) {\r\n          toast.error(error.response.data.message);\r\n        } else {\r\n          toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Raise Funds</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 \">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-sample\"\r\n                    onSubmit={handleSubmit2(onSubmitDeposit)}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Enter Amount\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Amount\"\r\n                              name=\"amount\"\r\n                              {...register2(\"amount\", { required: true })}\r\n                            />\r\n                            {errors2 && errors2.amount && <p style={{ color: \"red\" }}>Amount field is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            To\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select\r\n                              className=\"form-control form-control-lg\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              {...register2(\"branch\", {\r\n                                required: true,\r\n                              })}\r\n                            >\r\n                              <option value=''>--Select branch--</option>\r\n                              {itemlist.map((item, index) => (\r\n                                <option key={index} value={item?.id} label={item?.name} ></option>\r\n                              ))}\r\n                            </select>\r\n                            {errors2 && errors2.branch && <p style={{ color: \"red\" }}>Select branch is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-sm font-weight-medium auth-form-btn \"\r\n                        type=\"submit\"\r\n                      >\r\n                        SUBMIT\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal\r\n        show={show1}\r\n        onHide={handleClose1}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Withdraw Funds</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 \">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form\"\r\n                    onSubmit={handleSubmit3(onSubmitWithdraw)}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Enter Amount\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Amount\"\r\n                              name=\"amount\"\r\n                              {...register3(\"amount\", { required: true })}\r\n                            />\r\n                            {errors3 && errors3.amount && <p style={{ color: \"red\" }}>amount is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            To\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select\r\n                              className=\"form-control form-control-lg\"\r\n                              id=\"exampleFormControlSelect2\"\r\n                              name=\"branch\"\r\n                              {...register3(\"branch\", {\r\n                                required: true,\r\n                              })}\r\n                            >\r\n                              <option value=''>--Select branch--</option>\r\n                              {itemlist.map((item, index) => (\r\n                                <option key={index} value={item?.id} label={item?.name} ></option>\r\n                              ))}\r\n                            </select>\r\n                            {errors3 && errors3.branch && <p style={{ color: \"red\" }}>Select branch is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-sm font-weight-medium auth-form-btn \"\r\n                        type=\"submit\"\r\n                      >\r\n                        SUBMIT\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Tabs defaultActiveKey=\"first\"  >\r\n        <Tab eventKey=\"first\" title=\"PowerOne\">\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Opening Form / PowerOne  </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Invesment</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">PowerOne</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              {isLoading ? <Spinner /> : (\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">PowerOne</h4>\r\n                    <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                      <p className=\"card-description mt-3\"> Personal info </p>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-4 col-form-label\">\r\n                              Select Users\r\n                            </label>\r\n                            <div className=\"col-sm-6\">\r\n                              <select\r\n                                className=\"form-control form-control-lg\"\r\n                                id=\"exampleFormControlSelect2\"\r\n                                name=\"selectUser\"\r\n                                {...register(\"user\", {\r\n                                  required: true,\r\n                                })}\r\n                              >\r\n                                <option value=''>--Select User--</option>\r\n                                {\r\n                                  user?.map((item, index) => (\r\n                                    <option\r\n                                      key={index}\r\n                                      value={item?.id}\r\n                                      label={item?.name}\r\n                                    ></option>\r\n                                  ))}\r\n                              </select>\r\n                              {errors && errors.user && <p style={{ color: \"red\" }}>User is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-4 col-form-label\">Email</label>\r\n                            <div className=\"col-sm-8\">\r\n                              <Form.Control type=\"text\"\r\n                                name=\"email\"\r\n                                defaultValue={cookies?.user?.email}\r\n                                {...register(\"email\", { required: true })} />\r\n                              {errors && errors.email && <p style={{ color: \"red\" }}>Email is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-4 col-form-label\">Mobile</label>\r\n                            <div className=\"col-sm-8\">\r\n                              <Form.Control type=\"text\"\r\n                                name=\"mobile\"\r\n                                defaultValue={cookies?.user?.contactno}\r\n                                {...register(\"mobile\", { required: true })} />\r\n                              {errors && errors.mobile && <p style={{ color: \"red\" }}>Mobile is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <p className=\"card-description\">Postal Address </p>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Address</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"address1\" placeholder=\"Enter Your Address\"\r\n                                {...register(\"address\", { required: false })} />\r\n\r\n                              {errors && errors.address && <p style={{ color: \"red\" }}>address is required field</p>}\r\n\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">City</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"city\" placeholder=\"Enter Your city\"\r\n                                {...register(\"city\", { required: false })} />\r\n\r\n                              {errors && errors.city && <p style={{ color: \"red\" }}>city is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">State</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"state\" placeholder=\"Enter Your state\"\r\n                                {...register(\"state\", { required: false })} />\r\n\r\n                              {errors && errors.state && <p style={{ color: \"red\" }}>state is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Country</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"country\" placeholder=\"Enter Your country\"\r\n                                {...register(\"country\", { required: false })} />\r\n\r\n                              {errors && errors.country && <p style={{ color: \"red\" }}>country is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"card-description\">KYC </p>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-2  col-form-label\">KYC</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <div className=\"form-check\">\r\n                                <label className=\"form-check-label\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    name=\"pancard\"\r\n                                    {...register(\"pancard\", { required: false })}\r\n                                  />\r\n                                  <i className=\"input-helper\"></i>\r\n                                  Pan card\r\n                                </label>\r\n                              </div>\r\n                              <Form.Group className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                  <Form.Control\r\n                                    id=\"input-panId\"\r\n                                    className=\"d-none\"\r\n                                    type=\"file\"\r\n                                    name=\"pan_card_img\"\r\n                                    multiple={false}\r\n                                    {...register(\"pan_card_img\")}\r\n                                  />\r\n                                  <button\r\n                                    onClick={handlePanUpload}\r\n                                    className={`btn btn-outline-${values?.pan_card_img?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\r\n                                      }`}\r\n                                  >\r\n                                    {values?.pan_card_img?.[0]?.name ? values?.pan_card_img?.[0]?.name : \"Upload Pancard Image\"}\r\n                                  </button>\r\n                                </div>\r\n                              </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                              <div className=\"form-check\">\r\n                                <label className=\"form-check-label\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    name=\"aadharcard\"\r\n                                    {...register(\"aadharcard\", { required: false })}\r\n                                  />\r\n                                  <i className=\"input-helper\"></i>\r\n                                  Adhaar card\r\n                                </label>\r\n                              </div>\r\n                              <Form.Group className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                  <Form.Control\r\n                                    id=\"input-id\"\r\n                                    className=\"d-none\"\r\n                                    type=\"file\"\r\n                                    name=\"aadhar_card_img\"\r\n                                    multiple={false}\r\n                                    {...register(\"aadhar_card_img\")}\r\n                                  />\r\n                                  <button\r\n                                    onClick={handleUpload}\r\n                                    className={`btn btn-outline-${values?.aadhar_card_img?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\r\n                                      }`}\r\n                                  >\r\n                                    {values?.aadhar_card_img?.[0]?.name ? values?.aadhar_card_img?.[0]?.name : \"Upload Aadharcard\"}\r\n                                  </button>\r\n                                </div>\r\n                              </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                              <div className=\"form-check\">\r\n                                <label className=\"form-check-label\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    name=\"bankpassbook\"\r\n                                    {...register(\"bankpassbook\", { required: false })}\r\n                                  />\r\n                                  <i className=\"input-helper\"></i>\r\n                                  Bank Passbook\r\n                                </label>\r\n                              </div>\r\n                              <Form.Group className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                  <Form.Control\r\n                                    id=\"input-passId\"\r\n                                    className=\"d-none\"\r\n                                    type=\"file\"\r\n                                    name=\"passbook_card_img\"\r\n                                    multiple={false}\r\n                                    {...register(\"passbook_card_img\")}\r\n                                  />\r\n                                  <button\r\n                                    onClick={handlePassUpload}\r\n                                    className={`btn btn-outline-${values?.passbook_card_img?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\r\n                                      }`}\r\n                                  >\r\n                                    {values?.passbook_card_img?.[0]?.name ? values?.passbook_card_img?.[0]?.name : \"Upload Bank Passport\"}\r\n                                  </button>\r\n                                </div>\r\n                              </Form.Group>\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">PAN Number</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"pan_number\" placeholder=\"Enter Your Pan Number\"\r\n                                {...register(\"pan_number\", { required: false })} />\r\n\r\n                              {errors && errors.pan_number && <p style={{ color: \"red\" }}>panNo is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Aadhar Number</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"aadhar_number\" placeholder=\"Enter Your Aadhar Number\"\r\n                                {...register(\"aadhar_number\", { required: false })} />\r\n\r\n                              {errors && errors.aadhar_number && <p style={{ color: \"red\" }}>AadharNo is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Passport Number</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"passport_number\" placeholder=\"Enter Your Passport\"\r\n                                {...register(\"passport_number\", { required: false })} />\r\n                              {errors && errors.passport_number && <p style={{ color: \"red\" }}>passport is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">Voter ID Number</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"voter_id\" placeholder=\"Enter Your voter Id Number\"\r\n                                {...register(\"voter_id\", { required: false })} />\r\n\r\n                              {errors && errors.voter_id && <p style={{ color: \"red\" }}>Voter is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"card-description\">PAYMENT DETAILS </p>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-7\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-5 col-form-label\">\r\n                              Select Payment By\r\n                            </label>\r\n                            <div className=\"col-sm-7\">\r\n                              <select\r\n                                className=\"form-control form-control-lg\"\r\n                                id=\"exampleFormControlSelect2\"\r\n                                name=\"method_by\"\r\n                                {...register(\"method_by\", {\r\n                                  required: true,\r\n                                })}\r\n                              >\r\n                                <option value=''>--Select Payment Method--</option>\r\n                                <option value=\"by_cash\">By Cash</option>\r\n                                <option value=\"by_gpay\">By GooglePay</option>\r\n                                <option value=\"by_card\">By Card</option>\r\n                              </select>\r\n                              {errors && errors.method_by && <p style={{ color: \"red\" }}>Payment By is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-5 col-form-label\">Payment Number</label>\r\n                            <div className=\"col-sm-7\">\r\n                              <Form.Control type=\"text\" name=\"payment_no\" placeholder=\"Enter Your Payment Number\"\r\n                                {...register(\"payment_no\", { required: true })} />\r\n                              {errors && errors.payment_no && <p style={{ color: \"red\" }}>Payment Number is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">By Cheque</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"cheque\" placeholder=\"Enter Your cheque\"\r\n                                {...register(\"cheque\", { required: false })} />\r\n\r\n                              {errors && errors.cheque && <p style={{ color: \"red\" }}>Cheque is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">By NEFT</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"neft\" placeholder=\"Enter Your NEFT\"\r\n                                {...register(\"neft\", { required: false })} />\r\n\r\n                              {errors && errors.neft && <p style={{ color: \"red\" }}>NEFT is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">By RTGS</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"rtgs\" placeholder=\"Enter Your RTGS\"\r\n                                {...register(\"rtgs\", { required: false })} />\r\n\r\n                              {errors && errors.rtgs && <p style={{ color: \"red\" }}>RTGS is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-3 col-form-label\">By Payment Gateways</label>\r\n                            <div className=\"col-sm-9\">\r\n                              <Form.Control type=\"text\" name=\"payment_gateway\" placeholder=\"Enter Your payment\"\r\n                                {...register(\"payment_gateway\", { required: false })} />\r\n\r\n                              {errors && errors.payment_gateway && <p style={{ color: \"red\" }}>Payment Gateway is required field</p>}\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n                      <div className='row'>\r\n                        <div className=\"col-md-8\">\r\n                          <Form.Group className=\"row\">\r\n                            <label className=\"col-sm-4 col-form-label\">Payment Screenshot</label>\r\n                            <div className=\"col-sm-8\">\r\n                              <Form.Control\r\n                                id=\"input-paymentId\"\r\n                                className=\"d-none\"\r\n                                type=\"file\"\r\n                                name=\"payment_screenshot\"\r\n                                multiple={false}\r\n                                {...register(\"payment_screenshot\")}\r\n                              />\r\n                              <button\r\n                                onClick={handlepaymentUpload}\r\n                                className={`btn btn-outline-${values?.payment_screenshot?.[0]?.name ? \" btn-primary\" : \" btn-primary\"\r\n                                  }`}\r\n                              >\r\n                                {values?.payment_screenshot?.[0]?.name ? values?.payment_screenshot?.[0]?.name : \"Upload Payment Screenshot\"}\r\n                              </button>\r\n                            </div>\r\n                          </Form.Group>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <button\r\n                          className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                          type=\"submit\"\r\n                        // disabled={!isDirty || !isValid}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"second\" title=\"Calculator\">\r\n          <Calc />\r\n        </Tab>\r\n        <Tab eventKey=\"third\" title=\"Statement\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Mini Statement</h4>\r\n\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th> Date </th>\r\n                        <th> Description </th>\r\n                        <th> Credit </th>\r\n                        <th> Debit </th>\r\n                        <th> Amount </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td> Herman Beck </td>\r\n                        <td> fdsfsdfsd </td>\r\n                        <td> $ 77.99 </td>\r\n                        <td> $ 77.99 </td>\r\n                        <td> 2300 </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> Herman Beck </td>\r\n                        <td>fdsfsdfsd</td>\r\n                        <td> $ 77.99 </td>\r\n                        <td> $ 77.99 </td>\r\n                        <td> 2300 </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"fourth\" title=\"Raise Funds\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 stretch-card grid-margin\">\r\n              <div className=\"card bg-gradient-danger card-img-holder text-white\">\r\n                <div className=\"card-body\">\r\n                  <img src={require(\"../../../assets/images/dashboard/circle.svg\")} className=\"card-img-absolute\" alt=\"circle\" />\r\n                  <h4 className=\"font-weight-normal mb-3\">Raise Funds <i className=\"mdi mdi-chart-line mdi-24px float-right\"></i>\r\n                  </h4>\r\n                  <h2 className=\"mb-5\">Raise Funds</h2>\r\n                  <button type=\"button\" className=\"btn btn-gradient-primary btn-fw mb-2 center\" onClick={handleShow}>Click Here</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"fifth\" title=\"Withdraw Funds\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 stretch-card grid-margin\">\r\n              <div className=\"card bg-gradient-danger card-img-holder text-white\">\r\n                <div className=\"card-body\">\r\n                  <img src={require(\"../../../assets/images/dashboard/circle.svg\")} className=\"card-img-absolute\" alt=\"circle\" />\r\n                  <h4 className=\"font-weight-normal mb-3\">Withdraw Funds <i className=\"mdi mdi-chart-line mdi-24px float-right\"></i>\r\n                  </h4>\r\n                  <h2 className=\"mb-5\">Withdraw Funds</h2>\r\n                  <button type=\"button\" className=\"btn btn-gradient-primary btn-fw mb-2 center\" onClick={handleShow1} >Click Here</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Tab>\r\n      </Tabs>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PowerOne"],"sourceRoot":""}