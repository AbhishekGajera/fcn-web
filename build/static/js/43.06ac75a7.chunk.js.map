{"version":3,"sources":["app/Admin-components/Appointment/BookAppoinments.js"],"names":["BookAppoinment","useCookies","cookies","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","onSubmit","isDirty","isValid","getValues","data","formData","JSON","stringify","user","id","toDate","fromDate","Description","CreateAppoinments","toast","success","push","response","message","error","process","className","aria-label","href","onClick","event","preventDefault","role","aria-current","style","display","justifyContent","Group","Control","type","name","required","placeholder","as","desc"],"mappings":";qgNAwJeA,UAhJQ,WAAO,IAAD,EAC3B,EAAkBC,YAAW,CAAC,SAAvBC,EAAP,oBACMC,EAAUC,cAEhB,EAKIC,YAAQ,CACVC,KAAM,aALNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAMTC,GATN,EAGuBC,QAHvB,EAGgCC,QAHhC,EAIEC,UAKY,uCAAG,WAAOC,GAAP,gFACTC,EAAWC,KAAKC,UAAU,CAC9B,YAAShB,QAAT,IAASA,GAAT,UAASA,EAASiB,YAAlB,aAAS,EAAeC,GACxB,cAAWL,QAAX,IAAWA,OAAX,EAAWA,EAAMM,OACjB,gBAAaN,QAAb,IAAaA,OAAb,EAAaA,EAAMO,SACnB,YAASP,QAAT,IAASA,OAAT,EAASA,EAAMQ,YACf,OAAW,IANE,kBAUPC,YAAkBR,GAVX,OAWbS,IAAMC,QAAQ,kCACdvB,EAAQwB,KAAK,iCAZA,gDAgBX,MACA,KAAMC,UACN,KAAMA,SAASb,MACf,KAAMa,SAASb,KAAKc,QAEpBJ,IAAMK,MAAM,KAAMF,SAASb,KAAKc,SAEhCJ,IAAMK,MAAMC,wFAvBD,yDAAH,uDA4Bd,OACE,6BACE,yBAAKC,UAAU,eACb,wBAAIA,UAAU,cAAd,kCACA,yBAAKC,aAAW,cACd,wBAAID,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGE,KAAK,KAAKC,QAAS,SAACC,GAAD,OAAWA,EAAMC,mBAAvC,OACGnC,QADH,IACGA,GADH,UACGA,EAASiB,YADZ,aACG,EAAemB,KADlB,eAIF,wBAAIN,UAAU,yBAAyBO,eAAa,QAApD,sBAMN,yBACEP,UAAU,WACVQ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAE1C,yBAAKV,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAcrB,SAAUH,EAAaG,IACnD,uBAAGqB,UAAU,oBAAb,qBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKW,MAAN,CAAYX,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,UACA,yBAAKA,UAAU,YACb,kBAAC,IAAKY,QAAN,eACEC,KAAK,iBACLC,KAAK,YACDvC,EAAS,WAAY,CAAEwC,UAAU,IAHvC,CAIEC,YAAY,cAEbtC,GAAUA,EAAOY,UAChB,oEAOV,yBAAKU,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKW,MAAN,CAAYX,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,QACA,yBAAKA,UAAU,YACb,kBAAC,IAAKY,QAAN,eACEC,KAAK,iBACLC,KAAK,UACDvC,EAAS,SAAU,CAAEwC,UAAU,IAHrC,CAIEC,YAAY,gBAQtB,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKW,MAAN,CAAYX,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,cACc,KAEd,yBAAKA,UAAU,YACb,kBAAC,IAAKY,QAAN,eACEC,KAAK,OACLC,KAAK,cACLG,GAAG,YACC1C,EAAS,cAAe,CAAEwC,UAAU,MAEzCrC,GAAUA,EAAOwC,MAChB,gEAOV,yBACElB,UAAU,OACVQ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAE1C,4BACEV,UAAU,2DACVa,KAAK,UAFP","file":"static/js/43.06ac75a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CreateAppoinments } from \"../../../utils/APIs\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst BookAppoinment = () => {\r\n  const [cookies] = useCookies([\"user\"]);\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid },\r\n    getValues,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const formData = JSON.stringify({\r\n      'user' : cookies?.user?.id,\r\n      'toDate' : data?.toDate,\r\n      'fromDate' : data?.fromDate,\r\n      'desc' : data?.Description,\r\n      'status' : 1\r\n    })\r\n\r\n    try {\r\n      await CreateAppoinments(formData);\r\n      toast.success(\"Appoinment Booked successfully\");\r\n      history.push('/appointment/fetch-appoinment');\r\n   \r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Appoinments / Book Appoinment </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Book Appoinment\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div\r\n        className=\"row auth\"\r\n        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <div className=\"col-6 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                <p className=\"card-description\"> Book Appoinment </p>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">From :</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"datetime-local\"\r\n                          name=\"fromDate\"\r\n                          {...register(\"fromDate\", { required: true })}\r\n                          placeholder=\"fromDate\"\r\n                        />\r\n                        {errors && errors.fromDate && (\r\n                          <p> selecting From is required field</p>\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">To :</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"datetime-local\"\r\n                          name=\"toDate\"\r\n                          {...register(\"toDate\", { required: false })}\r\n                          placeholder=\"toDate\"\r\n                        />\r\n                        \r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">\r\n                        Description{\" \"}\r\n                      </label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"Description\"\r\n                          as=\"textarea\"\r\n                          {...register(\"Description\", { required: true })}\r\n                        />\r\n                        {errors && errors.desc && (\r\n                          <p>description is required field</p>\r\n                        )}\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"mt-3\"\r\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                  <button\r\n                    className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                    type=\"submit\"\r\n                  >\r\n                    SUBMIT\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookAppoinment;\r\n"],"sourceRoot":""}