{"version":3,"sources":["utils/Functions/commonOptions.js","app/Admin-components/Cost/ExpenceList.js"],"names":["statusOption","value","label","roleOption","timeOption","Date","setDate","getDate","optionForExpenceType","optionForCostCategory","formateStatus","status","ExpenceList","useState","selectedExpenceType","setselectedExpenceType","selectedExpenceCategory","setselectedExpenceCategory","selectedExpenceTime","setselectedExpenceTime","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","itemlist","setitemlist","useEffect","list","getCostList","includes","user","role","id","data","items","results","totalPages","className","aria-label","href","onClick","event","preventDefault","aria-current","Group","name","onChange","e","target","selected","map","i","item","category","totalCost","type","description","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","deleteCost","finally","dismiss","DismissReason","cancel","imageURL","image","window","open","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/14.6abe935f.chunk.js","sourcesContent":["export const statusOption = [\n    { value : 0, label : 'Active' },\n    { value : 1, label : 'In Active' },\n    { value : 2, label : 'Terminated' }\n]\n\nexport const roleOption = [\n    { value : 'user', label : 'User' },\n    { value : 'admin', label : 'Admin' },\n    { value : 'IBO', label : 'IBO' },\n    { value : 'branch', label : 'Branch' }\n]\n\nexport const timeOption = [\n    { value : new Date().setDate(new Date().getDate() - 7), label : '1 week' },\n    { value : new Date().setDate(new Date().getDate() - 30), label : '1 month' },\n    { value : new Date().setDate(new Date().getDate() - 90), label : '3 month' },\n    { value : new Date().setDate(new Date().getDate() - 180), label : '6 month' },\n    { value : new Date().setDate(new Date().getDate() - 365), label : '1 Year' }\n]\n\nexport const optionForExpenceType = [\n    { value : 'Office expence', label : 'Office expence' },\n    { value : 'Employee expence', label : 'Employee expence' },\n    { value : 'Misleniuneous expence', label : 'Misleniuneous expence' },\n    { value : 'Other expence', label : 'Other expence' }\n]\n\nexport const optionForCostCategory = [\n    { value : 'Petrol', label : 'Petrol' },\n    { value : 'Food', label : 'Food' },\n    { value : 'Rent', label : 'Rent' },\n    { value : 'Tea', label : 'Tea' },\n    { value : 'Transport', label : 'Transport' },\n    { value : 'Gift', label : 'Gift' },\n    { value : 'Printing', label : 'Printing' },\n    { value : 'Advertising', label : 'Advertising' },\n    { value : 'Electricity Bill', label : 'Electricity Bill' },\n    { value : 'Cleaning', label : 'Cleaning' },\n    { value : 'Salary', label : 'Salary' },\n    { value : 'Medical Expences', label : 'Medical Expences' },\n    { value : 'Insurance', label : 'Insurance' },\n    { value : 'Legal & Professionals Fees', label : 'Legal & Professionals Fees' },\n    { value : 'Phone Bill', label : 'Phone Bill' },\n    { value : 'Internet Bill', label : 'Internet Bill' },\n    { value : 'Stationaries Bill', label : 'Stationaries Bill' },\n    { value : 'Depreciation', label : 'Depreciation' },\n    { value : 'Row materials', label : 'Row materials' },\n    { value : 'Books and magazine subscriptions', label : 'Books and magazine subscriptions' }\n]\n\nexport const formateStatus = (status) => {\n    switch (+status) {\n        case (0):\n            return 'Active';\n        case (1):\n            return 'In Active';\n        case (2):\n            return 'Terminated'            \n        default:\n            return 'Active';\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport { deleteCost, getCostList } from \"../../../utils/APIs\";\nimport Swal from \"sweetalert2\";\nimport {\n  optionForExpenceType,\n  optionForCostCategory,\n  timeOption\n} from \"../../../utils/Functions/commonOptions\";\nimport { Form } from \"react-bootstrap\";\n\nconst ExpenceList = () => {\n  const [selectedExpenceType, setselectedExpenceType] = useState(\"\");\n  const [selectedExpenceCategory, setselectedExpenceCategory] = useState(\"\");\n  const [selectedExpenceTime, setselectedExpenceTime] = useState(\"\");\n\n  // We start with an empty list of items.\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n  const [itemsPerPage] = useState(10);\n  const [cookies] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n\n  const onChangeHandlerForExpenceType = (e) => {\n    setItemOffset(0);\n    setselectedExpenceType(e.target.value);\n  };\n\n  const onChangeHandlerForExpenceCategory = (e) => {\n    setItemOffset(0);\n    setselectedExpenceCategory(e.target.value);\n  };\n\n  const onChangeHandlerForExpenceTime = (e) => {\n    setItemOffset(0);\n    setselectedExpenceTime(e.target.value);\n  };\n\n  useEffect(() => {\n    list();\n  }, [itemOffset, itemsPerPage, selectedExpenceType, selectedExpenceCategory,selectedExpenceTime]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    setItemOffset(event.selected);\n  };\n\n  const deleteBranch = (uid) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonColor: \"#DD6B55\",\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, keep it\",\n    }).then((result) => {\n      if (result.value) {\n        return (\n          deleteCost(uid).finally(() => list()),\n          Swal.fire(\n            \"Deleted!\",\n            \"Your imaginary file has been deleted.\",\n            \"success\"\n          )\n        );\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n      }\n    });\n  };\n\n  const onClickDownload = (imageURL) => {\n    window.open(imageURL, '_blank');\n  }\n\n  const list = async () => {\n    const items = await (\n      await getCostList(\n        itemsPerPage,\n        +itemOffset + 0,\n        selectedExpenceCategory,\n        selectedExpenceType,\n        [\"IBO\",\"branch\"].includes(cookies?.user?.role) ? cookies?.user?.id : ''\n      )\n    ).data;\n    setitemlist(items?.results);\n    setPageCount(items?.totalPages);\n  };\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">costs / Fetch Costs </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Fetch Costs\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"row\">\n\n              <div className=\"col-md-6\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-4 col-form-label\">\n                    Select Expence Category\n                  </label>\n                  <div className=\"col-sm-8\">\n                    <select\n                      className=\"form-control form-control-sm\"\n                      id=\"exampleFormControlSelect2\"\n                      name=\"branch\"\n                      onChange={onChangeHandlerForExpenceCategory}\n                    >\n                      <option\n                        selected={\"\" === selectedExpenceCategory}\n                        value={\"\"}\n                      >\n                        Not Selected\n                      </option>\n                      {optionForCostCategory?.map((i) => {\n                        return (\n                          <>\n                            <option\n                              selected={i.value === selectedExpenceCategory}\n                              value={i.value}\n                            >\n                              {i.label}\n                            </option>\n                          </>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </Form.Group>\n              </div>\n\n              <div className=\"col-md-6\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-4 col-form-label\">\n                    Select Time\n                  </label>\n                  <div className=\"col-sm-8\">\n                    <select\n                      className=\"form-control form-control-sm\"\n                      id=\"exampleFormControlSelect2\"\n                      name=\"branch\"\n                      onChange={onChangeHandlerForExpenceTime}\n                    >\n                      <option\n                        selected={\"\" === selectedExpenceTime}\n                        value={\"\"}\n                      >\n                        Not Selected\n                      </option>\n                      {timeOption?.map((i) => {\n                        return (\n                          <>\n                            <option\n                              selected={i.value === selectedExpenceTime}\n                              value={i.value}\n                            >\n                              {i.label}\n                            </option>\n                          </>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </Form.Group>\n              </div>\n\n              <div className=\"col-md-6\">\n                <Form.Group className=\"row\">\n                  <label className=\"col-sm-4 col-form-label\">\n                    Select Expence Type\n                  </label>\n                  <div className=\"col-sm-8\">\n                    <select\n                      className=\"form-control form-control-sm\"\n                      id=\"exampleFormControlSelect2\"\n                      name=\"branch\"\n                      onChange={onChangeHandlerForExpenceType}\n                    >\n                      <option selected={\"\" === selectedExpenceType} value={\"\"}>\n                        Not Selected\n                      </option>\n                      {optionForExpenceType?.map((i) => {\n                        return (\n                          <>\n                            <option\n                              selected={i.value === selectedExpenceType}\n                              value={i.value}\n                            >\n                              {i.label}\n                            </option>\n                          </>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </Form.Group>\n              </div>\n            </div>\n            <h4 className=\"card-title\">Expence list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Expence Category </th>\n                    <th> Total Expence </th>\n                    <th> Type </th>\n                    <th> Description </th>\n                    <th> User </th>\n                    <th> User Type</th>\n                    <th> Delete </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {itemlist?.map((item) => {\n                    return (\n                      <tr>\n                        <td>{item?.category}</td>\n                        <td>{item?.totalCost}</td>\n                        <td>{item?.type}</td>\n                        <td>{item?.description}</td>\n                        <td>{item?.user?.name}</td>\n                        <td>{item?.user?.role}</td>\n                        <td>\n                          <i\n                            onClick={() => deleteBranch(item?.id)}\n                            className=\"mdi mdi-delete\"\n                          ></i>\n                        </td>\n                        <td>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-gradient-primary btn-sm \"\n                            onClick={() => onClickDownload(item?.image)}\n                          >\n                            Download Invoice\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n                forcePage={itemOffset}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenceList;\n"],"sourceRoot":""}