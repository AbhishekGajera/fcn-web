{"version":3,"sources":["app/client-component/travel/PassportList.js"],"names":["PassportList","useState","pageCount","setPageCount","useUrl","itemOffset","setItemOffset","itemsPerPage","useCookies","cookies","setCookie","itemlist","setitemlist","valueToEdit","setvalueToEdit","React","show","setShow","isLoading","setIsLoading","history","useHistory","useForm","mode","register","handleSubmit","reset","formState","errors","isDirty","isValid","useEffect","list","onSubmit","data","formData","FormData","append","id","name","city","isOutIndiaBirth","pan","surname","voter","updatePassport","toast","success","autoClose","response","message","error","process","deletepassport","uid","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","value","deletePassport","dismiss","DismissReason","cancel","getPassports","items","results","totalPages","code","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","type","defaultValue","required","placeholder","style","color","htmlFor","selected","gender","checked","aria-label","href","onClick","event","preventDefault","user","role","aria-current","Fragment","map","item","index","key","moment","dob","format","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","forcePage"],"mappings":"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","file":"static/js/95.a0cf196b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { deletePassport, updatePassport, getPassports, userLogout } from \"../../../utils/APIs\";\r\nimport Swal from \"sweetalert2\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport { useUrl } from \"../../../utils/Functions/useUrl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst PassportList = () => {\r\n  // We start with an empty list of items.\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useUrl(\"page\");\r\n  const [itemsPerPage] = useState(20);\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [itemlist, setitemlist] = useState([]);\r\n  const [valueToEdit, setvalueToEdit] = useState({});\r\n  const [show, setShow] = React.useState(false);\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, reset, formState: { errors, isDirty, isValid } } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  const handleShow = (value) => {\r\n    reset()\r\n    setvalueToEdit(value)\r\n    setShow(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    setvalueToEdit({})\r\n    reset()\r\n  };\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, [itemOffset, itemsPerPage]);\r\n\r\n  // Invoke when user click to request another page. \r\n  const handlePageClick = (event) => {\r\n    setItemOffset(event.selected);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append(\"id\", valueToEdit?.id);\r\n      formData.append(\"name\", data?.name)\r\n      formData.append(\"city\", data?.city)\r\n      formData.append(\"isOutIndiaBirth\", data?.isOutIndiaBirth)\r\n      formData.append(\"name\", data?.name)\r\n      formData.append(\"pan\", data?.pan)\r\n      formData.append(\"surname\", data?.surname)\r\n      formData.append(\"voter\", data?.voter)\r\n      await updatePassport(valueToEdit?.id,formData)\r\n      toast.success('Passport updated Successfully', {\r\n        autoClose: 3000\r\n      })\r\n      list()\r\n    } catch (error) {\r\n      if (\r\n        error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n    } finally {\r\n      setShow(false)\r\n    }\r\n  };\r\n\r\n  const deletepassport = async (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      cancelButtonColor: \"#DD6B55\",\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        await deletePassport(uid)\r\n        Swal.fire(\r\n          \"Deleted!\",\r\n          \"Your imaginary file has been deleted.\",\r\n          \"success\"\r\n        )\r\n        list()\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const list = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const items = await (\r\n        await getPassports(\r\n          itemsPerPage,\r\n          +itemOffset + 1,\r\n        )\r\n      ).data;\r\n      setitemlist(items?.results);\r\n      setPageCount(items?.totalPages);\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      if (error?.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE);\r\n      }\r\n\r\n      if (error?.response?.data?.code === 401) {\r\n        const formData = JSON.stringify({\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        });\r\n        setCookie(\"user\", null, { path: \"/\" });\r\n        userLogout(formData).finally(() => {\r\n          history.push(\"/user-pages/login-1\");\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Passport</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row auth\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <form className=\"form-sample\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <p className=\"card-description\"> Update Passport </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">\r\n                            Name\r\n                          </label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              defaultValue={valueToEdit.name}\r\n                              {...register(\"name\", { required: true })}\r\n                              placeholder=\"name\"\r\n                            />\r\n                            {errors && errors.name && <p>Name is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Surname</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"surname\"\r\n                              defaultValue={valueToEdit.surname}\r\n                              placeholder=\"Enter Your surname\"\r\n                              {...register(\"surname\", { required: true })} />\r\n                            {errors && errors.surname && <p style={{ color: \"red\" }}>surname is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\" htmlFor=\"exampleFormControlSelect1\">Gender</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select className=\"form-control form-control-lg\" name=\"gender\" {...register(\"gender\")} id=\"exampleFormControlSelect1\">\r\n                              <option selected={valueToEdit.gender === 'Male'} value=\"Male\">Male</option>\r\n                              <option selected={valueToEdit.gender === 'Female'} value=\"Female\">Female</option>\r\n                              <option selected={valueToEdit.gender === 'Transgender'} value=\"Transgender\">Transgender</option>\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"row\" >\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\" htmlFor=\"exampleFormControlSelect1\">Date Of Birth</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control type=\"date\"\r\n                              name=\"dob\"\r\n                              value={valueToEdit.dob}\r\n                              placeholder=\"Enter Your Date of Birth\"\r\n                              {...register(\"dob\", { required: true })} />\r\n                            {errors && errors.dob && <p style={{ color: \"red\" }}>Date of birth is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-6 col-form-label\">Is Your Place of Birth out of India? *</label>\r\n                          <div className=\"col-sm-3\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input type=\"radio\" className=\"form-check-input\" checked={valueToEdit.isOutIndiaBirth === 'yes'} name=\"isOutIndiaBirth\" {...register(\"isOutIndiaBirth\", { required: false })} value=\"yes\" id=\"membershipRadios1\" /> Yes\r\n                                <i className=\"input-helper\"></i>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-sm-3\">\r\n                            <div className=\"form-check\">\r\n                              <label className=\"form-check-label\">\r\n                                <input type=\"radio\" className=\"form-check-input\" checked={valueToEdit.isOutIndiaBirth === 'no'} name=\"isOutIndiaBirth\" {...register(\"isOutIndiaBirth\", { required: false })} value=\"no\" id=\"membershipRadios2\" /> No\r\n                                <i className=\"input-helper\"></i>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">City</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"city\"\r\n                              value={valueToEdit.city}\r\n                              placeholder=\"Enter Your city\"\r\n                              {...register(\"city\", { required: true })} />\r\n                            {errors && errors.city && <p style={{ color: \"red\" }}>City is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-5 col-form-label\">PAN Number</label>\r\n                          <div className=\"col-sm-7\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"pan\"\r\n                              value={valueToEdit.pan}\r\n                              placeholder=\"Enter Your PanNumber\"\r\n                              {...register(\"pan\", { required: true })} />\r\n                            {errors && errors.pan && <p style={{ color: \"red\" }}>PAN Number is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-5 col-form-label\">Voter ID Number</label>\r\n                          <div className=\"col-sm-7\">\r\n                            <Form.Control type=\"text\"\r\n                              name=\"voter\"\r\n                              value={valueToEdit.voter}\r\n                              placeholder=\"Enter Your Voter ID\"\r\n                              {...register(\"voter\", { required: true })} />\r\n                            {errors && errors.voter && <p style={{ color: \"red\" }}>voter id is required field</p>}\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <button\r\n                        className=\"btn  btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                        type=\"submit\"\r\n                      >\r\n                        UPDATE\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </Modal.Body >\r\n      </Modal >\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\">Travel / Show Passport </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\r\n                {cookies?.user?.role} Dashboard\r\n              </a>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Show Passport\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n              </div>\r\n            </div>\r\n            <h4 className=\"card-title\">Passports list</h4>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th> Name </th>\r\n                    <th> Pancard </th>\r\n                    <th> City </th>\r\n                    <th> Voter Id </th>\r\n                    <th> Date of Birth </th>\r\n                    <th> Edit </th>\r\n                    <th> Delete </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    isLoading ? <React.Fragment><Spinner /></React.Fragment>\r\n                      :\r\n                      itemlist?.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{item?.name +' '+ item?.surname}</td>\r\n                            <td>{item?.pan}</td>\r\n                            <td>{item?.city}</td>\r\n                            <td>{item?.voter}</td>\r\n                            <td>{moment(item?.dob).format('DD/MM/YYYY')}</td>\r\n                            <td><i onClick={() => handleShow(item)} className=\"mdi mdi-lead-pencil\"></i></td>\r\n                            <td>\r\n                              <i\r\n                                onClick={() => deletepassport(item?.id)}\r\n                                className=\"mdi mdi-delete\"\r\n                              ></i>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                </tbody>\r\n              </table>\r\n              <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                className=\"client-list\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={itemOffset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default PassportList;\r\n"],"sourceRoot":""}